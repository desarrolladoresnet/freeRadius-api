var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.124,1,2.846]],["body/controllers/AppController.html",[0,1.982,1,5.021,2,1.736,3,0.208,4,0.185,5,0.185,6,5.127,7,0.435,8,2.135,9,6.694,10,0.912,11,0.014,12,0.549,13,5.9,14,1.802,15,1.126,16,0.246,17,1.155,18,4.648,19,5.127,20,0.208,21,0.204,22,2.817,23,2.366,24,1.802,25,5.9,26,0.012,27,0.012]],["title/modules/AppModule.html",[28,1.166,29,2.846]],["body/modules/AppModule.html",[1,4.231,2,1.499,3,0.128,4,0.113,5,0.113,11,0.015,16,0.287,17,0.709,18,4.358,19,3.148,20,0.128,21,0.125,26,0.009,27,0.009,28,1.733,29,5.873,30,1.515,31,1.515,32,1.652,33,1.652,34,1.515,35,2.687,36,1.652,37,3.148,38,3.148,39,3.148,40,4.358,41,4.657,42,4.964,43,4.657,44,4.657,45,4.657,46,4.657,47,4.358,48,4.657,49,4.657,50,2.324,51,1.652,52,1.652,53,3.623,54,2.433,55,1.961,56,1.961,57,2.13,58,1.73,59,1.106,60,3.623,61,2.602,62,3.623,63,3.623,64,3.623,65,3.623,66,3.623,67,3.623,68,3.623,69,3.623,70,3.623,71,3.623,72,2.26,73,2.415,74,3.623,75,3.623,76,2.835,77,2.13,78,3.623,79,2.551,80,3.623,81,3.178,82,3.623,83,1.743,84,2.835,85,2.827,86,2.835,87,1.884,88,2.835,89,2.13,90,3.623,91,2.223,92,3.623,93,2.433,94,2.835,95,2.827,96,3.623,97,2.827,98,3.623,99,3.623,100,3.623,101,3.623,102,3.623,103,3.623,104,3.623,105,1.815,106,3.623,107,0.474,108,3.148,109,5.094,110,3.623,111,3.987,112,5.094,113,1.733,114,2.813,115,3.623,116,4.611,117,3.623,118,3.623,119,5.891,120,2.835,121,3.623,122,3.623,123,3.623,124,3.623,125,1.581,126,3.623,127,2.827,128,3.623,129,0.954,130,3.148,131,3.623,132,3.623,133,2.835,134,2.835]],["title/injectables/AppService.html",[18,2.472,135,1.124]],["body/injectables/AppService.html",[3,0.213,4,0.189,5,0.189,7,0.445,8,2.164,9,6.743,11,0.014,12,0.561,14,1.843,15,1.141,16,0.213,17,1.181,18,4.42,20,0.213,21,0.209,24,1.843,26,0.012,27,0.012,135,2.009,136,2.753,137,5.244,138,6.035,139,6.035,140,6.035]],["title/classes/ChangePlanDto.html",[21,0.137,141,2.472]],["body/classes/ChangePlanDto.html",[3,0.174,4,0.154,5,0.154,7,0.364,10,0.969,11,0.015,12,0.583,15,1.286,16,0.174,20,0.221,21,0.238,26,0.011,27,0.011,83,2.143,107,0.583,113,2.131,129,1.813,141,3.909,142,1.565,143,3.863,144,0.966,145,3.821,146,4.59,147,2.053,148,1.553,149,3.448,150,1.408,151,4.178,152,4.944,153,1.274,154,5.388,155,3.299,156,4.936,157,4.936,158,3.679,159,2.825,160,2.904,161,2.904,162,1.625,163,3.863,164,3.079,165,2.599,166,2.154,167,2.62,168,2.74,169,1.452,170,3.291,171,3.079,172,1.452,173,2.898,174,2.472,175,3.079,176,2.898,177,2.898,178,3.545]],["title/controllers/CoaController.html",[0,1.124,179,2.846]],["body/controllers/CoaController.html",[0,1.041,2,1.081,3,0.129,4,0.115,5,0.115,7,0.271,8,1.571,10,0.994,11,0.015,12,0.598,14,2.245,15,1.203,16,0.209,17,0.719,20,0.129,21,0.127,22,1.754,23,1.473,24,1.964,26,0.009,27,0.009,83,2.588,107,0.598,113,2.226,114,2.456,129,1.355,141,4.223,144,1.259,147,2.084,148,1.046,149,2.576,150,1.492,151,4.288,152,2.638,164,4.494,179,3.694,180,3.192,181,1.84,182,4.646,183,1.76,184,2.062,185,4.47,186,5.144,187,1.902,188,3.095,189,4.47,190,4.47,191,5.144,192,4.47,193,3.192,194,5.144,195,3.673,196,4.901,197,1.734,198,5.144,199,4.619,200,2.117,201,0.994,202,1.892,203,2.579,204,3.192,205,5.144,206,3.673,207,2.117,208,3.221,209,2.595,210,4.47,211,2.495,212,3.209,213,3.02,214,3.694,215,1.76,216,2.576,217,3.209,218,3.673,219,5.144,220,3.673,221,2.708,222,3.209,223,4.47,224,3.192,225,5.144,226,3.673,227,5.144,228,4.47,229,2.15,230,2.464,231,1.84,232,1.84,233,3.485,234,3.192,235,3.673,236,3.673,237,3.673,238,5.144,239,3.673,240,3.673,241,3.673,242,3.673,243,3.673,244,3.673,245,3.673]],["title/classes/CoaDto.html",[21,0.137,164,2.472]],["body/classes/CoaDto.html",[3,0.16,4,0.142,5,0.142,7,0.335,10,1.155,11,0.015,12,0.694,15,1.298,16,0.16,20,0.209,21,0.229,26,0.01,27,0.01,83,1.551,107,0.694,113,2.064,129,1.742,141,2.829,142,1.438,143,3.549,144,0.888,145,3.67,146,4.409,147,2.064,148,1.518,149,3.312,150,1.321,151,3.023,152,4.749,153,1.206,154,3.549,155,3.124,158,3.483,159,2.762,160,2.812,161,2.854,162,1.493,163,4.643,164,3.701,165,3.482,166,2.886,167,2.932,168,3.293,169,1.746,170,3.955,171,3.701,172,1.746,173,3.483,174,2.971,175,3.701,176,3.882,177,3.882,178,4.749,246,3.94,247,4.535,248,3.67,249,4.535,250,4.535,251,4.535,252,4.535,253,4.535]],["title/modules/CoaModule.html",[28,1.166,40,2.472]],["body/modules/CoaModule.html",[2,1.751,3,0.161,4,0.143,5,0.143,11,0.015,16,0.28,17,0.892,20,0.161,21,0.158,26,0.01,27,0.01,28,1.95,30,1.905,31,1.905,32,2.078,33,2.078,34,1.905,35,3.023,36,3.023,40,4.873,50,2.714,51,2.078,52,2.078,54,2.176,58,2.176,59,1.391,61,3.272,77,2.488,81,3.713,89,2.488,91,2.597,97,3.303,114,2.842,144,0.892,150,1.455,152,3.272,179,4.76,182,5.499,196,3.968,197,1.404,199,4.274,207,1.959,233,4.691,254,3.959,255,3.959,256,3.959,257,4.15,258,4.556,259,2.714,260,3.713,261,1.961,262,2.981,263,5.171,264,2.146,265,5.951,266,3.133,267,5.951,268,3.133,269,5.951,270,2.488,271,5.951,272,5.951,273,5.171,274,5.171,275,4.556,276,2.675,277,3.959,278,2.842,279,2.675,280,3.959,281,3.272,282,3.959]],["title/injectables/CoaService.html",[135,1.124,233,2.327]],["body/injectables/CoaService.html",[3,0.036,4,0.032,5,0.032,7,0.076,8,0.561,11,0.015,12,0.416,14,1.674,15,1.117,16,0.188,17,0.201,20,0.036,21,0.036,23,1.393,24,1.51,26,0.003,27,0.003,59,0.314,61,0.738,72,1.552,76,0.805,77,2.291,81,3.319,83,1.432,89,2.224,91,1.086,97,0.571,107,0.416,113,2.132,114,1.999,127,0.571,129,1.803,135,0.521,136,0.469,141,2.167,144,0.487,147,1.458,148,1.512,149,0.919,150,1.419,151,0.685,154,3.018,164,2.611,165,0.541,166,0.801,167,0.43,169,2.206,172,1.655,174,0.919,176,3.577,178,3.212,182,5.189,183,0.352,187,2.129,188,2.309,189,1.595,190,1.595,192,1.595,193,1.595,197,1.703,200,1.472,201,0.691,202,1.316,203,1.213,204,1.595,207,1.972,208,3.32,209,1.968,210,1.595,211,1.758,212,1.145,213,1.078,214,2.77,215,2.2,216,1.932,217,1.145,221,0.967,222,1.145,223,1.595,224,1.595,229,0.43,230,1.432,233,1.078,234,0.893,257,1.679,261,1.306,262,2.24,263,3.019,264,0.76,266,0.967,268,1.592,274,3.637,276,0.604,277,0.893,278,0.641,280,0.893,281,0.738,283,0.893,284,2.487,285,1.836,286,1.836,287,1.836,288,0.919,289,1.028,290,2.617,291,2.487,292,1.947,293,3.024,294,2.487,295,1.028,296,1.028,297,1.836,298,3.857,299,3.024,300,2.626,301,3.019,302,3.024,303,3.654,304,2.943,305,2.135,306,3.024,307,3.886,308,4.472,309,2.456,310,3.5,311,3.857,312,4.472,313,4.472,314,3.886,315,2.79,316,4.472,317,4.104,318,2.626,319,4.624,320,3.533,321,4.472,322,4.472,323,4.945,324,1.028,325,2.167,326,2.172,327,1.028,328,5.481,329,1.028,330,1.836,331,3.474,332,1.836,333,4.186,334,1.318,335,1.836,336,1.028,337,1.836,338,1.437,339,1.318,340,1.836,341,2.167,342,4.186,343,1.595,344,2.167,345,1.836,346,1.836,347,0.885,348,1.028,349,1.836,350,1.028,351,1.595,352,1.437,353,1.836,354,1.836,355,1.595,356,1.836,357,1.836,358,1.224,359,1.836,360,1.028,361,3.857,362,1.836,363,3,364,0.515,365,0.515,366,1.028,367,0.893,368,0.314,369,1.028,370,1.028,371,1.028,372,0.805,373,0.805,374,1.932,375,1.028,376,0.805,377,0.893,378,3.939,379,1.836,380,1.028,381,1.74,382,2.487,383,2.504,384,1.028,385,1.028,386,1.74,387,1.028,388,1.028,389,1.028,390,3.024,391,1.028,392,3.051,393,1.028,394,1.028,395,0.893,396,1.836,397,0.893,398,0.893,399,3.183,400,0.893,401,1.028,402,1.028,403,3.568,404,1.028,405,1.028,406,1.028,407,1.444,408,2.135,409,3.46,410,1.836,411,3.024,412,1.592,413,3.857,414,2.487,415,1.461,416,2.886,417,3.289,418,3.673,419,3.095,420,2.565,421,4.768,422,3.095,423,2.981,424,3.697,425,0.541,426,2.487,427,3.351,428,3.552,429,1.829,430,2.162,431,2.77,432,2.487,433,1.028,434,2.162,435,1.947,436,2.487,437,0.451,438,2.487,439,2.487,440,3.149,441,0.893,442,0.789,443,1.028,444,0.805,445,2.487,446,2.487,447,2.487,448,1.836,449,1.836,450,1.836,451,1.028,452,2.487,453,2.487,454,4.104,455,2.487,456,2.487,457,2.487,458,2.487,459,2.487,460,4.472,461,3.024,462,3.024,463,1.028,464,4.472,465,3.024,466,1.836,467,1.028,468,1.187,469,2.016,470,1.461,471,1.836,472,1.028,473,0.805,474,2.944,475,1.028,476,2.367,477,1.515,478,1.515,479,1.836,480,1.836,481,1.595,482,1.836,483,1.836,484,1.028,485,1.028,486,1.028,487,1.836,488,1.028,489,1.028,490,1.028,491,1.028,492,1.028,493,1.028,494,1.028,495,1.028,496,2.487,497,2.487,498,2.487,499,2.487,500,2.487,501,2.487,502,2.495,503,1.028,504,1.028,505,1.836,506,0.893,507,0.805,508,1.028,509,1.595,510,1.028,511,1.028,512,1.028,513,1.028,514,0.805,515,1.028,516,1.028,517,1.028,518,1.836,519,1.028,520,1.028,521,1.028,522,0.805]],["title/classes/CreateNodeDto.html",[21,0.137,523,2.472]],["body/classes/CreateNodeDto.html",[3,0.199,4,0.176,5,0.176,7,0.416,10,1.052,11,0.014,12,0.679,15,1.095,16,0.24,20,0.199,21,0.236,26,0.012,27,0.012,87,2.702,107,0.679,142,1.787,153,1.383,158,3.309,159,2.806,160,2.26,161,2.516,162,1.856,201,1.13,437,1.324,523,4.244,524,6.593,525,4.411,526,4.558,527,1.052,528,5.636,529,4.411,530,5.636,531,5.636,532,2.571,533,2.968]],["title/classes/CreatePlanDto.html",[21,0.137,534,2.472]],["body/classes/CreatePlanDto.html",[3,0.202,4,0.179,5,0.179,7,0.422,10,1.062,11,0.014,12,0.638,15,1.228,16,0.242,20,0.242,21,0.255,26,0.012,27,0.012,107,0.638,142,1.815,153,1.396,159,2.72,161,2.72,162,1.885,201,1.137,529,5.374,534,4.284,535,4.481,536,4.589,537,5.725,538,5.725,539,3.817,540,3.572,541,3.572,542,3.572,543,3.817,544,4.975]],["title/classes/CreateServiceDto.html",[21,0.137,545,2.472]],["body/classes/CreateServiceDto.html",[3,0.181,4,0.161,5,0.161,7,0.379,10,1.169,11,0.014,12,0.717,16,0.247,20,0.181,21,0.222,26,0.011,27,0.011,83,2.639,87,2.593,107,0.717,142,1.629,153,1.306,158,3.016,159,2.895,162,1.691,420,3.06,437,1.271,527,1.224,532,3.45,533,2.705,545,4.009,546,6.127,547,4.021,548,5.036,549,5.036,550,4.675,551,5.137,552,4.464,553,5.137,554,4.464,555,5.137,556,5.137,557,5.137,558,4.464,559,4.464,560,4.464,561,3.425,562,4.464,563,5.137]],["title/classes/CreateSystemDto.html",[21,0.137,564,2.472]],["body/classes/CreateSystemDto.html",[3,0.196,4,0.174,5,0.174,7,0.41,10,1.122,11,0.014,12,0.702,15,1.266,16,0.196,20,0.196,21,0.233,26,0.012,27,0.012,107,0.702,142,1.76,153,1.37,155,3.821,159,2.791,161,2.791,162,1.827,201,1.122,437,1.316,527,1.042,546,6.053,564,4.204,565,4.344,566,5.212,567,5.212,568,5.55,569,5.55,570,5.55,571,5.55]],["title/entities/Nas.html",[77,1.657,572,1.166]],["body/entities/Nas.html",[3,0.149,4,0.133,5,0.133,7,0.313,10,1.191,11,0.014,12,0.716,15,1.287,16,0.149,20,0.149,21,0.147,26,0.01,27,0.01,55,1.631,56,1.631,57,1.771,77,2.673,105,3.42,107,0.759,125,1.849,127,4.386,144,1.251,153,1.153,176,3.754,177,3.754,201,0.655,368,1.294,435,5.004,437,1.159,527,1.056,572,1.669,573,3.681,574,4.592,575,4.592,576,5.556,577,3.631,578,4.003,579,4.003,580,4.928,581,4.474,582,4.237,583,3.781,584,4.237,585,3.053,586,4.237,587,4.439,588,4.237,589,2.986,590,4.237,591,4.439,592,4.237,593,4.073,594,4.237,595,4.439,596,4.237,597,4.928,598,4.237,599,3.512]],["title/controllers/NasController.html",[0,1.124,600,2.846]],["body/controllers/NasController.html",[0,1.106,2,1.148,3,0.137,4,0.122,5,0.122,7,0.288,8,1.638,10,1.02,11,0.015,12,0.614,14,2.278,16,0.216,17,0.763,20,0.137,21,0.135,22,1.863,23,1.564,24,2.015,26,0.009,27,0.009,77,3.233,107,0.57,129,1.883,144,1.199,145,3.663,150,1.01,169,1.578,171,3.345,172,1.578,181,1.954,183,1.834,184,2.15,197,1.557,200,2.018,201,0.947,202,1.803,207,2.173,209,2.759,211,1.907,221,3.475,222,4.117,230,2.367,231,2.686,232,3.069,261,1.362,266,2.823,273,4.66,305,2.561,318,3.875,347,1.387,437,1.296,442,1.7,468,1.871,527,1.153,600,3.851,601,3.389,602,5.362,603,5.362,604,5.362,605,5.362,606,4.197,607,5.362,608,2.759,609,5.362,610,4.66,611,6.599,612,3.851,613,4.66,614,3.389,615,4.46,616,3.9,617,2.34,618,3.9,619,3.053,620,2.976,621,3.9,622,4.197,623,3.389,624,4.117,625,2.976,626,3.9,627,2.064,628,2.054,629,3.598,630,3.389,631,3.389,632,3.9,633,2.359,634,3.9,635,3.9,636,3.9,637,3.389,638,3.9,639,3.9,640,3.9]],["title/classes/NasDto.html",[21,0.137,615,2.472]],["body/classes/NasDto.html",[3,0.156,4,0.138,5,0.138,7,0.326,10,1.186,11,0.015,12,0.713,15,1.322,16,0.156,20,0.206,21,0.226,26,0.01,27,0.01,107,0.739,142,1.4,144,1.359,147,1.653,153,1.185,155,3.07,158,3.833,159,2.568,160,3.222,161,2.958,162,1.454,167,2.902,168,3.237,169,1.716,170,3.888,171,3.638,172,1.716,173,3.424,174,2.921,175,3.638,176,4.076,177,4.076,201,1.073,246,3.838,248,3.854,431,4.986,527,1.009,532,2.978,574,4.986,575,4.986,615,3.638,624,2.756,641,3.457,642,4.417,643,4.417,644,4.417,645,4.417,646,2.452,647,4.417,648,4.417,649,4.417,650,4.417]],["title/classes/NasDtoUpdate.html",[21,0.137,624,2.472]],["body/classes/NasDtoUpdate.html",[3,0.159,4,0.141,5,0.141,7,0.333,10,1.192,11,0.015,12,0.717,15,1.324,16,0.159,20,0.208,21,0.228,26,0.01,27,0.01,107,0.742,142,1.431,144,1.37,147,1.28,153,1.202,158,3.874,159,2.589,160,3.231,161,2.967,162,1.486,167,2.473,168,2.505,169,1.328,170,3.009,171,2.816,172,1.328,173,2.65,174,2.261,175,2.816,176,4.111,177,4.111,201,1.082,248,4.14,431,5.028,527,1.02,532,3.009,574,5.028,575,5.028,615,2.816,624,3.69,641,3.533,646,2.505,651,4.513,652,4.513,653,4.513,654,4.513,655,4.513,656,4.513,657,4.513,658,4.513,659,4.513]],["title/modules/NasModule.html",[28,1.166,41,2.642]],["body/modules/NasModule.html",[2,1.826,3,0.171,4,0.152,5,0.152,11,0.014,16,0.273,17,0.952,20,0.171,21,0.168,26,0.011,27,0.011,28,2.011,30,2.032,31,2.032,32,2.218,33,2.218,34,2.032,35,3.118,36,2.218,41,5.072,50,2.831,51,2.218,52,2.218,54,2.322,58,2.322,59,1.485,77,3.011,91,2.122,95,3.445,144,0.952,147,2.042,148,1.261,150,1.357,169,2.119,173,3.644,184,2.488,185,5.392,197,1.699,211,2.207,259,3.285,260,3.872,261,1.576,264,1.895,276,2.855,278,3.033,309,2.963,468,2.042,600,4.909,629,4.467,630,4.224,660,4.224,661,4.224,662,4.861,663,6.206,664,5.392,665,6.206,666,6.206,667,6.206,668,6.206,669,6.206,670,4.857,671,6.206,672,4.137,673,6.206,674,4.861,675,3.805,676,4.224]],["title/injectables/NasService.html",[135,1.124,629,2.327]],["body/injectables/NasService.html",[3,0.111,4,0.098,5,0.098,7,0.231,8,1.403,11,0.015,12,0.592,14,2.032,16,0.224,17,0.614,20,0.111,21,0.109,24,0.958,26,0.008,27,0.008,59,0.958,77,3.097,107,0.592,113,0.923,129,1.857,135,1.302,136,1.431,144,0.899,145,2.55,147,0.889,148,1.353,149,1.571,150,0.865,168,1.741,169,1.352,172,1.352,176,3.191,177,1.842,183,2.276,184,1.842,187,1.699,188,2.931,196,2.091,197,1.748,200,1.97,201,1.063,202,1.76,203,2.399,207,1.033,209,2.355,211,1.633,221,2.419,222,2.866,229,1.921,230,1.073,261,1.166,264,1.827,278,1.957,288,2.301,290,2.857,292,3.595,300,2.697,303,2.091,304,1.369,320,2.997,325,3.391,326,2.253,347,1.115,363,2.722,364,1.571,365,1.571,368,0.958,374,1.571,376,2.455,378,3.711,381,2.301,383,2.272,386,1.571,392,2.997,399,2.722,403,2.997,407,1.498,408,2.857,409,3.283,412,2.419,415,2.697,416,2.419,417,2.997,418,3.15,419,2.419,420,2.005,422,2.419,423,2.091,424,2.455,425,1.652,429,1.652,431,4.297,434,2.726,435,3.595,437,0.985,442,2.019,468,1.806,474,2.722,477,1.571,478,1.571,527,0.925,574,2.253,575,2.253,576,2.726,608,2.272,610,3.992,613,3.992,614,3.992,615,3.973,623,2.726,624,3.391,627,1.207,629,2.697,631,2.726,633,1.207,677,2.726,678,5.983,679,3.063,680,3.137,681,3.137,682,3.137,683,3.017,684,4.594,685,3.137,686,2.301,687,2.091,688,3.137,689,3.137,690,2.253,691,1.311,692,1.957,693,3.137,694,3.137,695,2.253,696,1.652,697,2.455,698,2.301,699,2.091,700,3.137,701,2.726,702,3.137,703,3.137,704,3.503,705,2.253,706,2.866,707,1.652,708,3.137,709,1.957,710,1.842,711,2.455,712,2.726,713,3.137,714,3.137,715,3.137,716,3.137,717,3.137,718,4.594,719,3.137,720,3.137,721,3.137,722,3.137,723,3.137,724,3.137,725,3.137,726,3.137,727,3.137,728,3.137,729,2.726,730,1.652,731,1.957,732,1.957,733,1.957,734,3.137,735,3.137,736,3.137]],["title/controllers/NodesController.html",[0,1.124,737,2.846]],["body/controllers/NodesController.html",[0,0.935,2,0.97,3,0.116,4,0.103,5,0.103,7,0.243,8,1.455,10,1.004,11,0.015,12,0.604,14,2.224,16,0.229,17,0.645,20,0.116,21,0.114,22,1.575,23,1.322,24,1.984,26,0.008,27,0.008,55,1.269,56,1.269,57,1.379,93,2.925,107,0.569,114,2.275,129,1.882,144,0.645,148,1.376,150,1.276,169,1.992,181,1.652,183,2.445,184,1.91,187,1.762,188,2.242,197,1.744,200,2.017,201,0.947,202,1.802,203,1.322,209,2.643,211,1.694,229,1.991,230,2.316,231,2.386,232,2.801,259,2.173,261,1.815,262,2.386,270,1.991,300,2.797,304,2.673,344,2.972,347,1.172,383,1.379,437,1.384,442,2.266,468,2.026,522,3.728,523,4.053,527,1.17,608,1.991,617,2.079,620,2.644,625,2.644,627,1.834,628,1.736,633,2.153,686,2.386,697,3.728,698,2.386,707,2.508,709,2.972,710,3.597,737,3.421,738,2.865,739,4.377,740,4.084,741,4.139,742,4.763,743,3.421,744,4.139,745,3.176,746,3.176,747,3.728,748,4.139,749,4.139,750,3.728,751,2.644,752,4.139,753,4.139,754,3.176,755,2.644,756,4.139,757,5.323,758,4.139,759,4.139,760,4.139,761,3.297,762,3.297,763,3.297,764,2.865,765,3.297,766,3.728,767,4.084,768,2.865,769,3.421,770,3.297,771,3.421,772,2.865,773,4.514,774,3.297,775,4.763,776,2.972,777,2.198,778,3.489,779,2.865,780,2.865,781,4.377,782,2.368,783,2.368,784,3.297,785,3.297,786,3.297,787,3.297,788,3.297,789,3.297,790,3.297,791,3.297,792,3.297,793,3.297]],["title/modules/NodesModule.html",[28,1.166,42,2.642]],["body/modules/NodesModule.html",[2,1.786,3,0.166,4,0.147,5,0.147,11,0.014,16,0.266,17,0.919,20,0.166,21,0.163,26,0.011,27,0.011,28,1.979,30,1.963,31,1.963,32,2.142,33,2.142,34,1.963,35,3.067,36,2.142,42,5.026,50,2.768,51,2.142,52,2.142,54,2.243,58,2.243,59,1.434,87,1.737,93,3.394,94,3.676,114,2.898,144,0.919,148,1.234,150,1.339,169,2.218,187,2.245,197,1.432,211,2.158,229,2.537,259,2.768,261,1.974,262,3.04,270,2.537,304,2.649,344,3.786,442,1.924,468,1.721,522,4.75,533,2.473,697,4.75,698,3.04,709,3.786,710,3.564,737,4.83,739,4.75,740,4.739,741,5.274,743,4.359,744,5.274,745,4.047,746,4.047,747,4.75,748,5.274,749,5.274,750,4.75,751,3.369,752,5.274,753,5.274,754,4.047,755,3.369,778,4.703,779,4.081,794,4.081,795,4.081,796,4.696,797,6.069,798,4.696,799,4.696]],["title/injectables/NodesService.html",[135,1.124,778,2.472]],["body/injectables/NodesService.html",[3,0.116,4,0.103,5,0.103,7,0.243,8,1.453,11,0.015,12,0.629,14,2.131,16,0.246,17,0.645,20,0.116,21,0.114,23,1.321,24,1.006,26,0.008,27,0.008,59,1.006,87,1.76,93,3.232,94,2.578,107,0.604,129,1.254,135,1.349,136,1.502,144,0.645,147,1.349,148,1.32,149,2.384,150,0.897,169,0.969,172,0.969,183,2.094,184,1.908,187,1.218,188,3.034,197,1.685,200,2.138,201,1.198,202,1.911,203,2.604,207,1.84,211,1.987,215,1.628,230,1.127,259,2.171,288,2.384,290,2.923,300,2.795,304,1.437,320,2.799,347,1.171,363,2.799,364,1.65,365,1.65,368,1.006,374,1.65,378,3.749,381,2.384,383,2.559,386,1.65,392,3.066,399,2.799,403,3.066,408,2.923,409,3.332,412,2.506,415,1.934,416,2.506,417,3.066,418,3.223,419,2.506,420,2.077,422,2.506,425,1.734,437,1.177,442,2.059,468,1.736,474,2.799,477,1.65,478,1.65,507,2.578,523,2.055,526,3.487,527,1.046,608,2.336,617,1.437,633,1.268,672,3.173,686,2.799,690,2.365,691,1.377,698,1.65,706,2.969,707,2.943,730,1.734,751,3.102,756,4.136,757,5.32,758,4.136,759,4.136,760,4.136,764,2.862,767,2.196,768,2.862,772,2.862,773,4.512,778,2.969,780,2.862,781,4.374,782,2.365,783,2.365,800,2.862,801,4.136,802,3.294,803,3.294,804,4.76,805,4.76,806,3.294,807,4.76,808,3.294,809,4.76,810,3.294,811,2.365,812,2.862,813,3.294,814,3.294,815,3.294,816,2.862,817,3.294,818,2.862,819,2.862,820,3.294,821,5.589,822,3.294,823,4.76,824,3.294,825,2.862,826,3.294,827,3.294,828,5.589,829,3.294,830,2.055,831,2.365,832,2.365,833,3.294,834,3.294,835,3.294,836,2.862,837,3.294]],["title/entities/Plan.html",[83,1.356,572,1.166]],["body/entities/Plan.html",[3,0.165,4,0.147,5,0.147,7,0.524,10,1.098,11,0.015,12,0.66,15,1.143,16,0.213,20,0.165,21,0.162,26,0.011,27,0.011,55,1.802,56,1.802,57,1.957,83,2.072,85,4.181,105,3.556,107,0.7,125,2.043,147,1.327,153,1.231,197,1.104,201,1.137,202,1.782,368,1.429,437,1.365,468,1.327,527,0.936,536,4.587,572,1.377,577,2.892,578,3.556,579,3.556,581,4.255,583,4.734,585,3.206,589,2.465,599,3.063,617,2.043,838,4.068,839,5.255,840,4.681,841,4.681,842,4.681,843,4.681,844,6.057,845,4.35,846,4.822,847,3.362,848,4.681,849,5.263,850,5.263,851,4.681,852,4.681,853,4.068,854,4.681,855,3.121,856,3.664,857,4.681,858,6.714,859,4.681,860,6.057,861,4.681,862,6.714,863,6.714,864,4.068,865,3.362,866,4.681,867,4.681]],["title/controllers/PlanController.html",[0,1.124,868,2.846]],["body/controllers/PlanController.html",[0,0.992,2,1.03,3,0.123,4,0.11,5,0.11,7,0.258,8,1.518,10,1.028,11,0.015,12,0.618,14,2.256,15,0.801,16,0.243,17,0.685,20,0.123,21,0.121,22,1.672,24,2.03,26,0.009,27,0.009,55,1.347,56,1.347,57,1.463,83,1.978,107,0.585,129,1.973,135,0.992,144,0.685,147,1.41,148,1.28,150,0.937,181,1.753,183,2.363,187,2.555,188,2.318,196,3.315,200,2.073,201,1.068,202,1.852,203,1.404,207,1.637,209,2.685,212,3.102,213,2.919,215,2.153,230,2.363,231,2.49,232,2.896,260,3.102,261,1.754,264,1.518,268,3.314,347,1.245,383,1.463,407,2.374,437,1.418,442,2.19,527,1.183,534,4.148,536,3.102,542,4.433,620,2.76,625,2.76,627,2.423,628,1.843,633,2.226,769,3.571,777,2.334,782,2.514,868,3.571,869,3.042,870,3.891,871,4.197,872,4.32,873,5.47,874,4.32,875,4.32,876,4.32,877,3.5,878,3.5,879,4.32,880,4.32,881,4.32,882,4.32,883,4.32,884,3.891,885,3.5,886,3.696,887,3.042,888,3.5,889,4.605,890,4.32,891,3.042,892,3.5,893,3.315,894,3.042,895,3.5,896,3.571,897,3.315,898,3.607,899,3.042,900,4.32,901,4.32,902,1.843,903,3.5,904,3.5,905,3.5,906,3.5,907,3.5,908,3.5,909,3.5,910,3.5,911,3.5,912,3.5]],["title/modules/PlanModule.html",[28,1.166,43,2.642]],["body/modules/PlanModule.html",[2,1.832,3,0.172,4,0.153,5,0.153,11,0.014,16,0.263,17,0.956,20,0.172,21,0.169,26,0.011,27,0.011,28,2.016,30,2.043,31,2.043,32,2.229,33,2.229,34,2.043,35,3.125,36,3.125,43,5.161,50,2.84,51,2.229,52,2.229,54,2.333,55,1.881,56,1.881,57,2.043,58,2.333,59,1.492,83,2.344,84,3.824,120,4.873,129,1.9,144,0.956,147,1.765,148,1.266,150,1.359,169,1.832,197,1.702,207,2.05,215,2.13,259,2.84,261,1.581,264,1.901,338,4.873,358,4.151,468,1.765,617,3.148,730,3.278,746,4.151,747,4.873,811,4.471,868,4.921,870,4.873,871,4.151,898,5.034,899,4.246,913,4.246,914,4.246,915,4.246,916,4.886,917,5.41,918,6.226,919,4.886,920,4.886]],["title/injectables/PlanService.html",[135,1.124,898,2.472]],["body/injectables/PlanService.html",[3,0.088,4,0.078,5,0.078,7,0.184,8,1.179,11,0.015,12,0.591,14,2.006,15,0.622,16,0.224,17,0.487,20,0.088,21,0.086,23,1.895,24,1.443,26,0.007,27,0.007,59,0.761,83,2.583,84,1.949,107,0.567,129,1.731,135,1.094,136,1.136,144,0.487,147,1.094,148,1.468,150,1.085,153,0.785,166,1.087,169,1.695,172,1.566,183,1.821,187,2.254,188,2.895,197,0.911,200,1.897,201,1.066,202,1.695,203,2.31,207,2.007,209,0.921,211,2.049,212,2.408,213,2.267,215,1.971,217,1.554,230,1.32,261,1.547,264,1.443,268,2.489,288,1.933,290,2.542,304,1.087,310,1.949,320,3.378,325,1.554,326,1.789,339,1.789,341,1.554,347,0.886,363,3.053,364,1.247,365,1.247,368,0.761,374,2.667,378,3.828,381,2.367,383,2.548,386,2.367,392,3.452,399,3.291,403,3.452,407,2.257,408,2.91,409,3.553,412,2.489,415,2.267,416,3.033,417,3.452,418,3.629,419,3.033,420,2.514,422,3.033,425,1.311,437,1.223,442,1.688,473,1.949,474,3.378,477,2.367,478,2.367,481,2.164,527,1.016,534,3.594,536,3.594,542,3.966,627,1.819,633,1.486,672,2.574,683,1.382,691,2.409,698,1.247,699,1.66,704,2.032,706,3.322,729,2.164,730,2.032,731,1.554,733,1.554,830,1.554,871,3.841,872,3.354,873,4.626,874,3.354,875,3.354,876,3.354,879,3.354,880,3.354,881,3.354,882,3.354,883,3.354,884,3.021,886,2.775,887,2.164,889,3.55,890,2.164,891,3.354,893,3.151,894,2.164,896,1.789,897,1.66,898,2.408,900,3.354,901,2.164,902,1.311,921,2.164,922,3.354,923,4.726,924,2.49,925,2.49,926,3.86,927,3.86,928,2.49,929,2.49,930,2.49,931,2.49,932,2.49,933,1.462,934,2.49,935,2.164,936,5.324,937,2.49,938,2.164,939,2.49,940,3.86,941,2.49,942,2.574,943,4.726,944,2.49,945,2.49,946,4.726,947,2.49,948,4.107,949,3.86,950,2.49,951,2.49,952,2.49,953,1.554,954,2.49,955,2.49,956,1.949,957,2.49,958,2.164,959,2.164]],["title/entities/RadCheck.html",[79,1.985,572,1.166]],["body/entities/RadCheck.html",[3,0.174,4,0.154,5,0.154,7,0.364,10,1.155,11,0.014,12,0.695,15,1.264,16,0.174,20,0.174,21,0.171,26,0.011,27,0.011,55,1.897,56,1.897,57,2.06,79,3.445,107,0.73,113,2.024,125,2.15,127,4.357,153,1.272,165,3.622,166,3.002,201,0.762,368,1.505,437,1.247,527,0.968,572,1.842,577,3.285,578,3.824,579,3.885,585,3.285,593,5.198,599,3.408,933,3.675,960,4.282,961,4.039,962,5.638,963,4.928,964,4.928,965,4.282,966,4.173,967,4.928,968,4.928,969,5.439,970,4.928]],["title/classes/RadCheckDto.html",[21,0.137,971,2.472]],["body/classes/RadCheckDto.html",[3,0.165,4,0.146,5,0.146,7,0.345,10,1.097,11,0.014,12,0.66,15,1.291,16,0.165,20,0.213,21,0.232,26,0.011,27,0.011,107,0.66,113,2.088,142,1.482,148,1.53,150,1.419,153,1.23,155,3.186,159,2.481,160,3.072,161,2.903,162,1.539,165,3.736,166,3.096,248,2.594,442,2.387,961,4.648,966,5.02,971,3.775,972,3.658,973,4.673,974,4.673,975,6.542,976,5.407,977,4.697,978,5.407,979,6.542,980,4.061,981,6.386,982,4.673,983,4.673,984,4.673,985,4.061,986,4.061,987,5.257,988,5.257,989,2.916]],["title/classes/RadCheckUpdateDto.html",[21,0.137,989,2.472]],["body/classes/RadCheckUpdateDto.html",[3,0.165,4,0.146,5,0.146,7,0.345,10,1.097,11,0.014,12,0.66,15,1.291,16,0.165,20,0.213,21,0.232,26,0.011,27,0.011,107,0.66,113,2.088,142,1.482,148,1.53,150,1.419,153,1.23,159,2.481,160,3.072,161,2.903,162,1.539,165,3.736,166,3.096,248,3.724,442,2.387,961,4.648,966,5.02,971,2.916,972,3.658,975,6.542,976,5.407,977,4.697,978,5.407,979,6.542,980,4.061,981,6.166,985,4.061,986,4.061,987,5.83,988,5.257,989,3.775,990,4.673,991,4.673,992,4.673,993,4.673,994,4.673]],["title/entities/RadGroupReply.html",[97,2.2,572,1.166]],["body/entities/RadGroupReply.html",[3,0.174,4,0.154,5,0.154,7,0.364,10,1.155,11,0.014,12,0.695,15,1.264,16,0.174,20,0.174,21,0.171,26,0.011,27,0.011,55,1.897,56,1.897,57,2.06,97,3.818,107,0.73,125,2.15,127,4.357,153,1.272,165,3.622,166,3.002,201,0.762,216,3.445,368,1.505,437,1.247,527,0.968,572,1.842,577,3.285,578,3.824,579,3.885,585,3.285,593,5.198,599,3.408,933,3.675,961,4.039,962,5.638,965,4.282,966,4.173,969,5.439,995,4.282,996,4.928,997,4.928,998,4.928,999,4.928,1000,4.928]],["title/entities/RadUserGroup.html",[89,1.657,572,1.166]],["body/entities/RadUserGroup.html",[3,0.188,4,0.167,5,0.167,7,0.393,10,1.15,11,0.014,12,0.692,15,1.198,16,0.188,20,0.188,21,0.184,26,0.011,27,0.011,55,2.05,56,2.05,57,2.227,89,2.747,107,0.733,113,2.097,125,2.324,153,1.336,216,3.57,368,1.626,437,1.292,470,4.185,527,1.15,572,1.567,577,3.403,578,3.727,579,3.727,583,4.961,585,3.403,589,3.46,599,3.394,1001,4.628,1002,5.326,1003,5.326,1004,5.326,1005,5.326,1006,5.326]],["title/classes/RadUserGroupDto.html",[21,0.137,1007,2.472]],["body/classes/RadUserGroupDto.html",[3,0.194,4,0.172,5,0.172,7,0.406,10,1.117,11,0.014,12,0.672,15,1.263,16,0.194,20,0.236,21,0.25,26,0.012,27,0.012,107,0.672,113,2.214,142,1.743,153,1.362,155,3.528,159,2.852,160,2.898,161,2.852,162,1.81,216,3.768,470,4.417,527,1.117,532,3.297,646,3.051,1007,4.18,1008,4.302,1009,5.497,1010,5.497,1011,5.497,1012,3.43]],["title/classes/RadUserGroupUpdateDto.html",[21,0.137,1012,2.472]],["body/classes/RadUserGroupUpdateDto.html",[3,0.194,4,0.172,5,0.172,7,0.406,10,1.117,11,0.014,12,0.672,15,1.263,16,0.194,20,0.236,21,0.25,26,0.012,27,0.012,107,0.672,113,2.214,142,1.743,153,1.362,155,3.528,159,2.852,160,2.898,161,2.852,162,1.81,216,3.768,470,4.417,527,1.117,532,3.297,646,3.051,1007,3.43,1008,4.302,1012,4.18,1013,5.497,1014,5.497,1015,5.497]],["title/entities/Radacct.html",[81,2.472,572,1.166]],["body/entities/Radacct.html",[3,0.093,4,0.082,5,0.082,7,0.194,10,1.224,11,0.015,12,0.736,15,1.307,16,0.093,20,0.093,21,0.091,26,0.007,27,0.007,55,1.013,56,1.013,57,1.1,81,3.052,105,3.504,107,0.764,113,1.439,125,1.148,127,4.487,147,0.746,148,0.535,153,0.818,178,3.513,201,0.407,368,0.803,408,2.617,424,2.059,527,1.082,572,1.185,577,3.79,578,4.066,579,4.061,580,5.811,581,4.523,585,2.336,589,2.885,593,4.242,595,5.649,599,3.588,962,3.936,1016,2.286,1017,4.891,1018,4.891,1019,4.891,1020,4.891,1021,4.891,1022,4.891,1023,4.891,1024,4.891,1025,4.891,1026,4.891,1027,4.891,1028,4.891,1029,4.891,1030,4.891,1031,4.891,1032,4.891,1033,4.891,1034,4.891,1035,4.891,1036,4.891,1037,4.891,1038,4.891,1039,4.891,1040,4.891,1041,4.891,1042,2.63,1043,4.762,1044,2.63,1045,2.63,1046,2.63,1047,2.63,1048,2.63,1049,4.762,1050,2.63,1051,2.63,1052,2.63,1053,2.63,1054,2.63,1055,2.63,1056,2.63,1057,2.63,1058,5.48,1059,2.63,1060,2.63,1061,5.48,1062,2.63,1063,5.48,1064,2.63,1065,2.63,1066,2.63,1067,2.63,1068,2.892,1069,2.63,1070,2.63,1071,2.63,1072,2.63,1073,2.63,1074,2.63,1075,2.63,1076,2.63]],["title/controllers/RadcheckController.html",[0,1.124,1077,2.846]],["body/controllers/RadcheckController.html",[0,0.973,2,1.009,3,0.121,4,0.107,5,0.107,7,0.253,8,1.496,10,0.964,11,0.015,12,0.58,14,2.206,16,0.201,17,0.671,20,0.121,21,0.119,22,1.638,23,1.375,24,1.905,26,0.009,27,0.009,79,1.718,107,0.532,113,1.835,129,1.643,144,0.959,148,1.268,150,1.46,163,3.835,167,2.049,169,2.194,172,1.442,181,1.718,183,2.347,197,1.759,200,1.882,201,0.884,202,1.682,207,1.613,209,2.671,211,1.742,215,1.676,229,2.608,230,2.257,231,2.454,232,2.864,261,1.742,264,1.496,268,3.284,270,2.049,305,2.34,309,2.978,318,2.877,347,1.22,429,3.284,437,1.309,440,3.267,442,2.175,468,1.945,527,1.117,606,4.882,612,3.519,619,2.684,620,2.72,625,2.72,627,2.401,628,1.806,633,2.201,637,2.981,696,2.58,711,4.882,755,2.72,812,4.258,886,2.877,897,4.158,971,4.116,989,4.116,1077,3.519,1078,2.981,1079,3.057,1080,4.258,1081,4.258,1082,3.519,1083,4.258,1084,4.258,1085,4.258,1086,4.258,1087,4.9,1088,5.42,1089,4.258,1090,3.43,1091,3.43,1092,3.835,1093,5.42,1094,5.42,1095,5.42,1096,5.42,1097,5.42,1098,5.42,1099,5.42,1100,4.258,1101,4.9,1102,4.258,1103,4.9,1104,3.43,1105,4.9,1106,4.258,1107,3.43,1108,4.9,1109,4.9,1110,2.981,1111,3.43,1112,3.567,1113,2.981,1114,2.981,1115,3.43,1116,3.43,1117,3.43,1118,3.43,1119,3.43,1120,3.43,1121,3.43]],["title/modules/RadcheckModule.html",[28,1.166,44,2.642]],["body/modules/RadcheckModule.html",[2,1.901,3,0.183,4,0.162,5,0.162,11,0.014,16,0.267,17,1.014,20,0.183,21,0.179,26,0.011,27,0.011,28,2.071,30,2.167,31,2.167,32,2.364,33,2.364,34,2.167,35,3.211,36,2.364,44,5.156,50,2.947,51,2.364,52,2.364,54,2.475,58,2.475,59,1.583,79,3.526,144,1.014,148,1.313,150,1.494,197,1.524,215,2.21,259,2.947,261,1.641,270,2.701,468,1.832,1077,5.056,1079,4.031,1080,5.615,1081,5.615,1082,4.641,1083,5.615,1084,5.615,1085,5.615,1086,5.615,1112,4.824,1113,4.504,1122,4.504,1123,4.504,1124,5.183,1125,5.183,1126,3.722,1127,5.183]],["title/injectables/RadcheckService.html",[135,1.124,1112,2.472]],["body/injectables/RadcheckService.html",[3,0.121,4,0.107,5,0.107,7,0.253,8,1.498,11,0.015,12,0.614,14,2.016,16,0.233,17,0.672,20,0.121,21,0.119,24,1.049,26,0.009,27,0.009,59,1.049,72,2.142,79,3.539,91,2.14,107,0.58,113,1.683,129,1.808,130,2.984,135,1.391,136,1.566,144,0.96,147,1.622,148,1.395,149,1.72,150,1.361,165,2.582,166,2.14,169,2.079,172,1.443,183,1.957,184,1.967,187,1.27,188,2.948,197,1.781,200,2.055,201,0.965,202,1.836,203,2.502,207,1.615,208,1.72,209,2.116,215,1.175,217,2.142,229,2.05,261,0.872,264,1.049,266,2.582,268,1.808,288,2.456,290,2.98,300,2.016,309,2.342,318,2.88,320,2.456,344,2.142,347,1.221,355,2.984,363,2.456,364,1.72,365,1.72,368,1.049,372,2.688,374,1.72,378,3.306,381,1.72,383,2.05,386,1.72,392,2.865,399,2.456,403,2.456,407,1.64,408,2.342,409,2.98,412,1.808,416,1.808,417,2.865,418,2.582,419,1.808,420,1.499,422,1.808,425,1.808,429,3.012,437,1.131,442,1.555,468,2.003,474,2.865,477,1.72,478,1.72,527,0.965,589,1.808,606,2.688,608,2.392,612,3.522,617,1.499,619,2.688,627,1.322,672,3.27,683,1.906,691,2.392,692,2.142,695,2.466,696,1.808,711,2.688,733,2.142,743,2.466,755,2.722,832,2.466,897,2.29,922,4.262,953,2.142,958,2.984,961,2.88,971,3.569,976,2.466,977,2.142,989,3.569,1088,5.423,1089,4.262,1093,2.984,1094,2.984,1095,2.984,1096,2.984,1097,2.984,1098,2.984,1099,2.984,1110,2.984,1112,3.06,1114,2.984,1126,2.466,1128,2.984,1129,4.904,1130,3.434,1131,3.434,1132,4.262,1133,3.434,1134,3.434,1135,2.984,1136,2.142,1137,2.984,1138,3.434,1139,3.434,1140,3.434,1141,3.434,1142,3.434,1143,3.838,1144,3.434,1145,3.434,1146,3.434,1147,2.688,1148,2.466,1149,3.434,1150,3.434,1151,3.434,1152,2.984,1153,3.434,1154,3.434,1155,3.434,1156,3.434,1157,3.434,1158,3.434,1159,2.984,1160,4.904,1161,4.904,1162,4.904,1163,5.721,1164,3.434,1165,3.434,1166,3.434,1167,4.904,1168,2.984]],["title/controllers/RadusergroupController.html",[0,1.124,1169,2.846]],["body/controllers/RadusergroupController.html",[0,0.629,2,0.653,3,0.078,4,0.069,5,0.069,7,0.164,8,1.077,10,0.773,11,0.014,12,0.465,14,1.929,16,0.155,17,0.434,20,0.078,21,0.077,22,1.06,23,0.89,24,1.665,26,0.006,27,0.006,83,1.206,89,2.545,107,0.408,113,1.858,120,2.76,129,2.093,144,0.978,145,3.506,147,1.963,148,1.582,149,2.908,150,1.371,151,2.351,167,2.09,169,2.14,172,2.037,173,2.071,174,2.503,181,1.112,183,2.161,187,2.336,197,1.847,200,1.445,201,0.678,202,1.291,207,2.195,208,2.908,209,2.466,211,1.254,212,3.118,215,2.404,216,2.503,221,3.057,222,3.622,229,1.474,230,1.501,231,1.112,232,2.198,257,2.436,259,1.609,261,1.652,264,2.291,303,2.351,304,2.181,305,2.095,309,2.772,315,2.2,338,2.76,344,3.118,347,1.254,358,2.351,372,2.76,407,1.06,423,3.333,429,2.632,437,1.145,442,1.841,468,2.127,469,2.351,502,2.533,589,1.857,599,1.609,608,1.474,612,2.533,617,2.534,622,2.76,627,1.924,628,2.31,633,1.358,686,1.766,690,4.17,691,1.474,692,3.622,695,3.59,696,3.057,698,2.908,705,3.59,707,1.857,709,3.118,710,2.071,750,2.76,755,2.774,856,2.76,864,3.065,865,2.533,886,2.071,917,3.065,953,2.2,961,2.577,977,3.118,978,3.59,1007,3.402,1012,4.32,1092,3.912,1135,4.343,1136,3.94,1147,2.76,1148,2.533,1159,4.343,1169,2.533,1170,1.929,1171,2.533,1172,3.065,1173,4.343,1174,4.343,1175,4.343,1176,4.343,1177,3.912,1178,4.343,1179,4.343,1180,4.343,1181,5.045,1182,3.527,1183,5.045,1184,5.806,1185,3.527,1186,3.527,1187,2.533,1188,3.527,1189,3.912,1190,3.527,1191,3.527,1192,3.527,1193,3.527,1194,3.065,1195,3.527,1196,3.527,1197,3.527,1198,2.22,1199,3.527,1200,3.527,1201,3.527,1202,3.527,1203,4.343,1204,3.065,1205,2.22,1206,2.22,1207,3.527,1208,5.045,1209,3.527,1210,2.76,1211,3.527,1212,3.065,1213,3.527,1214,2.76,1215,3.527,1216,5.045,1217,2.22,1218,2.22,1219,3.527,1220,2.22,1221,3.434,1222,3.065,1223,2.2,1224,3.065,1225,3.065,1226,2.76,1227,3.065,1228,4.343,1229,1.929,1230,2.22,1231,4.343,1232,3.065,1233,3.527,1234,3.065,1235,3.527,1236,3.527,1237,3.527,1238,3.527,1239,2.76,1240,1.929,1241,1.929,1242,2.22,1243,2.22,1244,2.22,1245,2.22,1246,2.22,1247,2.22,1248,2.22,1249,2.22,1250,2.22,1251,2.22,1252,2.22,1253,2.22,1254,2.22,1255,2.22]],["title/modules/RadusergroupModule.html",[28,1.166,45,2.642]],["body/modules/RadusergroupModule.html",[0,1.82,2,1.888,3,0.181,4,0.16,5,0.16,11,0.014,16,0.266,17,1.004,20,0.181,21,0.178,26,0.011,27,0.011,28,2.061,30,2.144,31,2.144,32,2.339,33,2.339,34,2.144,35,3.196,36,2.339,45,5.142,50,2.928,51,2.339,52,2.339,54,2.449,58,2.449,59,1.566,89,2.929,129,1.691,144,1.004,147,1.82,148,1.493,150,1.209,172,1.888,197,1.732,207,2.113,208,3.215,221,3.38,257,4.281,259,2.928,279,3.011,358,4.279,429,3.38,468,2.082,1147,5.023,1169,5.032,1171,4.61,1172,5.577,1240,4.456,1256,5.128,1257,5.128,1258,5.128,1259,6.418,1260,6.418,1261,5.128,1262,5.128]],["title/injectables/RadusergroupService.html",[135,1.124,257,2.2]],["body/injectables/RadusergroupService.html",[3,0.099,4,0.088,5,0.088,7,0.207,8,1.289,11,0.015,12,0.593,14,2.023,16,0.214,17,0.548,20,0.099,21,0.097,23,1.123,24,0.855,26,0.007,27,0.007,59,0.855,89,2.125,107,0.565,113,2.219,129,2.001,135,1.197,136,1.278,144,1.108,145,2.821,146,1.867,147,1.81,148,1.488,149,2.546,150,1.203,167,1.765,169,1.878,172,1.495,174,2.546,183,1.936,184,2.038,187,1.562,188,2.935,197,1.609,200,1.999,201,0.939,202,1.787,203,2.435,207,1.673,208,1.403,209,2.361,211,1.807,212,1.747,215,2.333,216,3.618,217,1.747,221,2.676,222,3.171,229,2.125,230,0.958,257,2.344,261,1.291,262,2.115,264,1.552,279,1.644,288,2.115,290,2.702,304,1.222,305,1.337,309,2.016,315,1.747,318,1.644,320,2.546,325,1.747,326,2.011,344,2.634,347,0.996,351,2.434,363,2.546,364,1.403,365,1.403,368,0.855,374,1.403,378,3.618,381,2.115,383,2.366,386,1.403,392,3.041,399,2.546,400,2.434,403,2.834,407,1.337,408,2.702,409,3.164,412,2.223,415,1.644,416,2.223,417,2.834,418,2.98,419,2.223,420,1.843,422,2.223,423,1.867,425,1.475,429,2.223,437,0.765,442,1.794,468,1.722,470,3.748,474,2.546,477,1.403,478,1.403,502,4.064,514,3.978,608,2.125,617,1.843,622,2.192,627,1.078,633,1.078,686,2.115,690,3.65,691,1.171,692,2.634,695,2.011,698,1.403,699,1.867,705,3.033,706,2.634,709,2.634,730,1.475,732,1.747,733,1.747,755,2.344,776,2.634,830,1.747,832,2.011,886,2.479,933,2.479,976,3.033,977,1.747,978,2.011,1007,3.788,1012,4.133,1136,3.171,1173,3.669,1174,3.669,1175,3.669,1176,3.669,1177,3.305,1178,3.669,1179,3.669,1180,3.669,1181,3.669,1203,4.918,1204,3.669,1208,3.669,1216,4.417,1221,2.192,1222,2.434,1223,1.747,1224,2.434,1225,2.434,1226,2.192,1227,2.434,1228,4.417,1229,2.434,1231,2.434,1232,2.434,1241,2.434,1263,2.434,1264,4.222,1265,4.222,1266,4.222,1267,2.801,1268,2.801,1269,4.222,1270,2.801,1271,3.305,1272,4.222,1273,4.222,1274,4.222,1275,3.305,1276,2.801,1277,2.801,1278,2.801,1279,2.434,1280,2.801,1281,2.801,1282,2.801,1283,2.801,1284,2.801,1285,2.801,1286,2.192,1287,2.801,1288,4.222,1289,2.801,1290,2.801,1291,2.801,1292,4.417,1293,2.801,1294,2.801,1295,2.801,1296,2.801,1297,2.801,1298,2.801,1299,2.801]],["title/entities/Service.html",[85,2.2,572,1.166]],["body/entities/Service.html",[3,0.166,4,0.147,5,0.147,7,0.348,10,1.167,11,0.015,12,0.702,16,0.237,20,0.166,21,0.163,26,0.011,27,0.011,83,2.689,85,3.738,87,2.632,105,3.565,107,0.731,125,2.056,153,1.236,201,0.728,368,1.439,398,4.094,420,2.939,437,1.221,440,3.141,454,4.094,469,3.141,527,1.203,533,2.481,548,4.837,549,4.837,550,4.912,561,3.141,572,1.789,577,3.216,581,3.376,585,3.216,589,3.202,599,3.246,704,2.481,845,4.368,846,5.419,847,4.368,966,3.141,1043,6.185,1300,4.094,1301,4.711,1302,4.711,1303,6.082,1304,5.285,1305,4.711,1306,4.711,1307,4.711,1308,6.082,1309,4.711,1310,5.853,1311,4.711,1312,4.094,1313,4.094,1314,4.711]],["title/controllers/ServicesController.html",[0,1.124,1315,2.846]],["body/controllers/ServicesController.html",[0,0.857,2,0.889,3,0.107,4,0.095,5,0.095,7,0.223,8,1.365,10,1.05,11,0.015,12,0.632,14,2.315,15,0.856,16,0.221,17,0.592,20,0.107,21,0.105,22,1.443,24,2.075,26,0.008,27,0.008,85,2.481,107,0.61,114,2.134,129,1.729,144,0.592,148,1.473,149,2.944,150,1.314,172,1.315,181,1.514,183,2.386,188,2.133,197,1.755,200,2.162,201,1.015,202,1.932,203,1.212,209,2.512,211,1.589,215,1.529,229,2.457,230,2.386,231,2.239,232,2.664,259,2.681,261,1.667,264,1.795,268,2.354,270,1.869,304,1.951,318,2.625,347,1.075,383,1.264,429,3.094,437,1.424,442,2.211,468,1.862,507,3.498,527,1.181,545,3.666,608,1.869,617,1.951,620,2.481,625,2.481,627,1.721,628,1.591,633,2.262,670,3.498,686,2.239,691,2.457,692,2.789,707,2.354,732,2.789,751,2.952,754,2.98,767,3.918,769,3.21,771,3.21,777,2.015,782,2.171,816,3.884,831,3.21,839,4.909,855,2.98,886,3.451,902,1.591,1148,3.21,1275,4.6,1315,3.21,1316,2.626,1317,4.47,1318,3.884,1319,3.884,1320,3.21,1321,4.47,1322,2.98,1323,5.107,1324,3.884,1325,3.884,1326,3.884,1327,4.47,1328,3.022,1329,3.022,1330,3.022,1331,3.498,1332,2.626,1333,3.022,1334,3.498,1335,2.626,1336,4.47,1337,3.022,1338,2.626,1339,3.022,1340,4.47,1341,3.022,1342,4.47,1343,3.022,1344,2.626,1345,4.182,1346,3.022,1347,4.47,1348,3.884,1349,3.884,1350,4.47,1351,3.498,1352,3.498,1353,2.789,1354,2.626,1355,2.171,1356,4.163,1357,3.022,1358,3.022,1359,3.022,1360,3.022,1361,3.022,1362,3.022,1363,3.022,1364,3.022,1365,2.626,1366,3.022,1367,3.022,1368,3.022,1369,2.626,1370,2.626,1371,3.022,1372,2.626,1373,3.022]],["title/modules/ServicesModule.html",[28,1.166,46,2.642]],["body/modules/ServicesModule.html",[2,1.778,3,0.164,4,0.146,5,0.146,11,0.015,16,0.283,17,0.913,20,0.164,21,0.162,26,0.011,27,0.011,28,1.972,30,1.951,31,1.951,32,2.128,33,2.128,34,1.951,35,3.058,36,2.128,40,4.695,46,5.276,47,4.695,50,2.757,51,2.128,52,2.128,54,2.886,58,2.228,59,1.425,76,3.652,83,2.068,85,3.355,86,3.652,87,2.235,89,2.527,91,2.638,93,2.886,114,2.886,144,0.913,148,1.229,150,1.336,172,1.778,215,2.068,259,2.757,261,1.8,264,1.846,270,2.527,276,2.74,279,2.74,282,4.055,437,1.096,533,2.457,561,3.111,670,4.73,732,3.771,1315,4.815,1318,5.252,1319,5.252,1320,4.341,1322,4.03,1353,4.695,1354,4.055,1374,4.055,1375,4.666,1376,4.055,1377,4.666,1378,6.044,1379,4.666,1380,4.666,1381,3.351,1382,4.666]],["title/injectables/ServicesService.html",[135,1.124,1353,2.472]],["body/injectables/ServicesService.html",[3,0.06,4,0.053,5,0.053,7,0.126,8,0.867,11,0.015,12,0.53,14,1.916,15,0.588,16,0.231,17,0.333,20,0.06,21,0.059,23,0.682,24,1.74,26,0.005,27,0.005,55,0.655,56,0.655,59,0.52,83,2.146,85,3.75,86,1.332,87,0.629,89,0.711,91,1.862,93,0.813,105,0.852,107,0.53,113,0.501,114,2.037,127,0.944,129,1.955,133,1.332,134,1.332,135,0.805,136,0.776,146,1.893,147,1.616,148,1.45,150,1.29,167,0.711,169,1.742,172,1.508,183,2.146,184,1.139,187,1.578,188,2.836,197,1.652,200,1.79,201,0.841,202,1.6,203,2.055,207,1.876,211,2.026,215,1.25,221,1.495,229,1.187,230,1.623,233,2.505,261,0.928,264,1.74,266,0.896,270,1.187,276,0.999,279,0.999,288,1.422,290,3.377,304,1.862,309,2.037,315,1.772,320,2.567,334,1.222,341,1.772,347,0.605,352,1.332,358,4.073,363,1.422,364,0.852,365,0.852,368,0.52,373,1.332,374,2.965,378,3.814,381,2.567,383,3.007,386,2.376,392,3.214,395,3.176,397,1.479,399,2.567,403,2.854,408,3.064,409,3.125,412,2.699,416,2.247,417,3.43,418,1.495,419,0.896,420,2.373,422,0.896,425,1.924,428,1.222,430,3.176,437,1.339,440,1.893,441,1.479,442,1.724,468,1.855,469,1.134,473,1.332,474,2.724,476,1.332,477,2.376,478,2.376,506,1.479,527,0.944,533,0.896,536,1.062,545,1.062,548,3.681,549,4.093,550,4.073,561,1.134,608,1.528,633,0.655,683,1.576,691,2.273,704,0.896,707,1.924,710,2.505,730,1.495,731,1.062,740,1.893,745,2.437,751,2.633,755,1.576,767,2.437,771,2.039,776,2.28,801,4.454,811,3.064,818,2.468,819,1.479,830,1.772,832,1.222,836,2.468,839,3.713,865,1.222,871,1.134,884,2.86,886,2.146,893,1.134,896,1.222,902,0.896,935,1.479,938,1.479,942,1.893,953,2.28,956,2.86,959,1.479,1079,1.772,1143,2.222,1168,1.479,1210,1.332,1223,1.772,1226,1.332,1286,1.332,1304,1.479,1312,1.479,1313,1.479,1320,2.625,1322,2.437,1325,2.468,1334,2.222,1335,1.479,1345,2.845,1351,2.222,1353,1.772,1355,1.222,1356,2.222,1369,4.122,1381,1.222,1383,1.479,1384,2.84,1385,4.267,1386,2.84,1387,2.84,1388,2.84,1389,2.84,1390,1.701,1391,3.654,1392,3.176,1393,3.654,1394,3.654,1395,3.654,1396,3.654,1397,2.505,1398,3.654,1399,1.701,1400,2.84,1401,2.84,1402,1.701,1403,2.84,1404,2.84,1405,2.84,1406,2.84,1407,2.84,1408,1.701,1409,1.701,1410,1.701,1411,1.479,1412,1.701,1413,1.701,1414,2.84,1415,1.701,1416,2.84,1417,1.701,1418,2.84,1419,2.625,1420,2.84,1421,1.701,1422,1.701,1423,1.701,1424,1.701,1425,1.701,1426,1.479,1427,1.479,1428,1.701,1429,1.701,1430,1.701,1431,1.701,1432,2.84,1433,3.654,1434,1.701,1435,1.701,1436,1.701,1437,1.701,1438,1.701,1439,1.701,1440,1.701,1441,1.479,1442,1.701,1443,1.332,1444,1.479,1445,1.479,1446,1.479,1447,2.468,1448,1.479,1449,3.176,1450,1.701,1451,1.479,1452,1.701,1453,1.479,1454,1.479,1455,1.479,1456,1.701,1457,1.332,1458,1.701,1459,1.701,1460,1.701,1461,1.701,1462,1.701,1463,1.701,1464,1.701,1465,1.701,1466,1.479,1467,1.701,1468,3.654,1469,1.701,1470,1.701,1471,1.701,1472,1.701,1473,1.701,1474,1.701,1475,1.479,1476,2.84,1477,2.468,1478,1.701,1479,2.468,1480,1.701,1481,1.701,1482,2.84,1483,1.701,1484,1.701,1485,2.84,1486,1.701,1487,2.84,1488,1.701,1489,1.701,1490,1.701,1491,1.701,1492,1.701,1493,1.701,1494,1.701,1495,1.701,1496,1.701,1497,1.701,1498,1.701,1499,1.701,1500,1.701,1501,2.84,1502,1.701,1503,1.701,1504,1.701,1505,1.701,1506,1.701,1507,1.701,1508,1.701,1509,1.701,1510,1.701,1511,2.84,1512,1.701,1513,1.701,1514,1.701,1515,1.134,1516,1.701,1517,1.701,1518,1.701,1519,1.479,1520,1.701,1521,1.701,1522,1.701,1523,1.701,1524,1.701,1525,2.84,1526,1.701,1527,1.701,1528,1.701,1529,1.701,1530,1.701,1531,1.701,1532,2.84,1533,1.701,1534,2.84,1535,1.479,1536,1.701]],["title/entities/System.html",[87,1.466,572,1.166]],["body/entities/System.html",[3,0.169,4,0.15,5,0.15,7,0.355,10,1.146,11,0.014,12,0.689,15,1.221,16,0.217,20,0.169,21,0.166,26,0.011,27,0.011,87,2.514,93,3.424,105,3.799,107,0.726,125,2.097,153,1.252,201,1.109,202,1.812,368,1.467,437,1.232,527,0.952,566,4.882,567,4.882,572,1.812,577,3.246,578,3.799,579,3.799,581,4.21,583,4.107,585,3.246,599,3.271,739,5.321,751,3.419,845,4.424,846,5.149,847,4.424,849,4.175,850,4.175,1310,4.175,1381,3.451,1537,4.175,1538,7.17,1539,4.805,1540,4.805,1541,4.805,1542,4.805,1543,4.805,1544,6.159,1545,4.805,1546,4.805,1547,5.352,1548,4.175,1549,4.805]],["title/controllers/SystemsController.html",[0,1.124,1550,2.846]],["body/controllers/SystemsController.html",[0,0.867,2,0.9,3,0.108,4,0.096,5,0.096,7,0.226,8,1.377,10,1.054,11,0.015,12,0.634,14,2.32,15,0.952,16,0.208,17,0.598,20,0.108,21,0.106,22,1.46,23,1.226,24,2.082,26,0.008,27,0.008,55,1.177,56,1.177,57,1.278,87,2.186,107,0.613,129,1.557,144,0.598,148,0.916,150,1.369,167,1.885,172,1.326,181,1.531,183,2.255,188,2.865,197,1.651,200,2.171,201,1.082,202,1.94,203,2.147,209,1.98,211,1.603,229,1.885,230,2.444,231,2.258,232,2.682,261,1.845,262,2.258,266,2.374,268,2.374,270,1.885,300,3.871,304,1.967,305,3.148,309,2.822,347,1.087,383,2.239,407,1.46,437,1.432,442,2.09,468,1.278,526,1.908,527,1.211,564,3.687,566,3.238,567,3.238,608,2.471,620,2.502,625,2.502,627,2.275,628,1.61,633,2.538,686,2.258,691,1.885,733,1.908,740,3.006,745,3.006,751,3.498,769,3.238,777,2.039,893,3.006,902,1.61,1079,2.812,1092,3.528,1271,3.528,1323,5.135,1324,3.917,1326,3.917,1332,2.657,1334,3.528,1338,2.657,1344,2.657,1352,3.528,1355,2.196,1365,2.657,1370,2.657,1372,2.657,1397,2.647,1411,3.917,1419,4.244,1457,3.528,1519,3.917,1550,3.238,1551,2.657,1552,4.508,1553,3.917,1554,3.917,1555,3.917,1556,2.657,1557,4.508,1558,3.057,1559,3.057,1560,3.057,1561,3.057,1562,3.057,1563,3.057,1564,2.657,1565,4.508,1566,3.057,1567,4.508,1568,5.476,1569,3.94,1570,3.057,1571,3.917,1572,3.917,1573,2.657,1574,3.528,1575,3.057,1576,3.057,1577,3.057,1578,3.057,1579,3.057,1580,3.057,1581,3.057,1582,3.057,1583,3.057,1584,3.057,1585,3.057,1586,3.057,1587,3.057,1588,3.057]],["title/modules/SystemsModule.html",[28,1.166,47,2.472]],["body/modules/SystemsModule.html",[2,1.912,3,0.184,4,0.164,5,0.164,11,0.014,16,0.273,17,1.024,20,0.184,21,0.181,26,0.011,27,0.011,28,2.08,30,2.186,31,2.186,32,2.385,33,2.385,34,2.186,35,3.224,36,3.224,47,4.903,50,2.964,51,2.385,52,2.385,54,2.497,58,2.497,59,1.597,87,2.403,88,4.093,93,2.497,144,1.024,150,1.393,197,1.533,261,1.65,309,3.103,745,4.332,1079,4.054,1381,3.756,1397,4.781,1419,4.667,1457,5.085,1550,5.077,1573,4.544,1589,4.544,1590,4.544,1591,4.544,1592,5.23,1593,6.497,1594,5.23,1595,5.23]],["title/injectables/SystemsService.html",[135,1.124,1397,2.327]],["body/injectables/SystemsService.html",[3,0.076,4,0.067,5,0.067,7,0.159,8,1.05,11,0.015,12,0.599,14,2.06,15,0.791,16,0.202,17,0.421,20,0.076,21,0.074,23,1.723,24,1.499,26,0.006,27,0.006,55,1.324,56,1.324,59,0.657,87,2.72,88,1.683,107,0.599,129,1.837,133,2.692,134,2.692,135,0.975,136,0.981,148,1.269,150,1.213,153,0.699,166,0.939,169,1.012,172,1.769,183,2.307,184,1.379,187,1.272,188,2.949,197,1.418,200,1.979,201,1.093,202,1.769,203,1.379,207,1.415,211,2.442,215,1.176,230,1.679,261,1.586,270,1.796,288,1.722,290,2.344,300,2.883,305,2.344,307,1.869,310,1.683,320,3.378,334,4.485,341,1.342,347,1.746,352,1.683,363,2.868,364,1.077,365,1.077,368,0.657,374,2.459,378,3.907,381,2.868,383,2.761,386,2.459,392,3.128,399,3.225,403,3.308,408,3.279,409,3.563,412,3.015,416,2.585,417,3.308,418,3.477,419,2.827,420,2.343,421,2.692,422,2.827,425,2.585,428,2.47,437,1.333,442,1.98,468,1.623,474,3.308,476,1.683,477,2.459,478,2.459,526,3.063,527,1.093,550,4.163,564,1.342,566,3.086,567,3.856,608,1.796,617,1.501,627,1.654,633,0.828,691,0.899,696,1.132,698,1.077,699,1.434,704,1.132,706,2.146,707,1.811,710,2.523,730,1.811,731,1.342,740,1.434,751,2.98,771,1.545,776,1.342,865,1.545,897,1.434,902,1.132,933,1.263,953,1.342,956,2.692,1079,2.681,1239,1.683,1331,2.692,1355,1.545,1397,2.019,1419,3.086,1426,1.869,1441,1.869,1443,2.692,1444,2.988,1445,1.869,1446,1.869,1447,2.988,1448,1.869,1449,2.988,1451,1.869,1453,1.869,1454,1.869,1455,1.869,1479,2.988,1535,1.869,1553,2.988,1554,2.988,1555,2.988,1556,2.988,1564,2.988,1568,2.988,1569,2.865,1574,2.692,1596,1.869,1597,4.909,1598,3.439,1599,3.439,1600,4.297,1601,3.439,1602,2.151,1603,2.151,1604,3.439,1605,2.151,1606,3.439,1607,2.151,1608,3.439,1609,2.151,1610,2.988,1611,2.151,1612,2.151,1613,2.151,1614,2.151,1615,2.151,1616,2.151,1617,3.439,1618,2.151,1619,2.151,1620,2.151,1621,2.151,1622,3.439,1623,2.151,1624,3.439,1625,2.151,1626,2.151,1627,2.151,1628,4.297,1629,2.151,1630,3.439,1631,2.151,1632,2.151,1633,3.439,1634,3.439,1635,2.151,1636,2.151,1637,2.151,1638,2.151,1639,2.151,1640,2.151,1641,2.151,1642,2.151,1643,2.151,1644,2.151,1645,2.151,1646,3.439,1647,2.151,1648,2.151,1649,2.151,1650,2.151,1651,2.151,1652,2.151,1653,2.151,1654,2.151,1655,2.151]],["title/classes/UpdateNodeDto.html",[21,0.137,773,2.642]],["body/classes/UpdateNodeDto.html",[3,0.193,4,0.172,5,0.172,7,0.405,10,1.035,11,0.014,12,0.671,15,1.078,16,0.265,20,0.193,21,0.232,26,0.012,27,0.012,87,2.671,107,0.671,142,1.74,153,1.36,158,3.222,159,2.781,160,2.2,161,2.475,162,1.807,201,1.116,437,1.309,523,3.423,525,4.294,526,4.505,527,1.035,529,4.294,532,2.503,533,2.889,539,3.658,540,3.423,541,3.423,543,3.658,773,4.462,781,4.294,783,5.4,855,3.658,1656,5.487,1657,5.487,1658,5.487,1659,5.487]],["title/classes/UpdatePlanDto.html",[21,0.137,542,2.472]],["body/classes/UpdatePlanDto.html",[3,0.211,4,0.188,5,0.188,11,0.014,15,1.137,16,0.249,20,0.249,21,0.26,26,0.012,27,0.012,142,1.901,159,2.774,161,2.774,162,1.975,201,0.927,534,3.742,535,4.694,536,3.742,539,3.999,540,3.742,541,3.742,542,4.404,543,3.999,544,5.212]],["title/classes/UpdateServiceDto.html",[21,0.137,1345,2.642]],["body/classes/UpdateServiceDto.html",[3,0.181,4,0.161,5,0.161,7,0.379,10,1.169,11,0.015,12,0.703,16,0.267,20,0.181,21,0.222,26,0.011,27,0.011,83,2.639,87,2.593,107,0.703,142,1.629,153,1.306,160,3.173,162,1.691,420,3.06,527,1.193,532,3.351,533,2.705,539,3.425,540,3.205,541,3.205,543,3.425,545,3.205,547,4.021,548,5.036,549,5.036,550,4.675,552,4.464,554,4.464,558,4.464,561,3.425,646,3.892,855,3.425,902,4.063,1345,4.284,1356,4.021,1660,5.137,1661,5.137,1662,5.137]],["title/classes/UpdateSystemDto.html",[21,0.137,1569,2.642]],["body/classes/UpdateSystemDto.html",[3,0.217,4,0.193,5,0.193,11,0.014,16,0.253,20,0.217,21,0.213,26,0.012,27,0.012,142,1.954,539,4.109,540,3.845,541,3.845,543,4.109,564,3.845,565,4.824,855,4.109,902,3.245,1569,4.782,1574,4.824,1663,6.163]],["title/classes/UserDto.html",[21,0.137,1664,2.642]],["body/classes/UserDto.html",[3,0.109,4,0.097,5,0.097,7,0.229,10,1.231,11,0.015,12,0.74,15,1.323,16,0.109,20,0.109,21,0.158,26,0.008,27,0.008,79,1.551,83,1.557,89,1.295,107,0.74,113,1.587,116,4.222,142,0.982,147,1.29,148,1.209,150,1.248,153,0.925,155,3.487,159,2.597,160,3.131,161,2.926,162,1.02,167,2.486,168,2.526,169,1.339,170,3.034,171,2.839,172,1.339,173,2.672,174,2.279,175,2.839,187,1.683,197,1.403,201,0.834,207,1.498,208,2.978,213,2.672,214,3.268,216,2.702,248,4.19,264,1.816,437,0.825,444,3.561,470,3.168,527,0.919,532,2.461,559,2.691,560,2.691,562,2.691,646,1.719,683,2.526,691,1.902,746,3.034,942,3.034,1082,3.268,1214,3.561,1223,2.839,1320,4.271,1322,3.034,1515,3.597,1664,3.034,1665,2.424,1666,3.874,1667,3.874,1668,3.874,1669,3.874,1670,3.874,1671,3.874,1672,3.874,1673,3.874,1674,3.874,1675,3.874,1676,3.874,1677,3.874,1678,3.874,1679,3.874,1680,3.874,1681,3.874,1682,3.874,1683,3.097,1684,4.55,1685,3.097,1686,3.097,1687,3.097,1688,3.097,1689,3.097,1690,3.097,1691,3.097,1692,4.688,1693,3.097,1694,3.097,1695,3.954,1696,3.954,1697,3.097,1698,4.55,1699,3.097,1700,3.097,1701,3.097,1702,3.097,1703,3.097,1704,3.097,1705,3.097,1706,3.097,1707,3.097,1708,4.55,1709,3.097,1710,3.097,1711,3.954,1712,3.097,1713,3.097,1714,3.097,1715,3.097,1716,3.097,1717,3.954,1718,3.954,1719,3.097,1720,3.097]],["title/entities/UserInfo.html",[91,1.729,572,1.166]],["body/entities/UserInfo.html",[3,0.102,4,0.09,5,0.09,7,0.213,10,1.221,11,0.015,12,0.734,15,1.313,16,0.102,20,0.102,21,0.1,26,0.008,27,0.008,55,1.11,56,1.11,57,1.206,91,2.258,105,4.013,107,0.764,113,1.522,125,1.259,153,0.878,201,0.446,368,0.881,408,2.743,437,0.938,527,0.888,572,1.27,577,3.759,578,4.084,579,4.084,581,2.396,583,5.315,585,2.47,587,5.606,589,2.273,599,3.603,704,2.273,933,3.79,962,5.725,1049,4.991,1068,3.1,1515,3.449,1666,3.715,1667,3.715,1668,3.715,1669,3.715,1670,3.715,1671,3.715,1672,3.715,1673,3.715,1674,3.715,1675,3.715,1676,3.715,1677,3.715,1678,3.715,1679,3.715,1680,3.715,1681,3.715,1682,3.715,1721,2.506,1722,4.495,1723,4.495,1724,4.495,1725,2.884,1726,2.884,1727,2.884,1728,2.884,1729,3.751,1730,2.884,1731,2.884,1732,2.884,1733,2.884,1734,2.884,1735,2.884,1736,2.884,1737,2.884,1738,2.884,1739,2.884,1740,2.884,1741,2.884,1742,2.884,1743,2.884,1744,2.884,1745,2.884,1746,2.884,1747,2.884,1748,2.884]],["title/controllers/UserInfoController.html",[0,1.124,1749,2.846]],["body/controllers/UserInfoController.html",[0,1.804,2,0.921,3,0.224,4,0.098,5,0.098,7,0.231,8,1.401,10,0.984,11,0.015,12,0.592,14,2.231,15,0.962,16,0.211,17,0.613,20,0.11,21,0.108,22,1.495,23,1.255,24,1.943,26,0.008,27,0.008,72,2.861,73,4.433,91,3.074,107,0.556,113,1.597,114,2.854,129,1.751,144,0.613,147,1.885,148,0.932,150,1.327,167,2.78,168,2.546,172,2.073,181,1.568,184,1.839,187,1.696,196,3.058,197,1.568,199,4.293,200,1.968,201,0.924,202,1.759,208,3.528,209,2.605,215,2.045,217,2.861,221,2.415,229,1.917,230,2.274,231,2.297,232,2.719,260,3.729,261,1.937,262,3.33,264,1.401,266,2.415,270,2.499,303,3.058,305,3.175,309,2.19,315,2.861,437,1.277,468,1.695,527,1.062,617,2.002,620,2.546,625,2.546,627,2.559,628,1.648,664,3.985,679,3.058,687,2.087,696,2.415,754,3.058,766,3.59,777,2.087,889,3.058,942,3.058,1136,4.148,1171,3.294,1221,3.59,1477,3.985,1664,4.58,1749,3.294,1750,4.775,1751,2.72,1752,3.985,1753,5.194,1754,3.985,1755,3.985,1756,3.985,1757,3.985,1758,4.586,1759,5.194,1760,3.985,1761,5.977,1762,3.985,1763,2.72,1764,3.13,1765,4.586,1766,4.586,1767,4.586,1768,4.586,1769,4.586,1770,4.586,1771,4.586,1772,4.586,1773,3.985,1774,2.72,1775,4.586,1776,3.13,1777,4.586,1778,4.586,1779,4.586,1780,3.985,1781,3.985,1782,4.586,1783,4.586,1784,4.586,1785,3.13,1786,3.13,1787,2.72,1788,3.985,1789,3.13,1790,3.387,1791,2.72,1792,2.72,1793,2.72,1794,3.13,1795,3.13,1796,3.13,1797,3.13,1798,2.72,1799,3.13,1800,3.13,1801,3.13,1802,3.13,1803,3.13]],["title/modules/UserInfoModule.html",[28,1.166,48,2.642]],["body/modules/UserInfoModule.html",[2,1.834,3,0.172,4,0.153,5,0.153,11,0.015,16,0.276,17,0.958,20,0.172,21,0.169,26,0.011,27,0.011,28,2.018,30,2.046,31,2.046,32,2.232,33,2.232,34,2.046,35,3.128,36,2.232,48,5.081,50,2.843,51,2.232,52,2.232,54,2.337,58,2.337,59,1.495,72,3.888,73,3.263,79,3.122,89,2.606,91,2.136,97,3.459,114,2.976,129,1.642,144,0.958,147,1.767,148,1.267,150,1.36,199,5.185,215,2.132,259,2.843,260,3.888,261,1.935,262,3.122,264,1.903,270,2.606,276,2.874,279,2.874,281,3.515,676,4.253,1126,3.515,1136,3.888,1171,4.476,1749,4.925,1750,3.515,1752,5.416,1753,5.416,1754,5.416,1755,5.416,1756,5.416,1757,5.416,1790,4.755,1791,4.253,1804,4.253,1805,4.253,1806,4.894,1807,4.894]],["title/injectables/UserInfoService.html",[135,1.124,1790,2.472]],["body/injectables/UserInfoService.html",[3,0.123,4,0.05,5,0.05,7,0.118,8,0.822,11,0.015,12,0.461,14,1.612,15,0.433,16,0.203,17,0.313,20,0.056,21,0.055,24,0.488,26,0.005,27,0.005,59,0.488,72,2.855,73,3.52,79,2.292,83,1.402,89,2.207,91,1.788,97,2.275,107,0.425,113,2.16,116,4.671,129,1.87,135,0.763,136,0.728,145,0.886,146,3.051,147,1.572,148,1.465,150,1.391,165,0.841,166,0.697,167,1.459,168,0.886,169,2.183,172,1.923,175,0.996,183,2.151,184,1.4,187,1.835,188,2.521,197,1.787,200,1.507,201,0.707,202,1.346,203,1.4,207,1.826,208,2.292,209,1.692,211,1.972,215,1.194,216,2.778,228,1.387,229,2.074,230,0.546,260,1.68,261,1.515,264,1.92,266,0.841,276,0.937,279,0.937,281,1.147,288,1.348,290,3.065,301,3.033,304,2.977,305,1.667,309,2.185,314,1.387,315,0.996,317,1.387,318,1.581,319,5.928,320,2.989,325,3.46,334,1.933,339,2.507,341,2.557,343,1.387,347,0.568,363,2.292,364,0.8,365,0.8,367,2.339,368,0.488,373,1.25,374,2.053,377,1.387,378,3.793,381,1.348,383,2.566,386,0.8,392,2.053,399,2.292,403,3.61,408,2.185,409,3.002,412,1.417,415,3.504,417,2.053,418,2.92,419,1.838,420,1.788,422,2.158,423,1.795,427,3.033,428,1.147,429,2.409,437,0.633,440,1.064,442,1.674,468,1.407,469,1.064,470,2.406,474,2.644,477,0.8,478,0.8,502,2.507,509,2.339,514,1.25,527,0.634,608,1.459,617,0.697,627,1.036,633,0.615,679,1.795,686,1.348,687,1.064,691,0.667,692,1.68,696,1.417,698,2.644,699,1.064,704,3.38,705,1.147,712,1.387,730,2.158,731,1.68,732,3.095,743,1.147,754,1.064,755,0.886,776,2.178,830,0.996,831,1.147,871,2.732,889,1.795,893,1.795,896,2.507,948,3.033,961,0.937,977,0.996,1100,2.339,1102,1.387,1106,2.339,1126,1.147,1132,3.033,1136,1.68,1137,4.311,1143,1.25,1152,1.387,1177,1.25,1183,2.339,1187,1.147,1189,1.25,1194,2.339,1210,1.25,1212,2.339,1223,1.68,1234,1.387,1275,1.25,1279,1.387,1286,1.25,1292,2.339,1331,2.107,1348,3.561,1349,3.033,1352,1.25,1392,3.033,1466,1.387,1475,1.387,1515,2.327,1571,1.387,1572,3.033,1610,2.339,1664,3.051,1666,1.147,1667,1.147,1668,1.147,1669,2.943,1670,1.147,1671,1.147,1672,1.147,1673,2.507,1674,1.147,1675,2.507,1676,1.147,1677,1.147,1678,1.147,1679,1.147,1680,1.147,1681,1.147,1682,1.147,1722,1.387,1723,1.387,1724,1.387,1729,1.387,1750,3.792,1759,3.033,1760,2.339,1762,2.339,1763,2.339,1774,1.387,1780,1.387,1781,2.339,1787,1.387,1788,2.327,1790,1.68,1792,1.387,1793,1.387,1808,1.387,1809,4.098,1810,1.597,1811,1.597,1812,2.692,1813,1.597,1814,2.692,1815,2.339,1816,2.692,1817,2.692,1818,2.692,1819,2.692,1820,4.098,1821,2.692,1822,2.692,1823,2.692,1824,2.692,1825,2.692,1826,2.692,1827,3.49,1828,2.692,1829,1.597,1830,1.597,1831,1.597,1832,1.597,1833,1.597,1834,1.597,1835,1.597,1836,1.597,1837,2.692,1838,1.597,1839,1.597,1840,1.597,1841,1.597,1842,1.597,1843,2.692,1844,2.692,1845,1.597,1846,1.597,1847,1.597,1848,1.597,1849,1.597,1850,1.597,1851,1.597,1852,4.098,1853,3.49,1854,1.597,1855,1.597,1856,1.597,1857,1.597,1858,1.597,1859,1.597,1860,1.597,1861,3.976,1862,3.49,1863,2.692,1864,1.597,1865,1.597,1866,1.597,1867,1.597,1868,1.597,1869,1.597,1870,1.597,1871,1.597,1872,1.597,1873,1.597,1874,2.692,1875,1.597,1876,1.597,1877,1.597,1878,1.597,1879,1.597,1880,1.597,1881,1.597,1882,1.597,1883,1.597,1884,1.597,1885,1.597,1886,1.597,1887,1.597,1888,1.597,1889,1.597,1890,1.597,1891,1.597,1892,1.597,1893,1.597,1894,1.597,1895,1.597,1896,1.597,1897,1.597,1898,1.597,1899,1.597,1900,1.597,1901,1.597,1902,1.597,1903,1.597,1904,1.597,1905,1.597,1906,1.597,1907,1.597,1908,1.597,1909,1.597,1910,2.692,1911,1.597,1912,1.597,1913,2.692,1914,2.692,1915,2.692,1916,1.597,1917,1.597,1918,1.597,1919,3.49,1920,1.597,1921,1.597,1922,1.597,1923,1.597,1924,3.49,1925,1.597,1926,1.597,1927,1.597,1928,1.597,1929,1.597,1930,1.597,1931,1.597,1932,1.597,1933,2.692,1934,1.597,1935,1.597,1936,1.597,1937,1.597,1938,1.597,1939,1.597,1940,1.597,1941,2.692,1942,1.597,1943,1.597,1944,4.098,1945,1.597,1946,1.597,1947,1.597,1948,1.597,1949,1.597,1950,1.597,1951,1.597,1952,1.597,1953,1.597,1954,2.692,1955,2.692,1956,4.098,1957,2.692,1958,1.597,1959,1.597,1960,1.597,1961,1.597,1962,1.597,1963,1.597,1964,1.597,1965,1.597,1966,1.597,1967,1.597,1968,1.597,1969,1.597,1970,1.597,1971,1.597,1972,1.597,1973,1.597]],["title/classes/UserUpdateDto.html",[21,0.137,1788,2.642]],["body/classes/UserUpdateDto.html",[3,0.128,4,0.113,5,0.113,7,0.267,10,1.237,11,0.015,12,0.744,15,1.331,16,0.128,20,0.128,21,0.176,26,0.009,27,0.009,107,0.744,113,1.733,142,1.149,148,1.299,150,1.316,153,1.035,160,3.219,161,2.959,162,1.193,197,1.508,208,3.201,213,2.991,214,3.658,248,4.425,264,1.952,437,0.923,444,3.987,527,0.788,532,2.324,646,2.011,683,2.827,691,2.13,746,3.396,942,3.396,1082,3.658,1214,3.987,1223,3.178,1322,3.396,1515,3.928,1666,4.231,1667,4.231,1668,4.231,1669,4.231,1670,4.231,1671,4.231,1672,4.231,1673,4.231,1674,4.231,1675,4.231,1676,4.231,1677,4.231,1678,4.231,1679,4.231,1680,4.231,1681,4.231,1682,4.231,1695,4.426,1696,4.426,1711,4.426,1788,3.396,1974,3.148,1975,3.623,1976,3.623,1977,3.623,1978,3.623,1979,3.623,1980,3.623,1981,3.623,1982,3.623,1983,3.623,1984,3.623,1985,3.623,1986,3.623,1987,3.623,1988,3.623,1989,3.623,1990,3.623,1991,3.623,1992,3.623,1993,3.623]],["title/entities/ZonaCliente.html",[93,1.892,572,1.166]],["body/entities/ZonaCliente.html",[3,0.186,4,0.165,5,0.165,7,0.389,10,1.097,11,0.014,12,0.66,15,1.052,16,0.23,20,0.186,21,0.183,26,0.011,27,0.011,55,2.031,56,2.031,57,2.206,87,2.873,93,3.12,105,3.273,107,0.69,125,2.303,153,1.328,201,1.097,202,1.922,368,1.612,437,1.287,526,4.428,527,1.01,533,2.779,572,1.922,577,2.52,578,3.273,579,3.273,581,3.627,585,3.389,599,2.98,845,4.693,846,5.097,847,3.79,853,4.586,1068,4.693,1547,5.678,1548,5.678,1994,4.586,1995,5.277,1996,5.277,1997,5.277,1998,6.534,1999,5.277]],["title/entities/Zone.html",[95,2.2,572,1.166]],["body/entities/Zone.html",[3,0.168,4,0.149,5,0.149,7,0.351,10,1.17,11,0.014,12,0.703,15,1.255,16,0.168,20,0.168,21,0.165,26,0.011,27,0.011,55,1.831,56,1.831,57,1.989,77,2.829,95,3.756,105,3.066,107,0.743,125,2.076,127,4.327,153,1.244,201,1.104,368,1.453,437,1.227,527,1.104,572,1.801,577,3.529,578,3.904,579,3.904,581,4.407,585,3.231,587,4.79,589,3.223,591,4.79,595,4.79,597,5.318,599,3.451,2000,4.134,2001,4.86,2002,4.86,2003,4.86,2004,4.758,2005,4.758,2006,4.758,2007,4.758,2008,4.758,2009,4.758]],["title/controllers/ZoneController.html",[0,1.124,2010,2.846]],["body/controllers/ZoneController.html",[0,1.104,2,1.146,3,0.137,4,0.122,5,0.122,7,0.287,8,1.636,10,1.02,11,0.015,12,0.613,14,2.277,16,0.216,17,0.762,20,0.137,21,0.135,22,1.86,23,1.562,24,2.014,26,0.009,27,0.009,95,3.399,107,0.569,129,1.737,144,0.762,148,1.089,150,1.009,167,2.24,169,1.576,174,2.683,181,1.951,183,2.256,184,2.644,197,1.556,200,2.016,201,0.947,202,1.802,207,1.764,209,2.758,230,2.365,231,2.683,232,3.067,261,1.675,262,2.683,264,1.636,266,2.821,270,2.24,303,3.572,305,2.558,347,1.385,407,2.558,437,1.388,442,2.091,468,2.026,527,1.153,608,2.24,620,2.974,625,2.974,627,2.539,628,2.051,633,2.357,679,3.572,683,2.974,686,2.683,687,2.597,696,2.821,707,2.821,766,4.193,767,4.397,1187,3.848,1271,4.193,1798,3.385,2010,3.848,2011,3.385,2012,4.655,2013,4.655,2014,4.193,2015,4.655,2016,4.655,2017,6.595,2018,4.655,2019,3.385,2020,4.721,2021,3.895,2022,3.895,2023,3.895,2024,5.357,2025,3.385,2026,3.895,2027,5.357,2028,3.82,2029,3.385,2030,3.385,2031,3.895,2032,3.895,2033,3.895,2034,3.895,2035,3.895,2036,3.895,2037,3.895]],["title/classes/ZoneDto.html",[21,0.137,2020,2.472]],["body/classes/ZoneDto.html",[3,0.181,4,0.161,5,0.161,7,0.38,10,1.17,11,0.014,12,0.704,15,1.308,16,0.181,20,0.227,21,0.243,26,0.011,27,0.011,77,3.074,107,0.704,142,1.632,153,1.308,155,3.871,159,2.855,160,3.095,161,2.953,162,1.694,201,1.137,527,1.085,532,3.201,2001,5.28,2002,5.28,2003,5.28,2020,4.013,2038,4.028,2039,5.146,2040,5.146,2041,5.146,2042,5.146,2043,5.146,2044,5.146,2045,3.696]],["title/modules/ZoneModule.html",[28,1.166,49,2.642]],["body/modules/ZoneModule.html",[2,1.895,3,0.182,4,0.161,5,0.161,11,0.014,16,0.276,17,1.009,20,0.182,21,0.178,26,0.011,27,0.011,28,2.066,30,2.155,31,2.155,32,2.352,33,2.352,34,2.155,35,3.204,36,2.352,49,5.28,50,2.937,51,2.352,52,2.352,54,2.462,58,2.462,59,1.574,77,2.692,95,2.862,144,1.009,169,1.895,184,2.582,261,1.635,264,1.967,270,2.692,278,3.216,407,3.075,468,1.826,629,4.535,675,4.035,696,3.391,1187,4.625,2010,5.044,2012,5.596,2013,5.596,2014,5.04,2015,5.596,2028,4.818,2029,4.48,2046,4.48,2047,4.48,2048,5.155,2049,5.155,2050,5.155,2051,5.155]],["title/injectables/ZoneService.html",[135,1.124,2028,2.472]],["body/injectables/ZoneService.html",[3,0.107,4,0.095,5,0.095,7,0.225,8,1.372,11,0.015,12,0.585,14,2.01,16,0.232,17,0.596,20,0.107,21,0.105,24,0.93,26,0.008,27,0.008,59,0.93,77,3.114,95,2.965,107,0.548,129,1.407,135,1.274,136,1.389,144,0.596,145,2.494,147,1.672,148,1.384,150,1.185,172,1.572,174,1.525,183,2.018,184,1.802,187,1.126,188,2.91,197,1.791,200,1.942,201,1.163,202,1.735,203,2.365,207,1.48,209,2.327,211,1.899,213,2.639,215,1.042,230,1.042,261,1.356,262,2.251,264,1.801,268,2.366,278,1.9,288,2.251,290,3.252,292,4.181,304,1.961,305,2.146,320,2.954,325,2.804,339,2.187,341,1.9,347,1.083,363,2.954,364,1.525,365,1.525,368,0.93,374,2.251,376,2.383,378,3.574,381,2.251,383,2.63,386,1.525,392,2.954,399,2.954,403,3.297,407,1.454,409,2.816,415,1.788,416,1.603,417,3.151,420,2.331,421,3.517,425,1.603,437,1.193,442,2.159,468,1.867,474,2.675,477,1.525,478,1.525,527,0.912,608,1.879,617,1.961,627,2.056,633,1.172,672,2.996,675,2.383,679,2.996,683,2.965,686,2.251,687,2.03,691,1.273,698,1.525,701,3.905,704,1.603,706,2.804,707,3.312,709,2.804,710,1.788,730,1.603,731,1.9,732,2.804,733,1.9,776,1.9,811,2.187,825,5.917,830,1.9,831,2.187,870,3.517,889,2.03,953,1.9,1148,2.187,1189,2.383,1239,3.517,1351,3.517,1427,2.646,1773,3.905,1861,3.905,2001,4.728,2002,4.728,2003,4.518,2014,2.383,2016,3.905,2018,3.905,2019,3.905,2020,4.248,2025,2.646,2028,2.804,2030,2.646,2052,2.646,2053,5.898,2054,3.045,2055,3.045,2056,4.494,2057,3.045,2058,4.494,2059,4.494,2060,4.494,2061,3.045,2062,4.494,2063,3.045,2064,3.045,2065,3.045,2066,3.045,2067,3.045,2068,3.045,2069,3.045,2070,3.045,2071,3.045,2072,3.045,2073,3.045,2074,3.045,2075,3.045,2076,3.045,2077,5.342,2078,3.045,2079,3.045,2080,3.045,2081,3.045,2082,3.045]],["title/classes/ZoneUpadateDto.html",[21,0.137,2045,2.846]],["body/classes/ZoneUpadateDto.html",[3,0.181,4,0.161,5,0.161,7,0.38,10,1.17,11,0.014,12,0.704,15,1.308,16,0.181,20,0.227,21,0.243,26,0.011,27,0.011,77,3.074,107,0.704,142,1.632,153,1.308,159,2.855,160,3.095,161,2.953,162,1.694,201,1.137,248,4.081,527,1.085,532,3.201,646,2.856,2001,5.28,2002,5.28,2003,5.28,2020,3.211,2038,4.028,2045,4.62,2083,5.146,2084,5.146,2085,5.146,2086,5.146,2087,5.146]],["title/coverage.html",[2088,4.243]],["body/coverage.html",[0,2.166,1,2.621,5,0.114,6,3.172,11,0.015,18,2.277,21,0.278,26,0.009,27,0.009,34,1.526,73,3.414,77,1.526,79,1.828,81,2.277,83,1.249,85,2.026,87,1.35,89,1.526,91,1.593,93,1.743,95,2.026,97,2.026,107,0.339,111,2.857,135,2.166,137,3.172,141,2.277,143,4.008,164,2.277,179,2.621,180,3.172,233,2.143,257,2.026,283,3.172,409,1.743,523,2.277,524,3.172,525,4.008,534,2.277,535,4.008,542,2.277,545,2.277,546,4.008,547,4.008,564,2.277,565,4.008,572,2.248,573,3.172,591,2.857,600,2.621,601,3.172,615,2.277,624,2.277,629,2.143,641,4.008,677,3.172,704,4.322,737,2.621,738,3.172,773,2.434,778,2.277,783,2.621,800,3.172,838,3.172,856,2.857,868,2.621,869,3.172,898,2.277,902,2.696,921,3.172,960,3.172,971,2.277,972,4.008,989,2.277,995,3.172,1001,3.172,1007,2.277,1008,4.008,1012,2.277,1016,3.172,1068,5.357,1077,2.621,1078,3.172,1112,2.277,1128,3.172,1169,2.621,1170,3.172,1263,3.172,1300,3.172,1315,2.621,1316,3.172,1345,2.434,1353,2.277,1383,3.172,1397,2.143,1537,3.172,1550,2.621,1551,3.172,1569,2.434,1596,3.172,1664,2.434,1665,2.857,1721,3.172,1749,2.621,1750,3.678,1751,3.172,1788,2.434,1790,2.277,1808,3.172,1974,3.172,1994,3.172,2000,3.172,2010,2.621,2011,3.172,2020,2.277,2028,2.277,2038,4.008,2045,2.621,2052,3.172,2088,2.857,2089,3.65,2090,3.65,2091,3.65,2092,5.121,2093,6.754,2094,5.121,2095,3.65,2096,6.413,2097,7.869,2098,3.65,2099,3.65,2100,3.65,2101,3.65,2102,3.65,2103,5.915,2104,3.172,2105,3.65,2106,3.65,2107,3.65,2108,5.915,2109,3.65,2110,3.65,2111,3.65,2112,3.65,2113,4.008,2114,3.65,2115,3.65,2116,3.65,2117,5.915,2118,5.121,2119,5.121,2120,5.121,2121,5.121,2122,5.121,2123,5.121,2124,3.65,2125,3.65,2126,3.65,2127,3.65,2128,3.65,2129,3.65,2130,3.65]],["title/dependencies.html",[31,1.994,2131,2.87]],["body/dependencies.html",[11,0.014,17,1.157,21,0.242,26,0.012,27,0.012,31,2.472,59,1.805,61,4.246,108,5.137,162,1.946,368,1.805,540,3.688,541,3.688,2132,7.456,2133,5.912,2134,5.912,2135,5.912,2136,5.912,2137,5.912,2138,5.912,2139,5.912,2140,5.912,2141,5.912,2142,5.912,2143,5.912,2144,5.912,2145,5.912,2146,5.912,2147,5.912,2148,5.912,2149,5.912,2150,5.912]],["title/miscellaneous/enumerations.html",[2151,2.061,2152,4.144]],["body/miscellaneous/enumerations.html",[7,0.465,11,0.014,26,0.013,27,0.013,166,3.169,1665,4.928,1692,6.311,1717,6.311,1718,6.311,2151,3.928,2152,5.472,2153,6.297]],["title/miscellaneous/functions.html",[2151,2.061,2154,4.144]],["body/miscellaneous/functions.html",[7,0.472,11,0.013,26,0.013,27,0.013,34,3.219,2113,5.004,2151,3.989,2154,5.556,2155,5.556]],["title/index.html",[7,0.244,2156,3.303,2157,3.303]],["body/index.html",[4,0.169,11,0.014,26,0.012,27,0.012,144,1.056,177,3.168,290,2.576,1443,4.222,1815,4.688,2088,4.222,2158,5.395,2159,5.395,2160,6.624,2161,5.395,2162,5.395,2163,5.395,2164,5.395,2165,5.395,2166,7.168,2167,5.395,2168,5.395,2169,7.91,2170,5.395,2171,5.395,2172,7.809,2173,5.395,2174,5.395,2175,6.624,2176,5.395,2177,5.395,2178,5.395,2179,5.395,2180,6.624,2181,6.624,2182,5.395,2183,5.395,2184,5.395,2185,6.624,2186,6.624,2187,5.395,2188,5.395,2189,5.395,2190,5.395,2191,5.395,2192,4.688,2193,5.395,2194,5.395,2195,5.395,2196,5.395,2197,5.395,2198,5.395,2199,5.395,2200,5.395,2201,5.395,2202,5.395,2203,4.688,2204,5.395,2205,5.395,2206,5.395,2207,5.395,2208,5.395,2209,5.395,2210,4.688]],["title/modules.html",[30,2.266]],["body/modules.html",[11,0.012,26,0.012,27,0.012,29,4.153,30,2.417,40,3.607,41,3.855,42,3.855,43,3.855,44,3.855,45,3.855,46,3.855,47,3.607,48,3.855,49,3.855,2192,7.139,2211,8.216,2212,8.216,2213,8.216]],["title/overview.html",[2214,4.71]],["body/overview.html",[2,1.298,11,0.014,18,4.07,26,0.01,27,0.01,28,1.298,29,5.944,30,1.844,31,1.844,32,2.012,33,2.012,34,1.844,35,2.012,36,2.012,37,3.833,38,3.833,39,3.833,40,4.843,41,4.81,42,4.941,43,4.941,44,4.81,45,4.81,46,5.175,47,4.715,48,4.81,49,5.039,50,2.657,51,2.012,52,2.012,125,1.925,136,2.012,142,1.398,233,4.437,254,3.833,255,3.833,256,3.833,257,3.851,629,4.074,660,3.833,661,3.833,778,4.07,794,3.833,795,3.833,898,4.715,913,3.833,914,3.833,915,3.833,1112,4.07,1122,3.833,1123,3.833,1353,4.07,1374,3.833,1376,3.833,1397,4.437,1589,3.833,1590,3.833,1591,3.833,1790,4.07,1804,3.833,1805,3.833,2028,4.07,2046,3.833,2047,3.833,2104,6.029,2214,3.833,2215,4.41]],["title/properties.html",[153,0.97,2131,2.87]],["body/properties.html",[11,0.014,26,0.013,27,0.013,144,1.243,153,1.291,2203,5.52,2210,5.52,2216,6.352,2217,6.352,2218,6.352]],["title/miscellaneous/variables.html",[2151,2.061,2219,4.144]],["body/miscellaneous/variables.html",[7,0.467,11,0.014,26,0.013,27,0.013,111,5.698,166,2.76,933,3.713,2113,4.95,2151,3.946,2155,5.496,2219,5.496,2220,6.324,2221,6.324]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":704,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2217,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":440,"title":{},"body":{"injectables/CoaService.html":{},"controllers/RadcheckController.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["1/3",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":514,"title":{},"body":{"injectables/CoaService.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["10.0.0",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1068,"title":{},"body":{"entities/Radacct.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"coverage.html":{}}}],["11",{"_index":2104,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["128",{"_index":587,"title":{},"body":{"entities/Nas.html":{},"entities/UserInfo.html":{},"entities/Zone.html":{}}}],["15",{"_index":1061,"title":{},"body":{"entities/Radacct.html":{}}}],["2",{"_index":966,"title":{},"body":{"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/Service.html":{}}}],["2.0.2",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2215,"title":{},"body":{"overview.html":{}}}],["200",{"_index":583,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadUserGroup.html":{},"entities/System.html":{},"entities/UserInfo.html":{}}}],["24nr^1$d##dg",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["25",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1538,"title":{},"body":{"entities/System.html":{}}}],["253",{"_index":969,"title":{},"body":{"entities/RadCheck.html":{},"entities/RadGroupReply.html":{}}}],["28",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["2>&1",{"_index":459,"title":{},"body":{"injectables/CoaService.html":{}}}],["3",{"_index":454,"title":{},"body":{"injectables/CoaService.html":{},"entities/Service.html":{}}}],["3.0.0",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["3.5.2",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":597,"title":{},"body":{"entities/Nas.html":{},"entities/Zone.html":{}}}],["3000",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":595,"title":{},"body":{"entities/Nas.html":{},"entities/Radacct.html":{},"entities/Zone.html":{}}}],["33",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["37",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1313,"title":{},"body":{"entities/Service.html":{},"injectables/ServicesService.html":{}}}],["4/6",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1058,"title":{},"body":{"entities/Radacct.html":{}}}],["45",{"_index":1063,"title":{},"body":{"entities/Radacct.html":{}}}],["5/20",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":580,"title":{},"body":{"entities/Nas.html":{},"entities/Radacct.html":{}}}],["6/10",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":591,"title":{},"body":{"entities/Nas.html":{},"entities/Zone.html":{},"coverage.html":{}}}],["64",{"_index":593,"title":{},"body":{"entities/Nas.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/Radacct.html":{}}}],["66",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["7448280",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["75",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["9/24",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["aborta",{"_index":1847,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["abortada",{"_index":1151,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["acceden",{"_index":269,"title":{},"body":{"modules/CoaModule.html":{}}}],["acceso",{"_index":603,"title":{},"body":{"controllers/NasController.html":{}}}],["acctauthentic",{"_index":1017,"title":{},"body":{"entities/Radacct.html":{}}}],["acctinputoctets",{"_index":1018,"title":{},"body":{"entities/Radacct.html":{}}}],["acctinterval",{"_index":1019,"title":{},"body":{"entities/Radacct.html":{}}}],["acctoutputoctets",{"_index":1020,"title":{},"body":{"entities/Radacct.html":{}}}],["acctsessionid",{"_index":1021,"title":{},"body":{"entities/Radacct.html":{}}}],["acctsessiontime",{"_index":1022,"title":{},"body":{"entities/Radacct.html":{}}}],["acctstarttime",{"_index":1023,"title":{},"body":{"entities/Radacct.html":{}}}],["acctstoptime",{"_index":1024,"title":{},"body":{"entities/Radacct.html":{}}}],["acctterminatecause",{"_index":1025,"title":{},"body":{"entities/Radacct.html":{}}}],["acctuniqueid",{"_index":1026,"title":{},"body":{"entities/Radacct.html":{}}}],["ack",{"_index":396,"title":{},"body":{"injectables/CoaService.html":{}}}],["acl_suspension",{"_index":487,"title":{},"body":{"injectables/CoaService.html":{}}}],["activacion",{"_index":198,"title":{},"body":{"controllers/CoaController.html":{}}}],["activado",{"_index":466,"title":{},"body":{"injectables/CoaService.html":{}}}],["activar",{"_index":297,"title":{},"body":{"injectables/CoaService.html":{}}}],["activateuser",{"_index":189,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["activateuser(@param('username",{"_index":240,"title":{},"body":{"controllers/CoaController.html":{}}}],["activateuser(username",{"_index":193,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["activo",{"_index":398,"title":{},"body":{"injectables/CoaService.html":{},"entities/Service.html":{}}}],["actualiza",{"_index":775,"title":{},"body":{"controllers/NodesController.html":{}}}],["actualizacion",{"_index":1924,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["actualización",{"_index":1959,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["actualizado",{"_index":1168,"title":{},"body":{"injectables/RadcheckService.html":{},"injectables/ServicesService.html":{}}}],["actualizar",{"_index":896,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["actualizar.\\n",{"_index":1920,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["actualizedradcheck",{"_index":1922,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["acutalizar",{"_index":1518,"title":{},"body":{"injectables/ServicesService.html":{}}}],["add",{"_index":1199,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["address",{"_index":1515,"title":{},"body":{"injectables/ServicesService.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["agrega",{"_index":362,"title":{},"body":{"injectables/CoaService.html":{}}}],["agregado",{"_index":1179,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["al",{"_index":187,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["alerta",{"_index":1944,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["alertar",{"_index":1950,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["algo",{"_index":316,"title":{},"body":{"injectables/CoaService.html":{}}}],["algun",{"_index":314,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["alguna",{"_index":1348,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["alguno",{"_index":1239,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["all.foreach(async",{"_index":1647,"title":{},"body":{"injectables/SystemsService.html":{}}}],["allnas",{"_index":735,"title":{},"body":{"injectables/NasService.html":{}}}],["allnas?.length",{"_index":736,"title":{},"body":{"injectables/NasService.html":{}}}],["allonsys",{"_index":1553,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["allonsys(@param('id",{"_index":1586,"title":{},"body":{"controllers/SystemsController.html":{}}}],["allonsys(id",{"_index":1556,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["allradchecks",{"_index":1154,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["allradchecks?.length",{"_index":1157,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["allusergroups",{"_index":1297,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["allusergroups?.length",{"_index":1299,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["aloje",{"_index":1469,"title":{},"body":{"injectables/ServicesService.html":{}}}],["alter",{"_index":1197,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["alterada",{"_index":1259,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["alterar",{"_index":607,"title":{},"body":{"controllers/NasController.html":{}}}],["amazing",{"_index":2193,"title":{},"body":{"index.html":{}}}],["ambos",{"_index":1225,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["aosciada",{"_index":483,"title":{},"body":{"injectables/CoaService.html":{}}}],["aparecer",{"_index":1193,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["api",{"_index":352,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["apikey",{"_index":566,"title":{},"body":{"classes/CreateSystemDto.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["aplican",{"_index":1098,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["app",{"_index":1815,"title":{},"body":{"injectables/UserInfoService.html":{},"index.html":{}}}],["app.controller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":1454,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["applications",{"_index":2165,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprametros",{"_index":306,"title":{},"body":{"injectables/CoaService.html":{}}}],["aqui",{"_index":665,"title":{},"body":{"modules/NasModule.html":{}}}],["array",{"_index":347,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["array/lista",{"_index":1837,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["asc",{"_index":862,"title":{},"body":{"entities/Plan.html":{}}}],["asignada",{"_index":299,"title":{},"body":{"injectables/CoaService.html":{}}}],["asignado",{"_index":1698,"title":{},"body":{"classes/UserDto.html":{}}}],["asociada",{"_index":444,"title":{},"body":{"injectables/CoaService.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["asociadas",{"_index":809,"title":{},"body":{"injectables/NodesService.html":{}}}],["asociados",{"_index":1477,"title":{},"body":{"injectables/ServicesService.html":{},"controllers/UserInfoController.html":{}}}],["async",{"_index":188,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["attribute",{"_index":165,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"injectables/RadcheckService.html":{},"injectables/UserInfoService.html":{}}}],["aunque",{"_index":1224,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["autenticación",{"_index":1080,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["author",{"_index":2203,"title":{},"body":{"index.html":{},"properties.html":{}}}],["auto_inc",{"_index":1200,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["auto_increment",{"_index":859,"title":{},"body":{"entities/Plan.html":{}}}],["automaticamente",{"_index":1196,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["await",{"_index":383,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["añade",{"_index":1928,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["backers",{"_index":2194,"title":{},"body":{"index.html":{}}}],["base",{"_index":889,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["bd",{"_index":301,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["bigint",{"_index":1043,"title":{},"body":{"entities/Radacct.html":{},"entities/Service.html":{}}}],["birra",{"_index":1779,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["body",{"_index":231,"title":{},"body":{"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["bool",{"_index":501,"title":{},"body":{"injectables/CoaService.html":{}}}],["boolean",{"_index":400,"title":{},"body":{"injectables/CoaService.html":{},"injectables/RadusergroupService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borrar",{"_index":467,"title":{},"body":{"injectables/CoaService.html":{}}}],["browse",{"_index":2213,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2211,"title":{},"body":{"modules.html":{}}}],["buca",{"_index":1410,"title":{},"body":{"injectables/ServicesService.html":{}}}],["building",{"_index":2161,"title":{},"body":{"index.html":{}}}],["busca",{"_index":300,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"injectables/RadcheckService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["buscado",{"_index":890,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["buscan",{"_index":1839,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["buscar",{"_index":1221,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/UserInfoController.html":{}}}],["buscas",{"_index":1567,"title":{},"body":{"controllers/SystemsController.html":{}}}],["busqueda",{"_index":423,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["c",{"_index":453,"title":{},"body":{"injectables/CoaService.html":{}}}],["cada",{"_index":1468,"title":{},"body":{"injectables/ServicesService.html":{}}}],["calledstationid",{"_index":1027,"title":{},"body":{"entities/Radacct.html":{}}}],["callingstationid",{"_index":1028,"title":{},"body":{"entities/Radacct.html":{}}}],["cambiar",{"_index":516,"title":{},"body":{"injectables/CoaService.html":{}}}],["cambio",{"_index":151,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"controllers/RadusergroupController.html":{}}}],["campo",{"_index":1183,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{}}}],["campos",{"_index":167,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{}}}],["cancelado",{"_index":1312,"title":{},"body":{"entities/Service.html":{},"injectables/ServicesService.html":{}}}],["carpeta",{"_index":222,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["carácteres",{"_index":981,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["carácteres'})@isoptional()@isstring",{"_index":991,"title":{},"body":{"classes/RadCheckUpdateDto.html":{}}}],["carácteres'})@minlength(2",{"_index":980,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["cascade",{"_index":846,"title":{},"body":{"entities/Plan.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/ZonaCliente.html":{}}}],["caso",{"_index":1817,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["casos",{"_index":1139,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["catch",{"_index":386,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["cause",{"_index":422,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["changeplan",{"_index":190,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["changeplan(@body",{"_index":242,"title":{},"body":{"controllers/CoaController.html":{}}}],["changeplan(data",{"_index":204,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["changeplandto",{"_index":141,"title":{"classes/ChangePlanDto.html":{}},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"coverage.html":{}}}],["changeuserinfo",{"_index":1666,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["child_process",{"_index":370,"title":{},"body":{"injectables/CoaService.html":{}}}],["ciertos",{"_index":267,"title":{},"body":{"modules/CoaModule.html":{}}}],["city",{"_index":1667,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["class",{"_index":21,"title":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{},"overview.html":{}}}],["cleartext",{"_index":1932,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cliente",{"_index":1320,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{}}}],["clientes",{"_index":745,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{}}}],["clientid",{"_index":548,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coamodule",{"_index":254,"title":{},"body":{"modules/CoaModule.html":{},"overview.html":{}}}],["cluster_coamodule_exports",{"_index":255,"title":{},"body":{"modules/CoaModule.html":{},"overview.html":{}}}],["cluster_coamodule_providers",{"_index":256,"title":{},"body":{"modules/CoaModule.html":{},"overview.html":{}}}],["cluster_nasmodule",{"_index":660,"title":{},"body":{"modules/NasModule.html":{},"overview.html":{}}}],["cluster_nasmodule_providers",{"_index":661,"title":{},"body":{"modules/NasModule.html":{},"overview.html":{}}}],["cluster_nodesmodule",{"_index":794,"title":{},"body":{"modules/NodesModule.html":{},"overview.html":{}}}],["cluster_nodesmodule_providers",{"_index":795,"title":{},"body":{"modules/NodesModule.html":{},"overview.html":{}}}],["cluster_planmodule",{"_index":913,"title":{},"body":{"modules/PlanModule.html":{},"overview.html":{}}}],["cluster_planmodule_exports",{"_index":915,"title":{},"body":{"modules/PlanModule.html":{},"overview.html":{}}}],["cluster_planmodule_providers",{"_index":914,"title":{},"body":{"modules/PlanModule.html":{},"overview.html":{}}}],["cluster_radcheckmodule",{"_index":1122,"title":{},"body":{"modules/RadcheckModule.html":{},"overview.html":{}}}],["cluster_radcheckmodule_providers",{"_index":1123,"title":{},"body":{"modules/RadcheckModule.html":{},"overview.html":{}}}],["cluster_radusergroupmodule",{"_index":1256,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["cluster_radusergroupmodule_providers",{"_index":1257,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["cluster_servicesmodule",{"_index":1374,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":1375,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":1376,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_systemsmodule",{"_index":1589,"title":{},"body":{"modules/SystemsModule.html":{},"overview.html":{}}}],["cluster_systemsmodule_exports",{"_index":1591,"title":{},"body":{"modules/SystemsModule.html":{},"overview.html":{}}}],["cluster_systemsmodule_providers",{"_index":1590,"title":{},"body":{"modules/SystemsModule.html":{},"overview.html":{}}}],["cluster_userinfomodule",{"_index":1804,"title":{},"body":{"modules/UserInfoModule.html":{},"overview.html":{}}}],["cluster_userinfomodule_providers",{"_index":1805,"title":{},"body":{"modules/UserInfoModule.html":{},"overview.html":{}}}],["cluster_zonemodule",{"_index":2046,"title":{},"body":{"modules/ZoneModule.html":{},"overview.html":{}}}],["cluster_zonemodule_providers",{"_index":2047,"title":{},"body":{"modules/ZoneModule.html":{},"overview.html":{}}}],["coa",{"_index":182,"title":{},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{}}}],["coa.controller",{"_index":275,"title":{},"body":{"modules/CoaModule.html":{}}}],["coa.service",{"_index":152,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{}}}],["coa/coa.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["coa_cmd",{"_index":284,"title":{},"body":{"injectables/CoaService.html":{}}}],["coa_cmd(echocommand",{"_index":327,"title":{},"body":{"injectables/CoaService.html":{}}}],["coa_status",{"_index":285,"title":{},"body":{"injectables/CoaService.html":{}}}],["coa_status(response",{"_index":335,"title":{},"body":{"injectables/CoaService.html":{}}}],["coacontroller",{"_index":179,"title":{"controllers/CoaController.html":{}},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"coverage.html":{}}}],["coadto",{"_index":164,"title":{"classes/CoaDto.html":{}},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"coverage.html":{}}}],["coamodule",{"_index":40,"title":{"modules/CoaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["coaservice",{"_index":233,"title":{"injectables/CoaService.html":{}},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"coverage.html":{},"overview.html":{}}}],["coaservices",{"_index":1398,"title":{},"body":{"injectables/ServicesService.html":{}}}],["codigo_zona",{"_index":2001,"title":{},"body":{"entities/Zone.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["coincidan",{"_index":1953,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["coinciden",{"_index":1955,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["coinciden.\\n",{"_index":1964,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["colisiones",{"_index":1186,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["colocado",{"_index":1273,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["column",{"_index":599,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"controllers/RadusergroupController.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["column({length",{"_index":965,"title":{},"body":{"entities/RadCheck.html":{},"entities/RadGroupReply.html":{}}}],["column({type",{"_index":577,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["comando",{"_index":338,"title":{},"body":{"injectables/CoaService.html":{},"modules/PlanModule.html":{},"controllers/RadusergroupController.html":{}}}],["comandos",{"_index":263,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{}}}],["comentado",{"_index":918,"title":{},"body":{"modules/PlanModule.html":{}}}],["comentario",{"_index":1260,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["comercial",{"_index":883,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["command",{"_index":390,"title":{},"body":{"injectables/CoaService.html":{}}}],["community",{"_index":574,"title":{},"body":{"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{}}}],["como",{"_index":754,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/ServicesController.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["company",{"_index":1668,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["compara",{"_index":496,"title":{},"body":{"injectables/CoaService.html":{}}}],["compserv",{"_index":1489,"title":{},"body":{"injectables/ServicesService.html":{}}}],["compserv['estado']=='suspendido",{"_index":1492,"title":{},"body":{"injectables/ServicesService.html":{}}}],["compserv['plan_internet']['nombre",{"_index":1508,"title":{},"body":{"injectables/ServicesService.html":{}}}],["con",{"_index":211,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["conectan",{"_index":744,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["conexion",{"_index":271,"title":{},"body":{"modules/CoaModule.html":{}}}],["configmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":274,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{}}}],["connectinfo_start",{"_index":1029,"title":{},"body":{"entities/Radacct.html":{}}}],["connectinfo_stop",{"_index":1030,"title":{},"body":{"entities/Radacct.html":{}}}],["console.error('error",{"_index":388,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.error(error",{"_index":477,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["console.log",{"_index":392,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["console.log(\"usergoup",{"_index":504,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log('coa",{"_index":462,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log('command",{"_index":384,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log('username",{"_index":238,"title":{},"body":{"controllers/CoaController.html":{}}}],["console.log(`${str",{"_index":1861,"title":{},"body":{"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["console.log(`${str}\\n",{"_index":476,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["console.log(`\\nexito",{"_index":1936,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(`activando",{"_index":410,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`actualizando",{"_index":1516,"title":{},"body":{"injectables/ServicesService.html":{}}}],["console.log(`borrando",{"_index":955,"title":{},"body":{"injectables/PlanService.html":{}}}],["console.log(`bucando",{"_index":480,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`buscando",{"_index":425,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["console.log(`cambiando",{"_index":505,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`coa:\\n${echocommand",{"_index":513,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`confirmando",{"_index":463,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`creado",{"_index":820,"title":{},"body":{"injectables/NodesService.html":{}}}],["console.log(`creando",{"_index":699,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["console.log(`eliminando",{"_index":1535,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["console.log(`entrada",{"_index":1634,"title":{},"body":{"injectables/SystemsService.html":{}}}],["console.log(`guardado",{"_index":1631,"title":{},"body":{"injectables/SystemsService.html":{}}}],["console.log(`guardando",{"_index":2076,"title":{},"body":{"injectables/ZoneService.html":{}}}],["console.log(`id",{"_index":1509,"title":{},"body":{"injectables/ServicesService.html":{}}}],["console.log(`localizando",{"_index":433,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`modificando",{"_index":518,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`no",{"_index":1511,"title":{},"body":{"injectables/ServicesService.html":{}}}],["console.log(`plan",{"_index":959,"title":{},"body":{"injectables/PlanService.html":{},"injectables/ServicesService.html":{}}}],["console.log(`realizando",{"_index":1524,"title":{},"body":{"injectables/ServicesService.html":{}}}],["console.log(`registrando",{"_index":1914,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(`se",{"_index":1843,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(`servicio",{"_index":1534,"title":{},"body":{"injectables/ServicesService.html":{}}}],["console.log(`servicio(s",{"_index":1642,"title":{},"body":{"injectables/SystemsService.html":{}}}],["console.log(`suspendiendo",{"_index":479,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`update",{"_index":954,"title":{},"body":{"injectables/PlanService.html":{}}}],["console.log(`url",{"_index":489,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(`usuario/onu",{"_index":1967,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(`zona",{"_index":2079,"title":{},"body":{"injectables/ZoneService.html":{}}}],["console.log(alerta",{"_index":1952,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(allradchecks",{"_index":1156,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["console.log(error",{"_index":387,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(nas",{"_index":519,"title":{},"body":{"injectables/CoaService.html":{}}}],["console.log(newuser",{"_index":1908,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(node",{"_index":1645,"title":{},"body":{"injectables/SystemsService.html":{}}}],["console.log(nodelist",{"_index":1650,"title":{},"body":{"injectables/SystemsService.html":{}}}],["console.log(saveusergroup",{"_index":1295,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["console.log(str",{"_index":1956,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["const",{"_index":378,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["constructor",{"_index":288,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["constructor(nasrepository",{"_index":680,"title":{},"body":{"injectables/NasService.html":{}}}],["constructor(noderepository",{"_index":802,"title":{},"body":{"injectables/NodesService.html":{}}}],["constructor(planrepository",{"_index":924,"title":{},"body":{"injectables/PlanService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["constructor(radcheckrepository",{"_index":1130,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["constructor(radusergroup",{"_index":1267,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["constructor(servicesrepository",{"_index":1390,"title":{},"body":{"injectables/ServicesService.html":{}}}],["constructor(sysrepository",{"_index":1602,"title":{},"body":{"injectables/SystemsService.html":{}}}],["constructor(userinfo",{"_index":289,"title":{},"body":{"injectables/CoaService.html":{}}}],["constructor(usersrepository",{"_index":1810,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["constructor(zonerepository",{"_index":2054,"title":{},"body":{"injectables/ZoneService.html":{}}}],["construyo",{"_index":669,"title":{},"body":{"modules/NasModule.html":{}}}],["context",{"_index":394,"title":{},"body":{"injectables/CoaService.html":{}}}],["contiene",{"_index":1765,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["contrario",{"_index":1149,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["controla",{"_index":1171,"title":{},"body":{"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{},"coverage.html":{}}}],["controller('coa",{"_index":235,"title":{},"body":{"controllers/CoaController.html":{}}}],["controller('nas",{"_index":632,"title":{},"body":{"controllers/NasController.html":{}}}],["controller('nodes",{"_index":784,"title":{},"body":{"controllers/NodesController.html":{}}}],["controller('plan",{"_index":903,"title":{},"body":{"controllers/PlanController.html":{}}}],["controller('radcheck",{"_index":1115,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["controller('radusergroup",{"_index":1243,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["controller('services",{"_index":1357,"title":{},"body":{"controllers/ServicesController.html":{}}}],["controller('systems",{"_index":1575,"title":{},"body":{"controllers/SystemsController.html":{}}}],["controller('user",{"_index":1794,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["controller('zone",{"_index":2031,"title":{},"body":{"controllers/ZoneController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CoaController.html":{},"modules/CoaModule.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["coord",{"_index":2002,"title":{},"body":{"entities/Zone.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["correctamente",{"_index":729,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{}}}],["correspondiente",{"_index":1480,"title":{},"body":{"injectables/ServicesService.html":{}}}],["corta",{"_index":1912,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cortar",{"_index":1278,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["country",{"_index":1722,"title":{},"body":{"entities/UserInfo.html":{},"injectables/UserInfoService.html":{}}}],["coverage",{"_index":2088,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":683,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["creacion",{"_index":1092,"title":{},"body":{"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/SystemsController.html":{}}}],["creación",{"_index":1845,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["creada",{"_index":831,"title":{},"body":{"injectables/NodesService.html":{},"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["creado",{"_index":146,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["creando",{"_index":1427,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/ZoneService.html":{}}}],["crear",{"_index":617,"title":{},"body":{"controllers/NasController.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"modules/PlanModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["create",{"_index":855,"title":{},"body":{"entities/Plan.html":{},"controllers/ServicesController.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{}}}],["create(@body",{"_index":1360,"title":{},"body":{"controllers/ServicesController.html":{}}}],["create(data",{"_index":1328,"title":{},"body":{"controllers/ServicesController.html":{}}}],["createnas",{"_index":610,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{}}}],["createnas(@body",{"_index":634,"title":{},"body":{"controllers/NasController.html":{}}}],["createnas(data",{"_index":614,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{}}}],["createnodedto",{"_index":523,"title":{"classes/CreateNodeDto.html":{}},"body":{"classes/CreateNodeDto.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"classes/UpdateNodeDto.html":{},"coverage.html":{}}}],["createnodo",{"_index":756,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["createnodo(@body",{"_index":785,"title":{},"body":{"controllers/NodesController.html":{}}}],["createnodo(data",{"_index":761,"title":{},"body":{"controllers/NodesController.html":{}}}],["createnodo(node",{"_index":805,"title":{},"body":{"injectables/NodesService.html":{}}}],["createplan",{"_index":872,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["createplan(@body",{"_index":904,"title":{},"body":{"controllers/PlanController.html":{}}}],["createplan(data",{"_index":877,"title":{},"body":{"controllers/PlanController.html":{}}}],["createplan(plan",{"_index":927,"title":{},"body":{"injectables/PlanService.html":{}}}],["createplandto",{"_index":534,"title":{"classes/CreatePlanDto.html":{}},"body":{"classes/CreatePlanDto.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["createrad",{"_index":1087,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["createrad(@body",{"_index":1118,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["createrad(data",{"_index":1090,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["createradcheck",{"_index":1129,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["createradcheck(data",{"_index":1133,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["createradusergroup",{"_index":1264,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["createradusergroup(data",{"_index":1269,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["createservice",{"_index":1384,"title":{},"body":{"injectables/ServicesService.html":{}}}],["createservice(service",{"_index":1401,"title":{},"body":{"injectables/ServicesService.html":{}}}],["createservicedto",{"_index":545,"title":{"classes/CreateServiceDto.html":{}},"body":{"classes/CreateServiceDto.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["createservtdto",{"_index":1359,"title":{},"body":{"controllers/ServicesController.html":{}}}],["createsys",{"_index":1554,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["createsys(@body",{"_index":1578,"title":{},"body":{"controllers/SystemsController.html":{}}}],["createsys(data",{"_index":1559,"title":{},"body":{"controllers/SystemsController.html":{}}}],["createsys(sys",{"_index":1606,"title":{},"body":{"injectables/SystemsService.html":{}}}],["createsysdto",{"_index":1577,"title":{},"body":{"controllers/SystemsController.html":{}}}],["createsystemdto",{"_index":564,"title":{"classes/CreateSystemDto.html":{}},"body":{"classes/CreateSystemDto.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateSystemDto.html":{},"coverage.html":{}}}],["createuser",{"_index":1759,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["createuser(@body",{"_index":1795,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["createuser(data",{"_index":1763,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["createusergroup",{"_index":1202,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["createusergroup(@body",{"_index":1245,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["createusergroup(data",{"_index":1205,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["createzone",{"_index":2016,"title":{},"body":{"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["createzone(@body",{"_index":2032,"title":{},"body":{"controllers/ZoneController.html":{}}}],["createzone(data",{"_index":2019,"title":{},"body":{"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["creation",{"_index":1875,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["creationby",{"_index":1669,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["creationdate",{"_index":1723,"title":{},"body":{"entities/UserInfo.html":{},"injectables/UserInfoService.html":{}}}],["credenciales",{"_index":1081,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["cree",{"_index":1140,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["creo",{"_index":1174,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["cualquier",{"_index":1274,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["cuando",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/RadcheckService.html":{}}}],["cuenta",{"_index":1176,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["custion",{"_index":1235,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["dado",{"_index":1404,"title":{},"body":{"injectables/ServicesService.html":{}}}],["data",{"_index":209,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["data.changeuserinfo",{"_index":1902,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.city",{"_index":1893,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.community",{"_index":724,"title":{},"body":{"injectables/NasService.html":{}}}],["data.company",{"_index":1885,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.department",{"_index":1883,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.description",{"_index":726,"title":{},"body":{"injectables/NasService.html":{}}}],["data.email",{"_index":1881,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.enableportallogin",{"_index":1906,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.homephone",{"_index":1889,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.mobilephone",{"_index":1891,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.notes",{"_index":1899,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.portalloginpassword",{"_index":1904,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.ports",{"_index":720,"title":{},"body":{"injectables/NasService.html":{}}}],["data.server",{"_index":722,"title":{},"body":{"injectables/NasService.html":{}}}],["data.state",{"_index":1895,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.type",{"_index":719,"title":{},"body":{"injectables/NasService.html":{}}}],["data.workphone",{"_index":1887,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data.zip",{"_index":1897,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.changeuserinfo",{"_index":1901,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.city",{"_index":1892,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.community",{"_index":723,"title":{},"body":{"injectables/NasService.html":{}}}],["data?.company",{"_index":1884,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.department",{"_index":1882,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.description",{"_index":725,"title":{},"body":{"injectables/NasService.html":{}}}],["data?.email",{"_index":1880,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.enableportallogin",{"_index":1905,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.homephone",{"_index":1888,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.mobilephone",{"_index":1890,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.notes",{"_index":1898,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.portalloginpassword",{"_index":1903,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.server",{"_index":721,"title":{},"body":{"injectables/NasService.html":{}}}],["data?.state",{"_index":1894,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.type",{"_index":718,"title":{},"body":{"injectables/NasService.html":{}}}],["data?.workphone",{"_index":1886,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["data?.zip",{"_index":1896,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["database",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["database/create",{"_index":780,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["database/nas.entity",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["database/node.entity",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{}}}],["database/plan.entity",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{}}}],["database/radacct.entity",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["database/radcheck.entity",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["database/radgroupreply.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["database/radusergroup.entity",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["database/service.entity",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{}}}],["database/system.entity",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{}}}],["database/user.entity",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["database/zone.entity",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":408,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"entities/Radacct.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{}}}],["date}\\n",{"_index":412,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["datos",{"_index":732,"title":{},"body":{"injectables/NasService.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["db8tlaoegfxlwz",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["ddto",{"_index":223,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["de",{"_index":150,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["debe",{"_index":977,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["debiera",{"_index":1159,"title":{},"body":{"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"controllers/NodesController.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["default",{"_index":933,"title":{},"body":{"injectables/PlanService.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"injectables/RadusergroupService.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":711,"title":{},"body":{"injectables/NasService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["deja",{"_index":1873,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["dejan",{"_index":170,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/UserDto.html":{}}}],["dejar",{"_index":712,"title":{},"body":{"injectables/NasService.html":{},"injectables/UserInfoService.html":{}}}],["del",{"_index":207,"title":{},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["delegatedipv6prefix",{"_index":1031,"title":{},"body":{"entities/Radacct.html":{}}}],["delete",{"_index":777,"title":{},"body":{"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{}}}],["delete(':id",{"_index":769,"title":{},"body":{"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["delete(':username",{"_index":1775,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["delete(@body",{"_index":1254,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["deletebyusername",{"_index":1760,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["deletebyusername(@param('username",{"_index":1802,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["deletebyusername(username",{"_index":1774,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["deleteusergroup",{"_index":1265,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["deleteusergroup(data",{"_index":1276,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["dentro",{"_index":1222,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["department",{"_index":1670,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":438,"title":{},"body":{"injectables/CoaService.html":{}}}],["description",{"_index":144,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"index.html":{},"properties.html":{}}}],["desde",{"_index":1215,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["desechado",{"_index":1158,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["desechadoo",{"_index":694,"title":{},"body":{"injectables/NasService.html":{}}}],["desestructuracion",{"_index":2058,"title":{},"body":{"injectables/ZoneService.html":{}}}],["detelles",{"_index":1228,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["development",{"_index":2171,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":1610,"title":{},"body":{"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["difiere",{"_index":1918,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["direccion",{"_index":482,"title":{},"body":{"injectables/CoaService.html":{}}}],["dirección",{"_index":443,"title":{},"body":{"injectables/CoaService.html":{}}}],["directamente",{"_index":1769,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["disable",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/Nas.html":{},"controllers/NodesController.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["documentation",{"_index":2089,"title":{},"body":{"coverage.html":{}}}],["donde",{"_index":743,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/RadcheckService.html":{},"injectables/UserInfoService.html":{}}}],["dos",{"_index":212,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["dto",{"_index":145,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["dto/create",{"_index":1355,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["dto/plan.dto",{"_index":900,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["dto/update",{"_index":782,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"controllers/ServicesController.html":{}}}],["dónde",{"_index":1782,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["e2e",{"_index":2182,"title":{},"body":{"index.html":{}}}],["echo",{"_index":447,"title":{},"body":{"injectables/CoaService.html":{}}}],["echocomand",{"_index":286,"title":{},"body":{"injectables/CoaService.html":{}}}],["echocomand(data",{"_index":346,"title":{},"body":{"injectables/CoaService.html":{}}}],["echocommand",{"_index":333,"title":{},"body":{"injectables/CoaService.html":{}}}],["efecto",{"_index":1756,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["efficient",{"_index":2162,"title":{},"body":{"index.html":{}}}],["ejecución",{"_index":1279,"title":{},"body":{"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["ejecuta",{"_index":308,"title":{},"body":{"injectables/CoaService.html":{}}}],["ejecutado",{"_index":340,"title":{},"body":{"injectables/CoaService.html":{}}}],["el",{"_index":148,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["el/los",{"_index":1490,"title":{},"body":{"injectables/ServicesService.html":{}}}],["elementos",{"_index":1105,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["elimina",{"_index":771,"title":{},"body":{"controllers/NodesController.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["eliminada",{"_index":1655,"title":{},"body":{"injectables/SystemsService.html":{}}}],["eliminado",{"_index":473,"title":{},"body":{"injectables/CoaService.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{}}}],["eliminar",{"_index":893,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{}}}],["eliminatesuspend",{"_index":471,"title":{},"body":{"injectables/CoaService.html":{}}}],["elmina",{"_index":311,"title":{},"body":{"injectables/CoaService.html":{}}}],["elminar",{"_index":1654,"title":{},"body":{"injectables/SystemsService.html":{}}}],["email",{"_index":1671,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["embargo",{"_index":1211,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["empresa",{"_index":1695,"title":{},"body":{"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["empresas",{"_index":1692,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["emtidades",{"_index":1424,"title":{},"body":{"injectables/ServicesService.html":{}}}],["en",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["enableportallogin",{"_index":1672,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["encontr",{"_index":481,"title":{},"body":{"injectables/CoaService.html":{},"injectables/PlanService.html":{}}}],["encontrada.\\n",{"_index":1635,"title":{},"body":{"injectables/SystemsService.html":{}}}],["encontradas",{"_index":1331,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["encontrado",{"_index":430,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{}}}],["encontrado.\\n",{"_index":1458,"title":{},"body":{"injectables/ServicesService.html":{}}}],["encontrados",{"_index":307,"title":{},"body":{"injectables/CoaService.html":{},"injectables/SystemsService.html":{}}}],["encontrar",{"_index":1479,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["encontro",{"_index":441,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{}}}],["encuentra",{"_index":811,"title":{},"body":{"injectables/NodesService.html":{},"modules/PlanModule.html":{},"injectables/ServicesService.html":{},"injectables/ZoneService.html":{}}}],["encuentren",{"_index":1106,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/UserInfoService.html":{}}}],["endopoint",{"_index":1630,"title":{},"body":{"injectables/SystemsService.html":{}}}],["endpoint",{"_index":567,"title":{},"body":{"classes/CreateSystemDto.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["endpoit",{"_index":1207,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["enlaces",{"_index":605,"title":{},"body":{"controllers/NasController.html":{}}}],["enpoint",{"_index":1814,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["entada",{"_index":1608,"title":{},"body":{"injectables/SystemsService.html":{}}}],["entidad",{"_index":747,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{}}}],["entidades",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/CoaService.html":{},"modules/ServicesModule.html":{}}}],["entities",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"overview.html":{}}}],["entity",{"_index":572,"title":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"coverage.html":{}}}],["entity('plan",{"_index":852,"title":{},"body":{"entities/Plan.html":{}}}],["entity('radusergroup",{"_index":1006,"title":{},"body":{"entities/RadUserGroup.html":{}}}],["entrada",{"_index":183,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["entradas",{"_index":608,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["entyrada",{"_index":1340,"title":{},"body":{"controllers/ServicesController.html":{}}}],["enum",{"_index":1716,"title":{},"body":{"classes/UserDto.html":{}}}],["enumerations",{"_index":2152,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["envia",{"_index":1913,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["enviada",{"_index":1816,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["enviados",{"_index":897,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"injectables/SystemsService.html":{}}}],["enviar",{"_index":355,"title":{},"body":{"injectables/CoaService.html":{},"injectables/RadcheckService.html":{}}}],["ep",{"_index":1441,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["err",{"_index":418,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["error",{"_index":320,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["error('el",{"_index":1851,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["error(str",{"_index":419,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["error.message",{"_index":391,"title":{},"body":{"injectables/CoaService.html":{}}}],["error.stdout.includes('session",{"_index":393,"title":{},"body":{"injectables/CoaService.html":{}}}],["es",{"_index":309,"title":{},"body":{"injectables/CoaService.html":{},"modules/NasModule.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["esa",{"_index":609,"title":{},"body":{"controllers/NasController.html":{}}}],["ese",{"_index":705,"title":{},"body":{"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["eslint",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"entities/Nas.html":{},"controllers/NodesController.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["eslint/no",{"_index":1444,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["eso",{"_index":1281,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["espacio",{"_index":713,"title":{},"body":{"injectables/NasService.html":{}}}],["esperado",{"_index":499,"title":{},"body":{"injectables/CoaService.html":{}}}],["est",{"_index":1783,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["esta",{"_index":1187,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["estaba",{"_index":397,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{}}}],["estado",{"_index":1172,"title":{},"body":{"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{}}}],["estar",{"_index":1191,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["este",{"_index":1136,"title":{},"body":{"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["esto",{"_index":1822,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["estos",{"_index":171,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/UserDto.html":{}}}],["están",{"_index":1519,"title":{},"body":{"injectables/ServicesService.html":{},"controllers/SystemsController.html":{}}}],["evalua",{"_index":343,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["evitar",{"_index":1185,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["exec",{"_index":369,"title":{},"body":{"injectables/CoaService.html":{}}}],["execasync",{"_index":379,"title":{},"body":{"injectables/CoaService.html":{}}}],["executing",{"_index":389,"title":{},"body":{"injectables/CoaService.html":{}}}],["exista",{"_index":1406,"title":{},"body":{"injectables/ServicesService.html":{}}}],["existe",{"_index":415,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["existen",{"_index":1466,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["existencia",{"_index":326,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{}}}],["existía",{"_index":1963,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["exite",{"_index":1855,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["exito",{"_index":475,"title":{},"body":{"injectables/CoaService.html":{}}}],["exitopsamente.\\n",{"_index":949,"title":{},"body":{"injectables/PlanService.html":{}}}],["exitosa",{"_index":345,"title":{},"body":{"injectables/CoaService.html":{}}}],["exitosa.\\n",{"_index":1961,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["exitosamente",{"_index":341,"title":{},"body":{"injectables/CoaService.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["exitosamente.\\n",{"_index":832,"title":{},"body":{"injectables/NodesService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{}}}],["exitoso",{"_index":310,"title":{},"body":{"injectables/CoaService.html":{},"injectables/PlanService.html":{},"injectables/SystemsService.html":{}}}],["explotados",{"_index":1867,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["express",{"_index":2137,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":543,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{}}}],["extension",{"_index":979,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["failsafe",{"_index":402,"title":{},"body":{"injectables/CoaService.html":{}}}],["falla",{"_index":317,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["fallar",{"_index":1213,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["fallara",{"_index":1824,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["falle",{"_index":1141,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["fallida.\\n",{"_index":1960,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["false",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/CoaService.html":{},"entities/Nas.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/Radacct.html":{},"injectables/ServicesService.html":{},"entities/Zone.html":{}}}],["falta",{"_index":2059,"title":{},"body":{"injectables/ZoneService.html":{}}}],["falte",{"_index":1238,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["favor",{"_index":1949,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["find",{"_index":1449,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["findall",{"_index":1323,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["findallnas",{"_index":678,"title":{},"body":{"injectables/NasService.html":{}}}],["findallnodes",{"_index":757,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["findallplans",{"_index":873,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["findallservices",{"_index":1385,"title":{},"body":{"injectables/ServicesService.html":{}}}],["findallsys",{"_index":1597,"title":{},"body":{"injectables/SystemsService.html":{}}}],["findalluser",{"_index":1761,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["findallusers",{"_index":1809,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["findallzone",{"_index":2017,"title":{},"body":{"controllers/ZoneController.html":{}}}],["findallzones",{"_index":2053,"title":{},"body":{"injectables/ZoneService.html":{}}}],["findbyid",{"_index":679,"title":{},"body":{"injectables/NasService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["findbyid(@param('id",{"_index":1798,"title":{},"body":{"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["findbyid(id",{"_index":687,"title":{},"body":{"injectables/NasService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["findone",{"_index":1324,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["findone(@param('id",{"_index":1365,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["findone(id",{"_index":1332,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["findonenode",{"_index":758,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["findonenode(@param('id",{"_index":788,"title":{},"body":{"controllers/NodesController.html":{}}}],["findonenode(id",{"_index":764,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["findoneonsys",{"_index":1325,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["findoneonsys(@param('id",{"_index":1367,"title":{},"body":{"controllers/ServicesController.html":{}}}],["findoneonsys(id",{"_index":1335,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["findoneplan",{"_index":874,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["findoneplan(@param('id",{"_index":907,"title":{},"body":{"controllers/PlanController.html":{}}}],["findoneplan(id",{"_index":887,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["findonesys",{"_index":1598,"title":{},"body":{"injectables/SystemsService.html":{}}}],["findonesys(id",{"_index":1611,"title":{},"body":{"injectables/SystemsService.html":{}}}],["findonservice",{"_index":1386,"title":{},"body":{"injectables/ServicesService.html":{}}}],["findonservice(id",{"_index":1412,"title":{},"body":{"injectables/ServicesService.html":{}}}],["firstname",{"_index":1673,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["forma",{"_index":880,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["found",{"_index":395,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{}}}],["framed",{"_index":1085,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["framedinterfaceid",{"_index":1032,"title":{},"body":{"entities/Radacct.html":{}}}],["framedipaddress",{"_index":1033,"title":{},"body":{"entities/Radacct.html":{}}}],["framedipv6address",{"_index":1034,"title":{},"body":{"entities/Radacct.html":{}}}],["framedipv6prefix",{"_index":1035,"title":{},"body":{"entities/Radacct.html":{}}}],["framedprotocol",{"_index":1036,"title":{},"body":{"entities/Radacct.html":{}}}],["framework",{"_index":2160,"title":{},"body":{"index.html":{}}}],["fue",{"_index":344,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["función",{"_index":1777,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["function",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2154,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["futuro",{"_index":175,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{}}}],["físico",{"_index":797,"title":{},"body":{"modules/NodesModule.html":{}}}],["físicos",{"_index":742,"title":{},"body":{"controllers/NodesController.html":{}}}],["genera",{"_index":1833,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["general",{"_index":1135,"title":{},"body":{"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{}}}],["generar",{"_index":671,"title":{},"body":{"modules/NasModule.html":{}}}],["gestion",{"_index":1552,"title":{},"body":{"controllers/SystemsController.html":{}}}],["gestión",{"_index":1593,"title":{},"body":{"modules/SystemsModule.html":{}}}],["get(':id",{"_index":620,"title":{},"body":{"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["get(':id/:node",{"_index":1565,"title":{},"body":{"controllers/SystemsController.html":{}}}],["get(':id/all",{"_index":1557,"title":{},"body":{"controllers/SystemsController.html":{}}}],["get(':id/sys",{"_index":1336,"title":{},"body":{"controllers/ServicesController.html":{}}}],["get('activate/:username",{"_index":194,"title":{},"body":{"controllers/CoaController.html":{}}}],["get('suspend/:username",{"_index":225,"title":{},"body":{"controllers/CoaController.html":{}}}],["get('sync/:node",{"_index":1342,"title":{},"body":{"controllers/ServicesController.html":{}}}],["get(`${ep}${serv.clientid",{"_index":1450,"title":{},"body":{"injectables/ServicesService.html":{}}}],["get(`${sys.endpoint",{"_index":1639,"title":{},"body":{"injectables/SystemsService.html":{}}}],["getallnas",{"_index":611,"title":{},"body":{"controllers/NasController.html":{}}}],["getallradcheck",{"_index":1088,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["getallusergroups",{"_index":1203,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["getbyid",{"_index":612,"title":{},"body":{"controllers/NasController.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{}}}],["getbyid(@body",{"_index":1247,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["getbyid(@param('id",{"_index":637,"title":{},"body":{"controllers/NasController.html":{},"controllers/RadcheckController.html":{}}}],["getbyid(data",{"_index":1218,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["getbyid(id",{"_index":619,"title":{},"body":{"controllers/NasController.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":2156,"title":{"index.html":{}},"body":{}}],["getusergroupbyid",{"_index":1266,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["getusergroupbyid(data",{"_index":1283,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["gratis",{"_index":1314,"title":{},"body":{"entities/Service.html":{}}}],["groupname",{"_index":216,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{}}}],["groupname}\\nfecha",{"_index":1287,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["groupvalue",{"_index":510,"title":{},"body":{"injectables/CoaService.html":{}}}],["grow",{"_index":2189,"title":{},"body":{"index.html":{}}}],["grupo",{"_index":312,"title":{},"body":{"injectables/CoaService.html":{}}}],["grupo/s",{"_index":1491,"title":{},"body":{"injectables/ServicesService.html":{}}}],["grupos",{"_index":1476,"title":{},"body":{"injectables/ServicesService.html":{}}}],["guarda",{"_index":2012,"title":{},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["guardado",{"_index":948,"title":{},"body":{"injectables/PlanService.html":{},"injectables/UserInfoService.html":{}}}],["guardar",{"_index":731,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["guarde",{"_index":728,"title":{},"body":{"injectables/NasService.html":{}}}],["ha",{"_index":1879,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["haber",{"_index":1942,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["hace",{"_index":1870,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["hacer",{"_index":690,"title":{},"body":{"injectables/NasService.html":{},"injectables/NodesService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["haciendo",{"_index":2064,"title":{},"body":{"injectables/ZoneService.html":{}}}],["hacker",{"_index":1868,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["har´s",{"_index":1818,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["hay",{"_index":776,"title":{},"body":{"controllers/NodesController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["haya",{"_index":339,"title":{},"body":{"injectables/CoaService.html":{},"injectables/PlanService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["hayan",{"_index":506,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{}}}],["hecho",{"_index":1177,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["hello",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":2200,"title":{},"body":{"index.html":{}}}],["homephone",{"_index":1674,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["host",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":492,"title":{},"body":{"injectables/CoaService.html":{}}}],["http:///user",{"_index":1758,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["http://10.10.20.7/avisodecorte",{"_index":486,"title":{},"body":{"injectables/CoaService.html":{}}}],["httpexception",{"_index":363,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["httpexception(error",{"_index":478,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["https://nestjs.com",{"_index":2207,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":364,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["httpstatus.bad_request",{"_index":509,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["httpstatus.conflict",{"_index":706,"title":{},"body":{"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["httpstatus.internal_server_error",{"_index":474,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["httpstatus.not_found",{"_index":421,"title":{},"body":{"injectables/CoaService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["hubo",{"_index":730,"title":{},"body":{"injectables/NasService.html":{},"injectables/NodesService.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["i.name",{"_index":1510,"title":{},"body":{"injectables/ServicesService.html":{}}}],["i['router']['nombre",{"_index":1648,"title":{},"body":{"injectables/SystemsService.html":{}}}],["id",{"_index":437,"title":{},"body":{"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["id='${acl_suspension",{"_index":495,"title":{},"body":{"injectables/CoaService.html":{}}}],["id_unique",{"_index":861,"title":{},"body":{"entities/Plan.html":{}}}],["idea",{"_index":1865,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["identifier",{"_index":2090,"title":{},"body":{"coverage.html":{}}}],["id}.\\nfecha",{"_index":956,"title":{},"body":{"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["id}\\nfecha",{"_index":1652,"title":{},"body":{"injectables/SystemsService.html":{}}}],["if(!(isradcheck.value",{"_index":1917,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["if(!actualizedradcheck",{"_index":1925,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["if(!isplan",{"_index":1850,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["if(compserv['estado']=='cancelado",{"_index":1496,"title":{},"body":{"injectables/ServicesService.html":{}}}],["if(groupvalue?.length",{"_index":512,"title":{},"body":{"injectables/CoaService.html":{}}}],["ifuser",{"_index":1853,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["igual",{"_index":1874,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["implementadas",{"_index":666,"title":{},"body":{"modules/NasModule.html":{}}}],["implica",{"_index":1192,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["importaciones",{"_index":366,"title":{},"body":{"injectables/CoaService.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{}}}],["incia",{"_index":1522,"title":{},"body":{"injectables/ServicesService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":1876,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["info.controller",{"_index":1807,"title":{},"body":{"modules/UserInfoModule.html":{}}}],["info.controller.ts",{"_index":1751,"title":{},"body":{"controllers/UserInfoController.html":{},"coverage.html":{}}}],["info.controller.ts:32",{"_index":1764,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["info.controller.ts:41",{"_index":1785,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["info.controller.ts:51",{"_index":1786,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["info.controller.ts:62",{"_index":1789,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["info.controller.ts:73",{"_index":1776,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["info.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["info.module.ts",{"_index":1806,"title":{},"body":{"modules/UserInfoModule.html":{}}}],["info.service",{"_index":1791,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["info.service.ts",{"_index":1808,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["info.service.ts:13",{"_index":1811,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:295",{"_index":1836,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:338",{"_index":1838,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:36",{"_index":1813,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:384",{"_index":1842,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:490",{"_index":1829,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info/user",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["informacion",{"_index":1411,"title":{},"body":{"injectables/ServicesService.html":{},"controllers/SystemsController.html":{}}}],["información",{"_index":1079,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{}}}],["ingieneria.\\n",{"_index":1951,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["ingresado",{"_index":1109,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["inicia",{"_index":1844,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["injectable",{"_index":135,"title":{"injectables/AppService.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{},"coverage.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{},"overview.html":{}}}],["injectrepository",{"_index":365,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["injectrepository(nas",{"_index":376,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/ZoneService.html":{}}}],["injectrepository(plan",{"_index":935,"title":{},"body":{"injectables/PlanService.html":{},"injectables/ServicesService.html":{}}}],["injectrepository(radacct",{"_index":375,"title":{},"body":{"injectables/CoaService.html":{}}}],["injectrepository(radcheck",{"_index":1152,"title":{},"body":{"injectables/RadcheckService.html":{},"injectables/UserInfoService.html":{}}}],["injectrepository(radgroupreply",{"_index":377,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["injectrepository(radusergroup",{"_index":1286,"title":{},"body":{"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["injectrepository(service",{"_index":1425,"title":{},"body":{"injectables/ServicesService.html":{}}}],["injectrepository(system",{"_index":1426,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["injectrepository(userinfo",{"_index":373,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["injectrepository(zonacliente",{"_index":819,"title":{},"body":{"injectables/NodesService.html":{},"injectables/ServicesService.html":{}}}],["injectrepository(zone",{"_index":2067,"title":{},"body":{"injectables/ZoneService.html":{}}}],["inmediatamente",{"_index":1826,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["inserta",{"_index":330,"title":{},"body":{"injectables/CoaService.html":{}}}],["instalacion",{"_index":1311,"title":{},"body":{"entities/Service.html":{}}}],["installation",{"_index":2168,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2170,"title":{},"body":{"index.html":{}}}],["int",{"_index":589,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"entities/Service.html":{},"entities/UserInfo.html":{},"entities/Zone.html":{}}}],["intent",{"_index":1521,"title":{},"body":{"injectables/ServicesService.html":{}}}],["interactuar",{"_index":663,"title":{},"body":{"modules/NasModule.html":{}}}],["interno",{"_index":351,"title":{},"body":{"injectables/CoaService.html":{},"injectables/RadusergroupService.html":{}}}],["inyc",{"_index":1718,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["ip",{"_index":424,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"entities/Radacct.html":{}}}],["ip_address",{"_index":431,"title":{},"body":{"injectables/CoaService.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{}}}],["ip_address}:3799",{"_index":458,"title":{},"body":{"injectables/CoaService.html":{}}}],["isenum",{"_index":1715,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(empresas",{"_index":1719,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["isip",{"_index":158,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/UpdateNodeDto.html":{}}}],["isname",{"_index":939,"title":{},"body":{"injectables/PlanService.html":{}}}],["isname?.length",{"_index":941,"title":{},"body":{"injectables/PlanService.html":{}}}],["isnas",{"_index":701,"title":{},"body":{"injectables/NasService.html":{},"injectables/ZoneService.html":{}}}],["isnas?.length",{"_index":703,"title":{},"body":{"injectables/NasService.html":{}}}],["isnotempty",{"_index":159,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UserDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isnotempty()@isip",{"_index":246,"title":{},"body":{"classes/CoaDto.html":{},"classes/NasDto.html":{}}}],["isnotempty()@isnumber",{"_index":2042,"title":{},"body":{"classes/ZoneDto.html":{}}}],["isnotempty()@isstring",{"_index":155,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/RadCheckDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UserDto.html":{},"classes/ZoneDto.html":{}}}],["isnotempty()@isstring()@isenum(empresas",{"_index":1693,"title":{},"body":{"classes/UserDto.html":{}}}],["isnumber",{"_index":532,"title":{},"body":{"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isnumber()@isnotempty",{"_index":551,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["isnumber()@isnotempty()@min(0)@max(4",{"_index":556,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["isoptional",{"_index":160,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isoptional()@isip",{"_index":653,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["isoptional()@isnumber",{"_index":646,"title":{},"body":{"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isoptional()@isnumber()@min(0)@max(10",{"_index":1706,"title":{},"body":{"classes/UserDto.html":{}}}],["isoptional()@isstring",{"_index":248,"title":{},"body":{"classes/CoaDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isoptional()@isstring()@maxlength(2",{"_index":974,"title":{},"body":{"classes/RadCheckDto.html":{}}}],["isplan",{"_index":1848,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isradcheck",{"_index":1915,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isradcheck.value",{"_index":1921,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isradduser",{"_index":1938,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isradduser?.length",{"_index":1941,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isradduser[0].groupname",{"_index":1954,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["isstring",{"_index":161,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["isstring()@isnotempty",{"_index":529,"title":{},"body":{"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/UpdateNodeDto.html":{}}}],["issys",{"_index":1623,"title":{},"body":{"injectables/SystemsService.html":{}}}],["issys.length",{"_index":1625,"title":{},"body":{"injectables/SystemsService.html":{}}}],["isuser",{"_index":413,"title":{},"body":{"injectables/CoaService.html":{}}}],["isusergroup",{"_index":1288,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["iszona",{"_index":823,"title":{},"body":{"injectables/NodesService.html":{}}}],["iszone",{"_index":2071,"title":{},"body":{"injectables/ZoneService.html":{}}}],["iszone?.length",{"_index":2073,"title":{},"body":{"injectables/ZoneService.html":{}}}],["join",{"_index":2196,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":849,"title":{},"body":{"entities/Plan.html":{},"entities/System.html":{}}}],["joincolumn()@onetomany(undefined",{"_index":843,"title":{},"body":{"entities/Plan.html":{}}}],["jointable",{"_index":1548,"title":{},"body":{"entities/System.html":{},"entities/ZonaCliente.html":{}}}],["jointable()@manytomany(undefined",{"_index":1997,"title":{},"body":{"entities/ZonaCliente.html":{}}}],["kamil",{"_index":2204,"title":{},"body":{"index.html":{}}}],["key",{"_index":865,"title":{},"body":{"entities/Plan.html":{},"controllers/RadusergroupController.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["la",{"_index":197,"title":{},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["lado",{"_index":1869,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["las",{"_index":184,"title":{},"body":{"controllers/CoaController.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["lastname",{"_index":1675,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["le",{"_index":1878,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["lectura",{"_index":1871,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["length",{"_index":579,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["length:64",{"_index":1075,"title":{},"body":{"entities/Radacct.html":{}}}],["license",{"_index":2210,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2186,"title":{},"body":{"index.html":{}}}],["line",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["linux",{"_index":498,"title":{},"body":{"injectables/CoaService.html":{}}}],["lista",{"_index":884,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{}}}],["listname",{"_index":536,"title":{},"body":{"classes/CreatePlanDto.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"classes/UpdatePlanDto.html":{}}}],["listname:'${listname",{"_index":943,"title":{},"body":{"injectables/PlanService.html":{}}}],["listname:'${listname}'.\\nfecha",{"_index":937,"title":{},"body":{"injectables/PlanService.html":{}}}],["listname_unique",{"_index":867,"title":{},"body":{"entities/Plan.html":{}}}],["llama",{"_index":697,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["llamado",{"_index":1350,"title":{},"body":{"controllers/ServicesController.html":{}}}],["llega",{"_index":228,"title":{},"body":{"controllers/CoaController.html":{},"injectables/UserInfoService.html":{}}}],["llegan",{"_index":816,"title":{},"body":{"injectables/NodesService.html":{},"controllers/ServicesController.html":{}}}],["llenado",{"_index":1195,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["lo",{"_index":696,"title":{},"body":{"injectables/NasService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["localhost",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["lograr",{"_index":1755,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["los",{"_index":261,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["ls",{"_index":1615,"title":{},"body":{"injectables/SystemsService.html":{}}}],["manera",{"_index":1094,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["manipulacion",{"_index":922,"title":{},"body":{"injectables/PlanService.html":{},"injectables/RadcheckService.html":{}}}],["manipulados",{"_index":1754,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["manipular",{"_index":870,"title":{},"body":{"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/ZoneService.html":{}}}],["manipularan",{"_index":673,"title":{},"body":{"modules/NasModule.html":{}}}],["manualmente",{"_index":917,"title":{},"body":{"modules/PlanModule.html":{},"controllers/RadusergroupController.html":{}}}],["manytomany",{"_index":1547,"title":{},"body":{"entities/System.html":{},"entities/ZonaCliente.html":{}}}],["manytomany(undefined",{"_index":1543,"title":{},"body":{"entities/System.html":{}}}],["manytoone",{"_index":1310,"title":{},"body":{"entities/Service.html":{},"entities/System.html":{}}}],["manytoone(undefined",{"_index":1303,"title":{},"body":{"entities/Service.html":{}}}],["mariadb",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mas",{"_index":1943,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":559,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UserDto.html":{}}}],["max(10",{"_index":1720,"title":{},"body":{"classes/UserDto.html":{}}}],["max(4",{"_index":563,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["maxlength",{"_index":985,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["maxlength(2",{"_index":987,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["mediante",{"_index":767,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ZoneController.html":{}}}],["medio",{"_index":1145,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["memoria",{"_index":715,"title":{},"body":{"injectables/NasService.html":{}}}],["mendiante",{"_index":1334,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{}}}],["menos",{"_index":695,"title":{},"body":{"injectables/NasService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["mensaje",{"_index":356,"title":{},"body":{"injectables/CoaService.html":{}}}],["mensajes",{"_index":1828,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["message",{"_index":975,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["metadata",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["metdodo",{"_index":708,"title":{},"body":{"injectables/NasService.html":{}}}],["method",{"_index":236,"title":{},"body":{"controllers/CoaController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["metodo",{"_index":149,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{}}}],["metodos",{"_index":672,"title":{},"body":{"modules/NasModule.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/ZoneService.html":{}}}],["min",{"_index":560,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UserDto.html":{}}}],["min(0",{"_index":562,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UserDto.html":{}}}],["minlength",{"_index":986,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["minlength(2",{"_index":988,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{}}}],["miscellaneous",{"_index":2151,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismo",{"_index":1189,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["mit",{"_index":2185,"title":{},"body":{"index.html":{}}}],["mobilephone",{"_index":1676,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["mode",{"_index":2175,"title":{},"body":{"index.html":{}}}],["mode=0",{"_index":451,"title":{},"body":{"injectables/CoaService.html":{}}}],["mode=1,netelastic",{"_index":491,"title":{},"body":{"injectables/CoaService.html":{}}}],["modifica",{"_index":1347,"title":{},"body":{"controllers/ServicesController.html":{}}}],["modificacion",{"_index":163,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"controllers/RadcheckController.html":{}}}],["modificación",{"_index":1523,"title":{},"body":{"injectables/ServicesService.html":{}}}],["modificado",{"_index":522,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["modificar",{"_index":266,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/RadcheckService.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{}}}],["modifico",{"_index":748,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["modify",{"_index":287,"title":{},"body":{"injectables/CoaService.html":{}}}],["modify(data",{"_index":349,"title":{},"body":{"injectables/CoaService.html":{}}}],["modifyplan",{"_index":191,"title":{},"body":{"controllers/CoaController.html":{}}}],["modifyplan(@body",{"_index":244,"title":{},"body":{"controllers/CoaController.html":{}}}],["modifyplan(data",{"_index":218,"title":{},"body":{"controllers/CoaController.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":259,"title":{},"body":{"modules/CoaModule.html":{},"modules/NasModule.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"modules/UserInfoModule.html":{}}}],["modulos",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["momento",{"_index":315,"title":{},"body":{"injectables/CoaService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["more",{"_index":2199,"title":{},"body":{"index.html":{}}}],["motivo",{"_index":1823,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["msj",{"_index":319,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["muchos",{"_index":664,"title":{},"body":{"modules/NasModule.html":{},"controllers/UserInfoController.html":{}}}],["mysql",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanModule.html":{},"controllers/RadusergroupController.html":{}}}],["mysql2",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":2205,"title":{},"body":{"index.html":{}}}],["más",{"_index":1827,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["múltiples",{"_index":1945,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["n",{"_index":417,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["name",{"_index":201,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["name:'${name",{"_index":936,"title":{},"body":{"injectables/PlanService.html":{}}}],["name=${username},${attribute}=${value",{"_index":521,"title":{},"body":{"injectables/CoaService.html":{}}}],["name=${username},user",{"_index":520,"title":{},"body":{"injectables/CoaService.html":{}}}],["name='${username}',netelastic",{"_index":449,"title":{},"body":{"injectables/CoaService.html":{}}}],["name='${username}',user",{"_index":448,"title":{},"body":{"injectables/CoaService.html":{}}}],["name_unique",{"_index":866,"title":{},"body":{"entities/Plan.html":{}}}],["name}.\\nfecha",{"_index":700,"title":{},"body":{"injectables/NasService.html":{}}}],["nas",{"_index":77,"title":{"entities/Nas.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"entities/Zone.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["nas.\\nfecha",{"_index":734,"title":{},"body":{"injectables/NasService.html":{}}}],["nas.controller",{"_index":674,"title":{},"body":{"modules/NasModule.html":{}}}],["nas.dto",{"_index":684,"title":{},"body":{"injectables/NasService.html":{}}}],["nas.service",{"_index":630,"title":{},"body":{"controllers/NasController.html":{},"modules/NasModule.html":{}}}],["nas/nas.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["nas[0].secret",{"_index":445,"title":{},"body":{"injectables/CoaService.html":{}}}],["nascontroller",{"_index":600,"title":{"controllers/NasController.html":{}},"body":{"controllers/NasController.html":{},"modules/NasModule.html":{},"coverage.html":{}}}],["nasdto",{"_index":615,"title":{"classes/NasDto.html":{}},"body":{"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"coverage.html":{}}}],["nasdtoupdate",{"_index":624,"title":{"classes/NasDtoUpdate.html":{}},"body":{"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"coverage.html":{}}}],["nasipaddress",{"_index":178,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"entities/Radacct.html":{}}}],["nasmodule",{"_index":41,"title":{"modules/NasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NasModule.html":{},"modules.html":{},"overview.html":{}}}],["nasname",{"_index":435,"title":{},"body":{"injectables/CoaService.html":{},"entities/Nas.html":{},"injectables/NasService.html":{}}}],["nasportid",{"_index":1037,"title":{},"body":{"entities/Radacct.html":{}}}],["nasporttype",{"_index":1038,"title":{},"body":{"entities/Radacct.html":{}}}],["nasrepository",{"_index":292,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/ZoneService.html":{}}}],["nasservice",{"_index":629,"title":{"injectables/NasService.html":{}},"body":{"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"modules/ZoneModule.html":{},"coverage.html":{},"overview.html":{}}}],["nc",{"_index":1696,"title":{},"body":{"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["necesario",{"_index":1208,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["necesarios",{"_index":1773,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/ZoneService.html":{}}}],["necesidad",{"_index":1927,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["necesita",{"_index":1147,"title":{},"body":{"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{}}}],["necesitar",{"_index":1872,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["nest",{"_index":2166,"title":{},"body":{"index.html":{}}}],["nest`.`plan",{"_index":857,"title":{},"body":{"entities/Plan.html":{}}}],["nestframework",{"_index":2209,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":540,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2136,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"dependencies.html":{}}}],["netcom",{"_index":746,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["netcomplus",{"_index":1753,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["netcomplus.com.ve",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":409,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{},"coverage.html":{}}}],["newgroupname",{"_index":154,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{}}}],["newlocal",{"_index":1863,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["newnas",{"_index":716,"title":{},"body":{"injectables/NasService.html":{}}}],["newuser",{"_index":1907,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["newusergroup",{"_index":1290,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["newzone",{"_index":2074,"title":{},"body":{"injectables/ZoneService.html":{}}}],["next",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["ni",{"_index":1767,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["ninguna",{"_index":1962,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["ningún",{"_index":1280,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["node",{"_index":751,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["node.dto",{"_index":781,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{},"classes/UpdateNodeDto.html":{}}}],["node.dto.ts",{"_index":525,"title":{},"body":{"classes/CreateNodeDto.html":{},"classes/UpdateNodeDto.html":{},"coverage.html":{}}}],["node.dto.ts:11",{"_index":528,"title":{},"body":{"classes/CreateNodeDto.html":{}}}],["node.dto.ts:13",{"_index":1656,"title":{},"body":{"classes/UpdateNodeDto.html":{}}}],["node.dto.ts:15",{"_index":530,"title":{},"body":{"classes/CreateNodeDto.html":{}}}],["node.dto.ts:17",{"_index":1657,"title":{},"body":{"classes/UpdateNodeDto.html":{}}}],["node.dto.ts:18",{"_index":531,"title":{},"body":{"classes/CreateNodeDto.html":{}}}],["node.dto.ts:20",{"_index":1658,"title":{},"body":{"classes/UpdateNodeDto.html":{}}}],["node.js",{"_index":2159,"title":{},"body":{"index.html":{}}}],["node.systems",{"_index":1544,"title":{},"body":{"entities/System.html":{}}}],["nodelist",{"_index":1646,"title":{},"body":{"injectables/SystemsService.html":{}}}],["nodelist.push(i",{"_index":1649,"title":{},"body":{"injectables/SystemsService.html":{}}}],["nodelist?.length",{"_index":1651,"title":{},"body":{"injectables/SystemsService.html":{}}}],["nodenew",{"_index":826,"title":{},"body":{"injectables/NodesService.html":{}}}],["noderepository",{"_index":804,"title":{},"body":{"injectables/NodesService.html":{}}}],["nodes",{"_index":739,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"entities/System.html":{}}}],["nodes.controller",{"_index":798,"title":{},"body":{"modules/NodesModule.html":{}}}],["nodes.service",{"_index":779,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["nodes/nodes.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["nodesave",{"_index":828,"title":{},"body":{"injectables/NodesService.html":{}}}],["nodescontroller",{"_index":737,"title":{"controllers/NodesController.html":{}},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"coverage.html":{}}}],["nodesmodule",{"_index":42,"title":{"modules/NodesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NodesModule.html":{},"modules.html":{},"overview.html":{}}}],["nodesrepository",{"_index":1393,"title":{},"body":{"injectables/ServicesService.html":{}}}],["nodesservice",{"_index":778,"title":{"injectables/NodesService.html":{}},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"coverage.html":{},"overview.html":{}}}],["nodesys",{"_index":1460,"title":{},"body":{"injectables/ServicesService.html":{}}}],["nodesys['systems",{"_index":1463,"title":{},"body":{"injectables/ServicesService.html":{}}}],["node}}.\\nfecha",{"_index":1459,"title":{},"body":{"injectables/ServicesService.html":{}}}],["nodo",{"_index":801,"title":{},"body":{"injectables/NodesService.html":{},"injectables/ServicesService.html":{}}}],["nodo/zona",{"_index":1684,"title":{},"body":{"classes/UserDto.html":{}}}],["nodos",{"_index":740,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["nodos.\\nfecha",{"_index":1643,"title":{},"body":{"injectables/SystemsService.html":{}}}],["nomabre",{"_index":882,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["nombre",{"_index":213,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"injectables/ZoneService.html":{}}}],["noso",{"_index":1617,"title":{},"body":{"injectables/SystemsService.html":{}}}],["not(\"suspendido",{"_index":1940,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["notas",{"_index":1900,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["notes",{"_index":1677,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["nowdate",{"_index":1862,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["npca",{"_index":1717,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":2169,"title":{},"body":{"index.html":{}}}],["npor",{"_index":1948,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["nueva",{"_index":707,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["nuevo",{"_index":217,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/UserInfoController.html":{}}}],["null",{"_index":858,"title":{},"body":{"entities/Plan.html":{}}}],["nullable",{"_index":962,"title":{},"body":{"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/Radacct.html":{},"entities/UserInfo.html":{}}}],["nulos",{"_index":714,"title":{},"body":{"injectables/NasService.html":{}}}],["number",{"_index":527,"title":{},"body":{"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["nunca",{"_index":1877,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["o",{"_index":942,"title":{},"body":{"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"classes/UserUpdateDto.html":{}}}],["o.id",{"_index":1512,"title":{},"body":{"injectables/ServicesService.html":{}}}],["o.username",{"_index":1513,"title":{},"body":{"injectables/ServicesService.html":{}}}],["object",{"_index":633,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["objetivo",{"_index":353,"title":{},"body":{"injectables/CoaService.html":{}}}],["objeto",{"_index":1100,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/UserInfoService.html":{}}}],["obligatoria",{"_index":1095,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["obligatorio",{"_index":1103,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["obligatorios",{"_index":1271,"title":{},"body":{"injectables/RadusergroupService.html":{},"controllers/SystemsController.html":{},"controllers/ZoneController.html":{}}}],["obtener",{"_index":2024,"title":{},"body":{"controllers/ZoneController.html":{}}}],["obtiene",{"_index":766,"title":{},"body":{"controllers/NodesController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["ondelete",{"_index":845,"title":{},"body":{"entities/Plan.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/ZonaCliente.html":{}}}],["onetomany",{"_index":850,"title":{},"body":{"entities/Plan.html":{},"entities/System.html":{}}}],["onetoone",{"_index":1546,"title":{},"body":{"entities/System.html":{}}}],["onu",{"_index":214,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["onupdate",{"_index":847,"title":{},"body":{"entities/Plan.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/ZonaCliente.html":{}}}],["onupdate:'cascade",{"_index":853,"title":{},"body":{"entities/Plan.html":{},"entities/ZonaCliente.html":{}}}],["op",{"_index":961,"title":{},"body":{"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{}}}],["opcional",{"_index":1403,"title":{},"body":{"injectables/ServicesService.html":{}}}],["opcionales",{"_index":168,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["open",{"_index":2187,"title":{},"body":{"index.html":{}}}],["operacion",{"_index":1150,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["operación",{"_index":1572,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{}}}],["opercion",{"_index":1835,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["optional",{"_index":202,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"entities/ZonaCliente.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["opuesta",{"_index":1778,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["opuesto",{"_index":1832,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["order",{"_index":436,"title":{},"body":{"injectables/CoaService.html":{}}}],["originalmente",{"_index":1173,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["orm",{"_index":1181,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["otro",{"_index":1275,"title":{},"body":{"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["otros",{"_index":1096,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["output",{"_index":385,"title":{},"body":{"injectables/CoaService.html":{}}}],["overview",{"_index":2214,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2131,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginar",{"_index":733,"title":{},"body":{"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/SystemsController.html":{},"injectables/ZoneService.html":{}}}],["para",{"_index":147,"title":{},"body":{"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/Radacct.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["param",{"_index":230,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["param('node",{"_index":1584,"title":{},"body":{"controllers/SystemsController.html":{}}}],["parameters",{"_index":200,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["parametros",{"_index":268,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"injectables/ZoneService.html":{}}}],["parte",{"_index":1821,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["partialtype",{"_index":539,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{}}}],["partialtype(createnodedto",{"_index":1659,"title":{},"body":{"classes/UpdateNodeDto.html":{}}}],["partialtype(createplandto",{"_index":544,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdatePlanDto.html":{}}}],["partialtype(createservicedto",{"_index":1662,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["partialtype(createsystemdto",{"_index":1663,"title":{},"body":{"classes/UpdateSystemDto.html":{}}}],["particular",{"_index":622,"title":{},"body":{"controllers/NasController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["partir",{"_index":812,"title":{},"body":{"injectables/NodesService.html":{},"controllers/RadcheckController.html":{}}}],["parámetros",{"_index":357,"title":{},"body":{"injectables/CoaService.html":{}}}],["pasa",{"_index":1834,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["paso",{"_index":1857,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["password",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{}}}],["password.\\n",{"_index":1929,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["pendiente",{"_index":322,"title":{},"body":{"injectables/CoaService.html":{}}}],["permite",{"_index":627,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["permiten",{"_index":265,"title":{},"body":{"modules/CoaModule.html":{}}}],["permitir",{"_index":354,"title":{},"body":{"injectables/CoaService.html":{}}}],["pero",{"_index":755,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["peticion",{"_index":1351,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"injectables/ZoneService.html":{}}}],["plan",{"_index":83,"title":{"entities/Plan.html":{}},"body":{"modules/AppModule.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/CreateServiceDto.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadusergroupController.html":{},"entities/Service.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["plan.controller",{"_index":919,"title":{},"body":{"modules/PlanModule.html":{}}}],["plan.dto",{"_index":901,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["plan.id",{"_index":1304,"title":{},"body":{"entities/Service.html":{},"injectables/ServicesService.html":{}}}],["plan.service",{"_index":899,"title":{},"body":{"controllers/PlanController.html":{},"modules/PlanModule.html":{}}}],["plan/plan.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["plancontroller",{"_index":868,"title":{"controllers/PlanController.html":{}},"body":{"controllers/PlanController.html":{},"modules/PlanModule.html":{},"coverage.html":{}}}],["planes",{"_index":871,"title":{},"body":{"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["planes.\\nfecha",{"_index":950,"title":{},"body":{"injectables/PlanService.html":{}}}],["planes?.length",{"_index":951,"title":{},"body":{"injectables/PlanService.html":{}}}],["planmodule",{"_index":43,"title":{"modules/PlanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanModule.html":{},"modules.html":{},"overview.html":{}}}],["plannew",{"_index":944,"title":{},"body":{"injectables/PlanService.html":{}}}],["planrepository",{"_index":926,"title":{},"body":{"injectables/PlanService.html":{}}}],["plans",{"_index":923,"title":{},"body":{"injectables/PlanService.html":{}}}],["plansave",{"_index":946,"title":{},"body":{"injectables/PlanService.html":{}}}],["planservice",{"_index":898,"title":{"injectables/PlanService.html":{}},"body":{"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"coverage.html":{},"overview.html":{}}}],["plansrepository",{"_index":1395,"title":{},"body":{"injectables/ServicesService.html":{}}}],["plan}.\\nfecha",{"_index":1428,"title":{},"body":{"injectables/ServicesService.html":{}}}],["please",{"_index":2197,"title":{},"body":{"index.html":{}}}],["poder",{"_index":1180,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["por",{"_index":229,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["porpios",{"_index":753,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["porque",{"_index":750,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadusergroupController.html":{}}}],["port",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":450,"title":{},"body":{"injectables/CoaService.html":{}}}],["portalloginpassword",{"_index":1678,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["ports",{"_index":575,"title":{},"body":{"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{}}}],["posee",{"_index":709,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ZoneService.html":{}}}],["poseer",{"_index":1188,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["posible",{"_index":173,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"controllers/RadusergroupController.html":{},"classes/UserDto.html":{}}}],["posiblemente",{"_index":1946,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["posibles",{"_index":1249,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["post",{"_index":232,"title":{},"body":{"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["post('change",{"_index":205,"title":{},"body":{"controllers/CoaController.html":{}}}],["post('find",{"_index":1219,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["post('modify",{"_index":219,"title":{},"body":{"controllers/CoaController.html":{}}}],["posteriormente",{"_index":1178,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["prefix",{"_index":181,"title":{},"body":{"controllers/CoaController.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["preparacion",{"_index":446,"title":{},"body":{"injectables/CoaService.html":{}}}],["presente",{"_index":1227,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["prestados",{"_index":1319,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["prettier/prettier",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"entities/Nas.html":{},"controllers/NodesController.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"controllers/SystemsController.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["primary",{"_index":864,"title":{},"body":{"entities/Plan.html":{},"controllers/RadusergroupController.html":{}}}],["primarycolumn",{"_index":1549,"title":{},"body":{"entities/System.html":{}}}],["primarygeneratedcolumn",{"_index":585,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["primer",{"_index":1407,"title":{},"body":{"injectables/ServicesService.html":{}}}],["principal",{"_index":260,"title":{},"body":{"modules/CoaModule.html":{},"modules/NasModule.html":{},"controllers/PlanController.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["principales",{"_index":1318,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["principalmente",{"_index":670,"title":{},"body":{"modules/NasModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["prioridad",{"_index":1708,"title":{},"body":{"classes/UserDto.html":{}}}],["priority",{"_index":470,"title":{},"body":{"injectables/CoaService.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"injectables/RadusergroupService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{}}}],["private",{"_index":374,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["probable",{"_index":1405,"title":{},"body":{"injectables/ServicesService.html":{}}}],["problema",{"_index":830,"title":{},"body":{"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["procede",{"_index":1919,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["proceso",{"_index":1137,"title":{},"body":{"injectables/RadcheckService.html":{},"injectables/UserInfoService.html":{}}}],["process.env.port",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produccion",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":2177,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":2158,"title":{},"body":{"index.html":{}}}],["project",{"_index":2188,"title":{},"body":{"index.html":{}}}],["promise",{"_index":334,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["promisify",{"_index":371,"title":{},"body":{"injectables/CoaService.html":{}}}],["promisify(exec",{"_index":380,"title":{},"body":{"injectables/CoaService.html":{}}}],["properties",{"_index":153,"title":{"properties.html":{}},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"entities/Plan.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{},"properties.html":{}}}],["protocol",{"_index":1086,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["public",{"_index":1600,"title":{},"body":{"injectables/SystemsService.html":{}}}],["pudioeran",{"_index":1866,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["pudo",{"_index":428,"title":{},"body":{"injectables/CoaService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{}}}],["pueda",{"_index":1212,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{}}}],["puede",{"_index":692,"title":{},"body":{"injectables/NasService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["pueden",{"_index":606,"title":{},"body":{"controllers/NasController.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["puedo",{"_index":958,"title":{},"body":{"injectables/PlanService.html":{},"injectables/RadcheckService.html":{}}}],["punto",{"_index":1911,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["puntos",{"_index":741,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["put",{"_index":628,"title":{},"body":{"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["put(':id",{"_index":625,"title":{},"body":{"controllers/NasController.html":{},"controllers/NodesController.html":{},"controllers/PlanController.html":{},"controllers/RadcheckController.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["put('delete",{"_index":1253,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["que",{"_index":264,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["queda",{"_index":321,"title":{},"body":{"injectables/CoaService.html":{}}}],["query",{"_index":854,"title":{},"body":{"entities/Plan.html":{}}}],["r",{"_index":455,"title":{},"body":{"injectables/CoaService.html":{}}}],["rad",{"_index":1166,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["rad.attribute",{"_index":1160,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["rad.op",{"_index":1161,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["rad.value",{"_index":1162,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["radacct",{"_index":81,"title":{"entities/Radacct.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"entities/Radacct.html":{},"coverage.html":{}}}],["radacct.nasipaddress",{"_index":432,"title":{},"body":{"injectables/CoaService.html":{}}}],["radacctid",{"_index":1039,"title":{},"body":{"entities/Radacct.html":{}}}],["radacctrepository",{"_index":291,"title":{},"body":{"injectables/CoaService.html":{}}}],["radcheck",{"_index":79,"title":{"entities/RadCheck.html":{}},"body":{"modules/AppModule.html":{},"entities/RadCheck.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"classes/UserDto.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["radcheck\"'.\\nfecha",{"_index":1153,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["radcheck\"\\n",{"_index":1935,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["radcheck.controller",{"_index":1125,"title":{},"body":{"modules/RadcheckModule.html":{}}}],["radcheck.service",{"_index":1113,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["radcheck/radcheck.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["radcheckcontroller",{"_index":1077,"title":{"controllers/RadcheckController.html":{}},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"coverage.html":{}}}],["radcheckcreate",{"_index":1930,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["radcheckdto",{"_index":971,"title":{"classes/RadCheckDto.html":{}},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"coverage.html":{}}}],["radcheckmodule",{"_index":44,"title":{"modules/RadcheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RadcheckModule.html":{},"modules.html":{},"overview.html":{}}}],["radcheckrepository",{"_index":1132,"title":{},"body":{"injectables/RadcheckService.html":{},"injectables/UserInfoService.html":{}}}],["radcheckservice",{"_index":1112,"title":{"injectables/RadcheckService.html":{}},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"coverage.html":{},"overview.html":{}}}],["radcheckupdatedto",{"_index":989,"title":{"classes/RadCheckUpdateDto.html":{}},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"coverage.html":{}}}],["radclient",{"_index":452,"title":{},"body":{"injectables/CoaService.html":{}}}],["radclientcommand",{"_index":328,"title":{},"body":{"injectables/CoaService.html":{}}}],["radgroupreply",{"_index":97,"title":{"entities/RadGroupReply.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"entities/RadGroupReply.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["radgrouprepository",{"_index":293,"title":{},"body":{"injectables/CoaService.html":{}}}],["radius",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["radius.radusergroup",{"_index":1198,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["radius`.`radusergroup",{"_index":1242,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["radiusid",{"_index":549,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["radiusid,clientid,status,plan,sys",{"_index":1517,"title":{},"body":{"injectables/ServicesService.html":{}}}],["radusergroup",{"_index":89,"title":{"entities/RadUserGroup.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"entities/RadUserGroup.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["radusergroup.\\nfecha",{"_index":1296,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["radusergroup.controller",{"_index":1261,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["radusergroup.dto",{"_index":1216,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["radusergroup.service",{"_index":1240,"title":{},"body":{"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{}}}],["radusergroup/radusergroup.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["radusergroupcontroller",{"_index":1169,"title":{"controllers/RadusergroupController.html":{}},"body":{"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"coverage.html":{}}}],["radusergroupdto",{"_index":1007,"title":{"classes/RadUserGroupDto.html":{}},"body":{"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"coverage.html":{}}}],["radusergroupmodule",{"_index":45,"title":{"modules/RadusergroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RadusergroupModule.html":{},"modules.html":{},"overview.html":{}}}],["radusergrouprepository",{"_index":1392,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["radusergroupservice",{"_index":257,"title":{"injectables/RadusergroupService.html":{}},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"coverage.html":{},"overview.html":{}}}],["radusergroupupdatedto",{"_index":1012,"title":{"classes/RadUserGroupUpdateDto.html":{}},"body":{"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"coverage.html":{}}}],["razón",{"_index":1349,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["read",{"_index":2198,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["realiz",{"_index":517,"title":{},"body":{"injectables/CoaService.html":{}}}],["realiza",{"_index":1223,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["realizado",{"_index":1138,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["realizar",{"_index":953,"title":{},"body":{"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["realm",{"_index":1040,"title":{},"body":{"entities/Radacct.html":{}}}],["rechaza",{"_index":818,"title":{},"body":{"injectables/NodesService.html":{},"injectables/ServicesService.html":{}}}],["rechazada",{"_index":1352,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{}}}],["rechazar",{"_index":1233,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["rechazara",{"_index":2060,"title":{},"body":{"injectables/ZoneService.html":{}}}],["recibe",{"_index":879,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["recibido",{"_index":497,"title":{},"body":{"injectables/CoaService.html":{}}}],["red",{"_index":604,"title":{},"body":{"controllers/NasController.html":{}}}],["redirect",{"_index":493,"title":{},"body":{"injectables/CoaService.html":{}}}],["reegistrado",{"_index":1784,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["refiere",{"_index":602,"title":{},"body":{"controllers/NasController.html":{}}}],["reflect",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":1859,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["registrado",{"_index":1968,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["registrar",{"_index":1937,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["registro",{"_index":1214,"title":{},"body":{"controllers/RadusergroupController.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["reintentar",{"_index":1825,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["relacionada",{"_index":186,"title":{},"body":{"controllers/CoaController.html":{}}}],["relacionan",{"_index":2015,"title":{},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["relations",{"_index":836,"title":{},"body":{"injectables/NodesService.html":{},"injectables/ServicesService.html":{}}}],["relations:['systems",{"_index":1462,"title":{},"body":{"injectables/ServicesService.html":{}}}],["relativa",{"_index":1457,"title":{},"body":{"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{}}}],["relativo",{"_index":1752,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["reltaivo",{"_index":2013,"title":{},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["rement",{"_index":1201,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["remitase",{"_index":1771,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["remove",{"_index":1326,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["remove(@param('id",{"_index":1372,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["remove(id",{"_index":1338,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["removenode",{"_index":759,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["removenode(@param('id",{"_index":792,"title":{},"body":{"controllers/NodesController.html":{}}}],["removenode(id",{"_index":768,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["removeplan",{"_index":875,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["removeplan(@param('id",{"_index":911,"title":{},"body":{"controllers/PlanController.html":{}}}],["removeplan(id",{"_index":891,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["remover",{"_index":814,"title":{},"body":{"injectables/NodesService.html":{}}}],["removeservice",{"_index":1387,"title":{},"body":{"injectables/ServicesService.html":{}}}],["removeservice(id",{"_index":1414,"title":{},"body":{"injectables/ServicesService.html":{}}}],["removesys",{"_index":1599,"title":{},"body":{"injectables/SystemsService.html":{}}}],["removesys(id",{"_index":1613,"title":{},"body":{"injectables/SystemsService.html":{}}}],["repository",{"_index":290,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{},"index.html":{}}}],["requerir",{"_index":1232,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["requiere",{"_index":1093,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["require('superagent",{"_index":1448,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["requires",{"_index":1446,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["res",{"_index":460,"title":{},"body":{"injectables/CoaService.html":{}}}],["res.body",{"_index":1456,"title":{},"body":{"injectables/ServicesService.html":{}}}],["res.body['results",{"_index":1641,"title":{},"body":{"injectables/SystemsService.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}],["respectiva",{"_index":1209,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["response",{"_index":342,"title":{},"body":{"injectables/CoaService.html":{}}}],["response.tolowercase",{"_index":404,"title":{},"body":{"injectables/CoaService.html":{}}}],["respuesta",{"_index":323,"title":{},"body":{"injectables/CoaService.html":{}}}],["resto",{"_index":1099,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["restringirlos",{"_index":1250,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":318,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NasController.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["retornal",{"_index":500,"title":{},"body":{"injectables/CoaService.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["reune",{"_index":1317,"title":{},"body":{"controllers/ServicesController.html":{}}}],["reuno",{"_index":1378,"title":{},"body":{"modules/ServicesModule.html":{}}}],["revisa",{"_index":1418,"title":{},"body":{"injectables/ServicesService.html":{}}}],["revisar",{"_index":1500,"title":{},"body":{"injectables/ServicesService.html":{}}}],["root",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":1757,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["run",{"_index":2172,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":196,"title":{},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"injectables/NasService.html":{},"controllers/PlanController.html":{},"controllers/UserInfoController.html":{}}}],["rutas",{"_index":185,"title":{},"body":{"controllers/CoaController.html":{},"modules/NasModule.html":{}}}],["rxjs",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["salta",{"_index":1856,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["salto",{"_index":1819,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["salvando",{"_index":1431,"title":{},"body":{"injectables/ServicesService.html":{}}}],["salvar",{"_index":1294,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["saveradcheck",{"_index":1933,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["savesys",{"_index":1628,"title":{},"body":{"injectables/SystemsService.html":{}}}],["saveusergroup",{"_index":1292,"title":{},"body":{"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["savezone",{"_index":2077,"title":{},"body":{"injectables/ZoneService.html":{}}}],["scalable",{"_index":2163,"title":{},"body":{"index.html":{}}}],["se",{"_index":169,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["sea",{"_index":1148,"title":{},"body":{"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"controllers/ServicesController.html":{},"injectables/ZoneService.html":{}}}],["secret",{"_index":176,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{}}}],["sentido",{"_index":1237,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["ser",{"_index":429,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/UserInfoService.html":{}}}],["serial",{"_index":1082,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["serv",{"_index":1438,"title":{},"body":{"injectables/ServicesService.html":{}}}],["serv.sys",{"_index":1440,"title":{},"body":{"injectables/ServicesService.html":{}}}],["server",{"_index":177,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"index.html":{}}}],["service",{"_index":85,"title":{"entities/Service.html":{}},"body":{"modules/AppModule.html":{},"entities/Plan.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"coverage.html":{}}}],["service.dto",{"_index":1356,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts",{"_index":547,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["service.dto.ts:13",{"_index":552,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:16",{"_index":554,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:19",{"_index":555,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:20",{"_index":1660,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:24",{"_index":1661,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:25",{"_index":557,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:6",{"_index":553,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:9",{"_index":558,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{}}}],["service.entity",{"_index":851,"title":{},"body":{"entities/Plan.html":{}}}],["service.plan",{"_index":844,"title":{},"body":{"entities/Plan.html":{}}}],["servicenew",{"_index":1429,"title":{},"body":{"injectables/ServicesService.html":{}}}],["services",{"_index":839,"title":{},"body":{"entities/Plan.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["services.\\nfecha",{"_index":1435,"title":{},"body":{"injectables/ServicesService.html":{}}}],["services.controller",{"_index":1380,"title":{},"body":{"modules/ServicesModule.html":{}}}],["services.length",{"_index":1437,"title":{},"body":{"injectables/ServicesService.html":{}}}],["services.service",{"_index":1354,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["services/services.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["servicesave",{"_index":1433,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicescontroller",{"_index":1315,"title":{"controllers/ServicesController.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["servicesmodule",{"_index":46,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["servicesrepository",{"_index":1400,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicesservice",{"_index":1353,"title":{"injectables/ServicesService.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"coverage.html":{},"overview.html":{}}}],["servicetoupdate",{"_index":1525,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetoupdate.clientid",{"_index":1528,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetoupdate.plan",{"_index":1530,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetoupdate.radiusid",{"_index":1527,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetoupdate.status",{"_index":1529,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetoupdate.sys",{"_index":1531,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicetype",{"_index":1041,"title":{},"body":{"entities/Radacct.html":{}}}],["serviceupdated",{"_index":1532,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicio",{"_index":358,"title":{},"body":{"injectables/CoaService.html":{},"modules/PlanModule.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/ServicesService.html":{}}}],["servicios",{"_index":270,"title":{},"body":{"modules/CoaModule.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["servidor",{"_index":273,"title":{},"body":{"modules/CoaModule.html":{},"controllers/NasController.html":{}}}],["servservice",{"_index":1358,"title":{},"body":{"controllers/ServicesController.html":{}}}],["sería",{"_index":881,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["set('authorization",{"_index":1451,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["set('content",{"_index":1453,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["setea",{"_index":1272,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["setear",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["shortname",{"_index":576,"title":{},"body":{"entities/Nas.html":{},"injectables/NasService.html":{}}}],["si",{"_index":304,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["side",{"_index":2164,"title":{},"body":{"index.html":{}}}],["sido",{"_index":1910,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["siempre",{"_index":1475,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["siguiente",{"_index":1820,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sin",{"_index":1210,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["sincronizado",{"_index":1514,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sino",{"_index":1097,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["sintesis",{"_index":1831,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sistema",{"_index":1419,"title":{},"body":{"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{}}}],["sola",{"_index":1108,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["solicitan",{"_index":1182,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["solicitud",{"_index":817,"title":{},"body":{"injectables/NodesService.html":{}}}],["solo",{"_index":1102,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/UserInfoService.html":{}}}],["son",{"_index":262,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/RadusergroupService.html":{},"controllers/SystemsController.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"index.html":{}}}],["sponsors",{"_index":2191,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":2155,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.dto.ts",{"_index":2153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["src/coa/coa.controller.ts",{"_index":180,"title":{},"body":{"controllers/CoaController.html":{},"coverage.html":{}}}],["src/coa/coa.controller.ts:18",{"_index":226,"title":{},"body":{"controllers/CoaController.html":{}}}],["src/coa/coa.controller.ts:29",{"_index":195,"title":{},"body":{"controllers/CoaController.html":{}}}],["src/coa/coa.controller.ts:40",{"_index":206,"title":{},"body":{"controllers/CoaController.html":{}}}],["src/coa/coa.controller.ts:50",{"_index":220,"title":{},"body":{"controllers/CoaController.html":{}}}],["src/coa/coa.module",{"_index":1382,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/coa/coa.module.ts",{"_index":258,"title":{},"body":{"modules/CoaModule.html":{}}}],["src/coa/coa.service",{"_index":1422,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/coa/coa.service.ts",{"_index":283,"title":{},"body":{"injectables/CoaService.html":{},"coverage.html":{}}}],["src/coa/coa.service.ts:107",{"_index":296,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:18",{"_index":295,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:241",{"_index":360,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:394",{"_index":324,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:42",{"_index":329,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:595",{"_index":350,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:75",{"_index":336,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/coa/coa.service.ts:84",{"_index":348,"title":{},"body":{"injectables/CoaService.html":{}}}],["src/database/create",{"_index":524,"title":{},"body":{"classes/CreateNodeDto.html":{},"coverage.html":{}}}],["src/database/nas.entity",{"_index":278,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["src/database/nas.entity.ts",{"_index":573,"title":{},"body":{"entities/Nas.html":{},"coverage.html":{}}}],["src/database/nas.entity.ts:10",{"_index":588,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:13",{"_index":596,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:16",{"_index":598,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:19",{"_index":590,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:22",{"_index":592,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:25",{"_index":594,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:28",{"_index":582,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:31",{"_index":584,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/nas.entity.ts:7",{"_index":586,"title":{},"body":{"entities/Nas.html":{}}}],["src/database/node.entity",{"_index":1381,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"modules/SystemsModule.html":{}}}],["src/database/node.entity.ts",{"_index":1994,"title":{},"body":{"entities/ZonaCliente.html":{},"coverage.html":{}}}],["src/database/node.entity.ts:14",{"_index":1995,"title":{},"body":{"entities/ZonaCliente.html":{}}}],["src/database/node.entity.ts:17",{"_index":1996,"title":{},"body":{"entities/ZonaCliente.html":{}}}],["src/database/node.entity.ts:25",{"_index":1999,"title":{},"body":{"entities/ZonaCliente.html":{}}}],["src/database/plan.entity",{"_index":561,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["src/database/plan.entity.ts",{"_index":838,"title":{},"body":{"entities/Plan.html":{},"coverage.html":{}}}],["src/database/plan.entity.ts:11",{"_index":842,"title":{},"body":{"entities/Plan.html":{}}}],["src/database/plan.entity.ts:14",{"_index":841,"title":{},"body":{"entities/Plan.html":{}}}],["src/database/plan.entity.ts:22",{"_index":848,"title":{},"body":{"entities/Plan.html":{}}}],["src/database/plan.entity.ts:8",{"_index":840,"title":{},"body":{"entities/Plan.html":{}}}],["src/database/radacct.entity",{"_index":277,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{}}}],["src/database/radacct.entity.ts",{"_index":1016,"title":{},"body":{"entities/Radacct.html":{},"coverage.html":{}}}],["src/database/radacct.entity.ts:10",{"_index":1047,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:13",{"_index":1053,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:16",{"_index":1074,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:19",{"_index":1072,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:22",{"_index":1067,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:25",{"_index":1069,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:28",{"_index":1070,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:31",{"_index":1050,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:34",{"_index":1051,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:37",{"_index":1045,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:40",{"_index":1048,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:43",{"_index":1042,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:46",{"_index":1056,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:49",{"_index":1057,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:52",{"_index":1044,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:55",{"_index":1046,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:58",{"_index":1054,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:61",{"_index":1055,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:64",{"_index":1052,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:67",{"_index":1073,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:7",{"_index":1071,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:70",{"_index":1066,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:73",{"_index":1062,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:76",{"_index":1064,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:79",{"_index":1065,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:82",{"_index":1060,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radacct.entity.ts:85",{"_index":1059,"title":{},"body":{"entities/Radacct.html":{}}}],["src/database/radcheck.entity",{"_index":1126,"title":{},"body":{"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["src/database/radcheck.entity.ts",{"_index":960,"title":{},"body":{"entities/RadCheck.html":{},"coverage.html":{}}}],["src/database/radcheck.entity.ts:10",{"_index":968,"title":{},"body":{"entities/RadCheck.html":{}}}],["src/database/radcheck.entity.ts:13",{"_index":963,"title":{},"body":{"entities/RadCheck.html":{}}}],["src/database/radcheck.entity.ts:16",{"_index":967,"title":{},"body":{"entities/RadCheck.html":{}}}],["src/database/radcheck.entity.ts:19",{"_index":970,"title":{},"body":{"entities/RadCheck.html":{}}}],["src/database/radcheck.entity.ts:7",{"_index":964,"title":{},"body":{"entities/RadCheck.html":{}}}],["src/database/radgroupreply.entity",{"_index":281,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["src/database/radgroupreply.entity.ts",{"_index":995,"title":{},"body":{"entities/RadGroupReply.html":{},"coverage.html":{}}}],["src/database/radgroupreply.entity.ts:10",{"_index":997,"title":{},"body":{"entities/RadGroupReply.html":{}}}],["src/database/radgroupreply.entity.ts:13",{"_index":996,"title":{},"body":{"entities/RadGroupReply.html":{}}}],["src/database/radgroupreply.entity.ts:16",{"_index":999,"title":{},"body":{"entities/RadGroupReply.html":{}}}],["src/database/radgroupreply.entity.ts:19",{"_index":1000,"title":{},"body":{"entities/RadGroupReply.html":{}}}],["src/database/radgroupreply.entity.ts:7",{"_index":998,"title":{},"body":{"entities/RadGroupReply.html":{}}}],["src/database/radusergroup.entity",{"_index":279,"title":{},"body":{"modules/CoaModule.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["src/database/radusergroup.entity.ts",{"_index":1001,"title":{},"body":{"entities/RadUserGroup.html":{},"coverage.html":{}}}],["src/database/radusergroup.entity.ts:10",{"_index":1005,"title":{},"body":{"entities/RadUserGroup.html":{}}}],["src/database/radusergroup.entity.ts:13",{"_index":1002,"title":{},"body":{"entities/RadUserGroup.html":{}}}],["src/database/radusergroup.entity.ts:16",{"_index":1004,"title":{},"body":{"entities/RadUserGroup.html":{}}}],["src/database/radusergroup.entity.ts:7",{"_index":1003,"title":{},"body":{"entities/RadUserGroup.html":{}}}],["src/database/service.entity.ts",{"_index":1300,"title":{},"body":{"entities/Service.html":{},"coverage.html":{}}}],["src/database/service.entity.ts:12",{"_index":1309,"title":{},"body":{"entities/Service.html":{}}}],["src/database/service.entity.ts:15",{"_index":1301,"title":{},"body":{"entities/Service.html":{}}}],["src/database/service.entity.ts:22",{"_index":1305,"title":{},"body":{"entities/Service.html":{}}}],["src/database/service.entity.ts:25",{"_index":1306,"title":{},"body":{"entities/Service.html":{}}}],["src/database/service.entity.ts:28",{"_index":1307,"title":{},"body":{"entities/Service.html":{}}}],["src/database/service.entity.ts:9",{"_index":1302,"title":{},"body":{"entities/Service.html":{}}}],["src/database/system.entity",{"_index":533,"title":{},"body":{"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"modules/NodesModule.html":{},"entities/Service.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"entities/ZonaCliente.html":{}}}],["src/database/system.entity.ts",{"_index":1537,"title":{},"body":{"entities/System.html":{},"coverage.html":{}}}],["src/database/system.entity.ts:18",{"_index":1541,"title":{},"body":{"entities/System.html":{}}}],["src/database/system.entity.ts:21",{"_index":1542,"title":{},"body":{"entities/System.html":{}}}],["src/database/system.entity.ts:24",{"_index":1539,"title":{},"body":{"entities/System.html":{}}}],["src/database/system.entity.ts:27",{"_index":1540,"title":{},"body":{"entities/System.html":{}}}],["src/database/system.entity.ts:33",{"_index":1545,"title":{},"body":{"entities/System.html":{}}}],["src/database/update",{"_index":783,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{},"classes/UpdateNodeDto.html":{},"coverage.html":{}}}],["src/database/user.entity",{"_index":276,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["src/database/user.entity.ts",{"_index":1721,"title":{},"body":{"entities/UserInfo.html":{},"coverage.html":{}}}],["src/database/user.entity.ts:10",{"_index":1746,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:13",{"_index":1736,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:16",{"_index":1739,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:19",{"_index":1734,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:22",{"_index":1733,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:25",{"_index":1728,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:28",{"_index":1747,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:31",{"_index":1737,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:34",{"_index":1740,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:37",{"_index":1725,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:40",{"_index":1727,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:43",{"_index":1743,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:46",{"_index":1730,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:49",{"_index":1748,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:52",{"_index":1741,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:55",{"_index":1726,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:58",{"_index":1742,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:61",{"_index":1735,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:64",{"_index":1732,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:67",{"_index":1731,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:7",{"_index":1738,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:70",{"_index":1745,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/user.entity.ts:73",{"_index":1744,"title":{},"body":{"entities/UserInfo.html":{}}}],["src/database/zone.entity",{"_index":675,"title":{},"body":{"modules/NasModule.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["src/database/zone.entity.ts",{"_index":2000,"title":{},"body":{"entities/Zone.html":{},"coverage.html":{}}}],["src/database/zone.entity.ts:10",{"_index":2007,"title":{},"body":{"entities/Zone.html":{}}}],["src/database/zone.entity.ts:13",{"_index":2009,"title":{},"body":{"entities/Zone.html":{}}}],["src/database/zone.entity.ts:16",{"_index":2004,"title":{},"body":{"entities/Zone.html":{}}}],["src/database/zone.entity.ts:19",{"_index":2008,"title":{},"body":{"entities/Zone.html":{}}}],["src/database/zone.entity.ts:22",{"_index":2005,"title":{},"body":{"entities/Zone.html":{}}}],["src/database/zone.entity.ts:7",{"_index":2006,"title":{},"body":{"entities/Zone.html":{}}}],["src/dto/coa.dto",{"_index":234,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["src/dto/coa.dto.ts",{"_index":143,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"coverage.html":{}}}],["src/dto/coa.dto.ts:10",{"_index":252,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:14",{"_index":247,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:18",{"_index":253,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:29",{"_index":250,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:33",{"_index":251,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:37",{"_index":249,"title":{},"body":{"classes/CoaDto.html":{}}}],["src/dto/coa.dto.ts:46",{"_index":157,"title":{},"body":{"classes/ChangePlanDto.html":{}}}],["src/dto/coa.dto.ts:50",{"_index":156,"title":{},"body":{"classes/ChangePlanDto.html":{}}}],["src/dto/create",{"_index":546,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"coverage.html":{}}}],["src/dto/nas.dto",{"_index":631,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{}}}],["src/dto/nas.dto.ts",{"_index":641,"title":{},"body":{"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"coverage.html":{}}}],["src/dto/nas.dto.ts:10",{"_index":645,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:14",{"_index":644,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:18",{"_index":648,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:29",{"_index":647,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:33",{"_index":649,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:37",{"_index":650,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:41",{"_index":642,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:45",{"_index":643,"title":{},"body":{"classes/NasDto.html":{}}}],["src/dto/nas.dto.ts:52",{"_index":655,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:56",{"_index":654,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:60",{"_index":657,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:64",{"_index":656,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:68",{"_index":658,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:72",{"_index":659,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:76",{"_index":651,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/nas.dto.ts:80",{"_index":652,"title":{},"body":{"classes/NasDtoUpdate.html":{}}}],["src/dto/plan.dto.ts",{"_index":535,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["src/dto/plan.dto.ts:12",{"_index":537,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["src/dto/plan.dto.ts:8",{"_index":538,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["src/dto/radcheck.dto",{"_index":1114,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["src/dto/radcheck.dto.ts",{"_index":972,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"coverage.html":{}}}],["src/dto/radcheck.dto.ts:11",{"_index":973,"title":{},"body":{"classes/RadCheckDto.html":{}}}],["src/dto/radcheck.dto.ts:17",{"_index":982,"title":{},"body":{"classes/RadCheckDto.html":{}}}],["src/dto/radcheck.dto.ts:21",{"_index":984,"title":{},"body":{"classes/RadCheckDto.html":{}}}],["src/dto/radcheck.dto.ts:28",{"_index":993,"title":{},"body":{"classes/RadCheckUpdateDto.html":{}}}],["src/dto/radcheck.dto.ts:32",{"_index":990,"title":{},"body":{"classes/RadCheckUpdateDto.html":{}}}],["src/dto/radcheck.dto.ts:38",{"_index":992,"title":{},"body":{"classes/RadCheckUpdateDto.html":{}}}],["src/dto/radcheck.dto.ts:42",{"_index":994,"title":{},"body":{"classes/RadCheckUpdateDto.html":{}}}],["src/dto/radcheck.dto.ts:7",{"_index":983,"title":{},"body":{"classes/RadCheckDto.html":{}}}],["src/dto/radusergroup.dto",{"_index":1241,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["src/dto/radusergroup.dto.ts",{"_index":1008,"title":{},"body":{"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"coverage.html":{}}}],["src/dto/radusergroup.dto.ts:11",{"_index":1009,"title":{},"body":{"classes/RadUserGroupDto.html":{}}}],["src/dto/radusergroup.dto.ts:15",{"_index":1010,"title":{},"body":{"classes/RadUserGroupDto.html":{}}}],["src/dto/radusergroup.dto.ts:23",{"_index":1015,"title":{},"body":{"classes/RadUserGroupUpdateDto.html":{}}}],["src/dto/radusergroup.dto.ts:27",{"_index":1013,"title":{},"body":{"classes/RadUserGroupUpdateDto.html":{}}}],["src/dto/radusergroup.dto.ts:31",{"_index":1014,"title":{},"body":{"classes/RadUserGroupUpdateDto.html":{}}}],["src/dto/radusergroup.dto.ts:7",{"_index":1011,"title":{},"body":{"classes/RadUserGroupDto.html":{}}}],["src/dto/update",{"_index":902,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"coverage.html":{}}}],["src/dto/user.dto",{"_index":1792,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["src/dto/user.dto.ts",{"_index":1665,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/dto/user.dto.ts:100",{"_index":1703,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:104",{"_index":1685,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:108",{"_index":1705,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:112",{"_index":1691,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:117",{"_index":1704,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:125",{"_index":1697,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:134",{"_index":1707,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:138",{"_index":1702,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:15",{"_index":1712,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:23",{"_index":1694,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:30",{"_index":1700,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:37",{"_index":1688,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:44",{"_index":1683,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:55",{"_index":1690,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:62",{"_index":1710,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:67",{"_index":1689,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:71",{"_index":1687,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:75",{"_index":1713,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:79",{"_index":1699,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:83",{"_index":1701,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:88",{"_index":1686,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:92",{"_index":1709,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:96",{"_index":1714,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/userupdate.dto",{"_index":1793,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["src/dto/userupdate.dto.ts",{"_index":1974,"title":{},"body":{"classes/UserUpdateDto.html":{},"coverage.html":{}}}],["src/dto/userupdate.dto.ts:11",{"_index":1991,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:18",{"_index":1983,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:25",{"_index":1985,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:32",{"_index":1990,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:39",{"_index":1979,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:43",{"_index":1981,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:47",{"_index":1980,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:51",{"_index":1978,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:55",{"_index":1992,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:59",{"_index":1984,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:63",{"_index":1986,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:67",{"_index":1975,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:71",{"_index":1977,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:75",{"_index":1989,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:79",{"_index":1993,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:83",{"_index":1987,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:87",{"_index":1976,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:91",{"_index":1988,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/userupdate.dto.ts:95",{"_index":1982,"title":{},"body":{"classes/UserUpdateDto.html":{}}}],["src/dto/zone.dto",{"_index":2030,"title":{},"body":{"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["src/dto/zone.dto.ts",{"_index":2038,"title":{},"body":{"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["src/dto/zone.dto.ts:11",{"_index":2044,"title":{},"body":{"classes/ZoneDto.html":{}}}],["src/dto/zone.dto.ts:15",{"_index":2039,"title":{},"body":{"classes/ZoneDto.html":{}}}],["src/dto/zone.dto.ts:19",{"_index":2043,"title":{},"body":{"classes/ZoneDto.html":{}}}],["src/dto/zone.dto.ts:23",{"_index":2040,"title":{},"body":{"classes/ZoneDto.html":{}}}],["src/dto/zone.dto.ts:29",{"_index":2085,"title":{},"body":{"classes/ZoneUpadateDto.html":{}}}],["src/dto/zone.dto.ts:33",{"_index":2087,"title":{},"body":{"classes/ZoneUpadateDto.html":{}}}],["src/dto/zone.dto.ts:37",{"_index":2083,"title":{},"body":{"classes/ZoneUpadateDto.html":{}}}],["src/dto/zone.dto.ts:41",{"_index":2086,"title":{},"body":{"classes/ZoneUpadateDto.html":{}}}],["src/dto/zone.dto.ts:45",{"_index":2084,"title":{},"body":{"classes/ZoneUpadateDto.html":{}}}],["src/dto/zone.dto.ts:7",{"_index":2041,"title":{},"body":{"classes/ZoneDto.html":{}}}],["src/main.ts",{"_index":2113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/nas/nas.controller.ts",{"_index":601,"title":{},"body":{"controllers/NasController.html":{},"coverage.html":{}}}],["src/nas/nas.controller.ts:20",{"_index":616,"title":{},"body":{"controllers/NasController.html":{}}}],["src/nas/nas.controller.ts:29",{"_index":618,"title":{},"body":{"controllers/NasController.html":{}}}],["src/nas/nas.controller.ts:39",{"_index":621,"title":{},"body":{"controllers/NasController.html":{}}}],["src/nas/nas.controller.ts:50",{"_index":626,"title":{},"body":{"controllers/NasController.html":{}}}],["src/nas/nas.module.ts",{"_index":662,"title":{},"body":{"modules/NasModule.html":{}}}],["src/nas/nas.service",{"_index":2050,"title":{},"body":{"modules/ZoneModule.html":{}}}],["src/nas/nas.service.ts",{"_index":677,"title":{},"body":{"injectables/NasService.html":{},"coverage.html":{}}}],["src/nas/nas.service.ts:104",{"_index":685,"title":{},"body":{"injectables/NasService.html":{}}}],["src/nas/nas.service.ts:147",{"_index":688,"title":{},"body":{"injectables/NasService.html":{}}}],["src/nas/nas.service.ts:193",{"_index":689,"title":{},"body":{"injectables/NasService.html":{}}}],["src/nas/nas.service.ts:24",{"_index":682,"title":{},"body":{"injectables/NasService.html":{}}}],["src/nas/nas.service.ts:9",{"_index":681,"title":{},"body":{"injectables/NasService.html":{}}}],["src/nodes/nodes.controller.ts",{"_index":738,"title":{},"body":{"controllers/NodesController.html":{},"coverage.html":{}}}],["src/nodes/nodes.controller.ts:31",{"_index":762,"title":{},"body":{"controllers/NodesController.html":{}}}],["src/nodes/nodes.controller.ts:40",{"_index":763,"title":{},"body":{"controllers/NodesController.html":{}}}],["src/nodes/nodes.controller.ts:50",{"_index":765,"title":{},"body":{"controllers/NodesController.html":{}}}],["src/nodes/nodes.controller.ts:61",{"_index":774,"title":{},"body":{"controllers/NodesController.html":{}}}],["src/nodes/nodes.controller.ts:71",{"_index":770,"title":{},"body":{"controllers/NodesController.html":{}}}],["src/nodes/nodes.module.ts",{"_index":796,"title":{},"body":{"modules/NodesModule.html":{}}}],["src/nodes/nodes.service.ts",{"_index":800,"title":{},"body":{"injectables/NodesService.html":{},"coverage.html":{}}}],["src/nodes/nodes.service.ts:14",{"_index":803,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/nodes/nodes.service.ts:142",{"_index":810,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/nodes/nodes.service.ts:192",{"_index":815,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/nodes/nodes.service.ts:276",{"_index":813,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/nodes/nodes.service.ts:29",{"_index":806,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/nodes/nodes.service.ts:96",{"_index":808,"title":{},"body":{"injectables/NodesService.html":{}}}],["src/plan/plan.controller.ts",{"_index":869,"title":{},"body":{"controllers/PlanController.html":{},"coverage.html":{}}}],["src/plan/plan.controller.ts:31",{"_index":878,"title":{},"body":{"controllers/PlanController.html":{}}}],["src/plan/plan.controller.ts:40",{"_index":885,"title":{},"body":{"controllers/PlanController.html":{}}}],["src/plan/plan.controller.ts:50",{"_index":888,"title":{},"body":{"controllers/PlanController.html":{}}}],["src/plan/plan.controller.ts:60",{"_index":895,"title":{},"body":{"controllers/PlanController.html":{}}}],["src/plan/plan.controller.ts:70",{"_index":892,"title":{},"body":{"controllers/PlanController.html":{}}}],["src/plan/plan.module.ts",{"_index":916,"title":{},"body":{"modules/PlanModule.html":{}}}],["src/plan/plan.service.ts",{"_index":921,"title":{},"body":{"injectables/PlanService.html":{},"coverage.html":{}}}],["src/plan/plan.service.ts:107",{"_index":929,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:14",{"_index":925,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:150",{"_index":930,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:19",{"_index":934,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:194",{"_index":932,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:263",{"_index":931,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/plan/plan.service.ts:30",{"_index":928,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/radcheck/radcheck.controller.ts",{"_index":1078,"title":{},"body":{"controllers/RadcheckController.html":{},"coverage.html":{}}}],["src/radcheck/radcheck.controller.ts:18",{"_index":1104,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["src/radcheck/radcheck.controller.ts:28",{"_index":1107,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["src/radcheck/radcheck.controller.ts:38",{"_index":1091,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["src/radcheck/radcheck.controller.ts:49",{"_index":1111,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["src/radcheck/radcheck.module.ts",{"_index":1124,"title":{},"body":{"modules/RadcheckModule.html":{}}}],["src/radcheck/radcheck.service.ts",{"_index":1128,"title":{},"body":{"injectables/RadcheckService.html":{},"coverage.html":{}}}],["src/radcheck/radcheck.service.ts:118",{"_index":1134,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["src/radcheck/radcheck.service.ts:12",{"_index":1131,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["src/radcheck/radcheck.service.ts:195",{"_index":1146,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["src/radcheck/radcheck.service.ts:27",{"_index":1142,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["src/radcheck/radcheck.service.ts:71",{"_index":1144,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["src/radusergroup/radusergroup.controller.ts",{"_index":1170,"title":{},"body":{"controllers/RadusergroupController.html":{},"coverage.html":{}}}],["src/radusergroup/radusergroup.controller.ts:27",{"_index":1217,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["src/radusergroup/radusergroup.controller.ts:39",{"_index":1206,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["src/radusergroup/radusergroup.controller.ts:51",{"_index":1220,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["src/radusergroup/radusergroup.controller.ts:63",{"_index":1230,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["src/radusergroup/radusergroup.module.ts",{"_index":1258,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["src/radusergroup/radusergroup.service",{"_index":280,"title":{},"body":{"modules/CoaModule.html":{},"injectables/CoaService.html":{}}}],["src/radusergroup/radusergroup.service.ts",{"_index":1263,"title":{},"body":{"injectables/RadusergroupService.html":{},"coverage.html":{}}}],["src/radusergroup/radusergroup.service.ts:111",{"_index":1282,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/radusergroup/radusergroup.service.ts:15",{"_index":1268,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/radusergroup/radusergroup.service.ts:157",{"_index":1284,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/radusergroup/radusergroup.service.ts:252",{"_index":1285,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/radusergroup/radusergroup.service.ts:31",{"_index":1270,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/radusergroup/radusergroup.service.ts:335",{"_index":1277,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["src/services/services.controller.ts",{"_index":1316,"title":{},"body":{"controllers/ServicesController.html":{},"coverage.html":{}}}],["src/services/services.controller.ts:30",{"_index":1329,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:39",{"_index":1330,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:49",{"_index":1343,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:59",{"_index":1333,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:69",{"_index":1337,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:81",{"_index":1346,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:91",{"_index":1339,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.module.ts",{"_index":1377,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/services/services.service.ts",{"_index":1383,"title":{},"body":{"injectables/ServicesService.html":{},"coverage.html":{}}}],["src/services/services.service.ts:104",{"_index":1408,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:140",{"_index":1413,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:178",{"_index":1409,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:18",{"_index":1399,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:223",{"_index":1417,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:306",{"_index":1421,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:356",{"_index":1415,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:47",{"_index":1402,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/systems/systems.controller.ts",{"_index":1551,"title":{},"body":{"controllers/SystemsController.html":{},"coverage.html":{}}}],["src/systems/systems.controller.ts:28",{"_index":1560,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:38",{"_index":1561,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:48",{"_index":1562,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:60",{"_index":1570,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:71",{"_index":1566,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:81",{"_index":1558,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.controller.ts:91",{"_index":1563,"title":{},"body":{"controllers/SystemsController.html":{}}}],["src/systems/systems.module",{"_index":1379,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/systems/systems.module.ts",{"_index":1592,"title":{},"body":{"modules/SystemsModule.html":{}}}],["src/systems/systems.service",{"_index":1423,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/systems/systems.service.ts",{"_index":1596,"title":{},"body":{"injectables/SystemsService.html":{},"coverage.html":{}}}],["src/systems/systems.service.ts:10",{"_index":1603,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:139",{"_index":1612,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:16",{"_index":1620,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:183",{"_index":1605,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:238",{"_index":1616,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:27",{"_index":1607,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:292",{"_index":1619,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:347",{"_index":1614,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/systems/systems.service.ts:99",{"_index":1609,"title":{},"body":{"injectables/SystemsService.html":{}}}],["src/user",{"_index":1750,"title":{},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["src/zone/zone.controller.ts",{"_index":2011,"title":{},"body":{"controllers/ZoneController.html":{},"coverage.html":{}}}],["src/zone/zone.controller.ts:18",{"_index":2021,"title":{},"body":{"controllers/ZoneController.html":{}}}],["src/zone/zone.controller.ts:27",{"_index":2022,"title":{},"body":{"controllers/ZoneController.html":{}}}],["src/zone/zone.controller.ts:37",{"_index":2023,"title":{},"body":{"controllers/ZoneController.html":{}}}],["src/zone/zone.controller.ts:48",{"_index":2026,"title":{},"body":{"controllers/ZoneController.html":{}}}],["src/zone/zone.module.ts",{"_index":2048,"title":{},"body":{"modules/ZoneModule.html":{}}}],["src/zone/zone.service.ts",{"_index":2052,"title":{},"body":{"injectables/ZoneService.html":{},"coverage.html":{}}}],["src/zone/zone.service.ts:108",{"_index":2061,"title":{},"body":{"injectables/ZoneService.html":{}}}],["src/zone/zone.service.ts:13",{"_index":2055,"title":{},"body":{"injectables/ZoneService.html":{}}}],["src/zone/zone.service.ts:141",{"_index":2063,"title":{},"body":{"injectables/ZoneService.html":{}}}],["src/zone/zone.service.ts:178",{"_index":2065,"title":{},"body":{"injectables/ZoneService.html":{}}}],["src/zone/zone.service.ts:30",{"_index":2057,"title":{},"body":{"injectables/ZoneService.html":{}}}],["start",{"_index":2173,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2176,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2178,"title":{},"body":{"index.html":{}}}],["started",{"_index":2157,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2167,"title":{},"body":{"index.html":{}}}],["state",{"_index":1679,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["statements",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":420,"title":{},"body":{"injectables/CoaService.html":{},"classes/CreateServiceDto.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"classes/UpdateServiceDto.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["statuscoa",{"_index":464,"title":{},"body":{"injectables/CoaService.html":{}}}],["stay",{"_index":2201,"title":{},"body":{"index.html":{}}}],["stdout",{"_index":382,"title":{},"body":{"injectables/CoaService.html":{}}}],["str",{"_index":403,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["str.attribute}=${str.value",{"_index":406,"title":{},"body":{"injectables/CoaService.html":{}}}],["str.includes('coa",{"_index":405,"title":{},"body":{"injectables/CoaService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{}}}],["str}\\n",{"_index":416,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["su",{"_index":303,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"controllers/UserInfoController.html":{},"controllers/ZoneController.html":{}}}],["sugieren",{"_index":1770,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["superagent",{"_index":1447,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["support",{"_index":2192,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sus",{"_index":752,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["suscrito",{"_index":1947,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["suspencion",{"_index":227,"title":{},"body":{"controllers/CoaController.html":{}}}],["suspender",{"_index":361,"title":{},"body":{"injectables/CoaService.html":{}}}],["suspendido",{"_index":469,"title":{},"body":{"injectables/CoaService.html":{},"controllers/RadusergroupController.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["suspendidos",{"_index":313,"title":{},"body":{"injectables/CoaService.html":{}}}],["suspenduser",{"_index":192,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["suspenduser(@param('username",{"_index":237,"title":{},"body":{"controllers/CoaController.html":{}}}],["suspenduser(username",{"_index":224,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["svg",{"_index":2212,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":1327,"title":{},"body":{"controllers/ServicesController.html":{}}}],["sync(@param('node",{"_index":1363,"title":{},"body":{"controllers/ServicesController.html":{}}}],["sync(node",{"_index":1341,"title":{},"body":{"controllers/ServicesController.html":{}}}],["synchronize",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["syncservice",{"_index":1388,"title":{},"body":{"injectables/ServicesService.html":{}}}],["syncservice(node",{"_index":1416,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sys",{"_index":550,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"classes/UpdateServiceDto.html":{}}}],["sys.apikey",{"_index":1640,"title":{},"body":{"injectables/SystemsService.html":{}}}],["sys.endpoint",{"_index":1638,"title":{},"body":{"injectables/SystemsService.html":{}}}],["sys.foreach(async",{"_index":1470,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sys.id",{"_index":1308,"title":{},"body":{"entities/Service.html":{}}}],["sys['apikey",{"_index":1452,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sys['endpoint",{"_index":1442,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sysnode",{"_index":1555,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["sysnode(@param('id",{"_index":1583,"title":{},"body":{"controllers/SystemsController.html":{}}}],["sysnode(id",{"_index":1564,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["sysonnode",{"_index":1471,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sysonnode.foreach(async",{"_index":1484,"title":{},"body":{"injectables/ServicesService.html":{}}}],["sysrepository",{"_index":1604,"title":{},"body":{"injectables/SystemsService.html":{}}}],["sysservice",{"_index":1576,"title":{},"body":{"controllers/SystemsController.html":{}}}],["sysservices",{"_index":1396,"title":{},"body":{"injectables/ServicesService.html":{}}}],["system",{"_index":87,"title":{"entities/System.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateNodeDto.html":{},"classes/CreateServiceDto.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Service.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"entities/ZonaCliente.html":{},"coverage.html":{}}}],["system'.\\nfecha",{"_index":1622,"title":{},"body":{"injectables/SystemsService.html":{}}}],["system.dto",{"_index":1574,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateSystemDto.html":{}}}],["system.dto.ts",{"_index":565,"title":{},"body":{"classes/CreateSystemDto.html":{},"classes/UpdateSystemDto.html":{},"coverage.html":{}}}],["system.dto.ts:12",{"_index":568,"title":{},"body":{"classes/CreateSystemDto.html":{}}}],["system.dto.ts:16",{"_index":569,"title":{},"body":{"classes/CreateSystemDto.html":{}}}],["system.dto.ts:4",{"_index":570,"title":{},"body":{"classes/CreateSystemDto.html":{}}}],["system.dto.ts:8",{"_index":571,"title":{},"body":{"classes/CreateSystemDto.html":{}}}],["system.nodes",{"_index":1998,"title":{},"body":{"entities/ZonaCliente.html":{}}}],["systems",{"_index":526,"title":{},"body":{"classes/CreateNodeDto.html":{},"injectables/NodesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"entities/ZonaCliente.html":{}}}],["systems.controller",{"_index":1594,"title":{},"body":{"modules/SystemsModule.html":{}}}],["systems.service",{"_index":1573,"title":{},"body":{"controllers/SystemsController.html":{},"modules/SystemsModule.html":{}}}],["systems/systems.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["systems?.length",{"_index":1632,"title":{},"body":{"injectables/SystemsService.html":{}}}],["systemscontroller",{"_index":1550,"title":{"controllers/SystemsController.html":{}},"body":{"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"coverage.html":{}}}],["systemsmodule",{"_index":47,"title":{"modules/SystemsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules.html":{},"overview.html":{}}}],["systemsrepository",{"_index":1394,"title":{},"body":{"injectables/ServicesService.html":{}}}],["systemsservice",{"_index":1397,"title":{"injectables/SystemsService.html":{}},"body":{"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"modules/SystemsModule.html":{},"injectables/SystemsService.html":{},"coverage.html":{},"overview.html":{}}}],["systems}.\\nfecha",{"_index":822,"title":{},"body":{"injectables/NodesService.html":{}}}],["systnew",{"_index":1626,"title":{},"body":{"injectables/SystemsService.html":{}}}],["t",{"_index":456,"title":{},"body":{"injectables/CoaService.html":{}}}],["tabla",{"_index":468,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NasController.html":{},"modules/NasModule.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"modules/PlanModule.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["tablas",{"_index":1781,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["table",{"_index":856,"title":{},"body":{"entities/Plan.html":{},"controllers/RadusergroupController.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":439,"title":{},"body":{"injectables/CoaService.html":{}}}],["tambien",{"_index":302,"title":{},"body":{"injectables/CoaService.html":{}}}],["tbla",{"_index":1840,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["tecnología",{"_index":1084,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["tener",{"_index":978,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["tenga",{"_index":693,"title":{},"body":{"injectables/NasService.html":{}}}],["teniendo",{"_index":1175,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["terminal",{"_index":331,"title":{},"body":{"injectables/CoaService.html":{}}}],["test",{"_index":2181,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2184,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2183,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2180,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2190,"title":{},"body":{"index.html":{}}}],["then((res",{"_index":1455,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["this.allonsys(id",{"_index":1644,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.coa_cmd(echocommand",{"_index":461,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.coa_status(res",{"_index":465,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.coaservice.activateuser(username",{"_index":241,"title":{},"body":{"controllers/CoaController.html":{}}}],["this.coaservice.changeplan(data",{"_index":243,"title":{},"body":{"controllers/CoaController.html":{}}}],["this.coaservice.modify(data",{"_index":245,"title":{},"body":{"controllers/CoaController.html":{}}}],["this.coaservice.suspenduser(username",{"_index":239,"title":{},"body":{"controllers/CoaController.html":{}}}],["this.coaservices.activateuser(o.username",{"_index":1503,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.coaservices.changeplan({username:o.username,newgroupname:'cancelado",{"_index":1499,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.coaservices.changeplan({username:o.username,newgroupname:plan.listname",{"_index":1507,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.coaservices.suspenduser(o.username",{"_index":1495,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.configservice.get('acl_suspension",{"_index":488,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.configservice.get('url_suspension",{"_index":485,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.nasrepository.create",{"_index":717,"title":{},"body":{"injectables/NasService.html":{}}}],["this.nasrepository.find",{"_index":434,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{}}}],["this.nasrepository.findby",{"_index":702,"title":{},"body":{"injectables/NasService.html":{}}}],["this.nasrepository.findoneby",{"_index":2070,"title":{},"body":{"injectables/ZoneService.html":{}}}],["this.nasrepository.save(newnas",{"_index":727,"title":{},"body":{"injectables/NasService.html":{}}}],["this.nasservice.createnas(data",{"_index":635,"title":{},"body":{"controllers/NasController.html":{}}}],["this.nasservice.findallnas",{"_index":636,"title":{},"body":{"controllers/NasController.html":{}}}],["this.nasservice.findbyid(id",{"_index":638,"title":{},"body":{"controllers/NasController.html":{}}}],["this.nasservice.updatenas(id",{"_index":640,"title":{},"body":{"controllers/NasController.html":{}}}],["this.noderepository.create",{"_index":827,"title":{},"body":{"injectables/NodesService.html":{}}}],["this.noderepository.find",{"_index":835,"title":{},"body":{"injectables/NodesService.html":{}}}],["this.noderepository.findoneby",{"_index":824,"title":{},"body":{"injectables/NodesService.html":{}}}],["this.noderepository.save(nodenew",{"_index":829,"title":{},"body":{"injectables/NodesService.html":{}}}],["this.nodesrepository.findone({where:{name:node",{"_index":1461,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.nodesservice.createnodo(data",{"_index":786,"title":{},"body":{"controllers/NodesController.html":{}}}],["this.nodesservice.findallnodes",{"_index":787,"title":{},"body":{"controllers/NodesController.html":{}}}],["this.nodesservice.findonenode(id",{"_index":789,"title":{},"body":{"controllers/NodesController.html":{}}}],["this.nodesservice.removenode(id",{"_index":793,"title":{},"body":{"controllers/NodesController.html":{}}}],["this.nodesservice.updatenode(id",{"_index":791,"title":{},"body":{"controllers/NodesController.html":{}}}],["this.planrepository.create",{"_index":945,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.planrepository.delete(id",{"_index":957,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.planrepository.find",{"_index":940,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.planrepository.save(plannew",{"_index":947,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.planrepository.update(id",{"_index":952,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.planservice.createplan(data",{"_index":905,"title":{},"body":{"controllers/PlanController.html":{}}}],["this.planservice.findallplans",{"_index":906,"title":{},"body":{"controllers/PlanController.html":{}}}],["this.planservice.findoneplan(id",{"_index":908,"title":{},"body":{"controllers/PlanController.html":{}}}],["this.planservice.removeplan(id",{"_index":912,"title":{},"body":{"controllers/PlanController.html":{}}}],["this.planservice.updateplan(id",{"_index":910,"title":{},"body":{"controllers/PlanController.html":{}}}],["this.plansrepository.findone({where:{name:compserv['plan_internet']['nombre",{"_index":1504,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.radacctrepository.findoneby",{"_index":426,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.radcheckrepository.create",{"_index":1931,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radcheckrepository.find",{"_index":1155,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["this.radcheckrepository.findoneby({username",{"_index":1916,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radcheckrepository.save(isradcheck",{"_index":1923,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radcheckrepository.save(rad",{"_index":1164,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["this.radcheckrepository.save(radcheckcreate",{"_index":1934,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radcheckservice.createradcheck(data",{"_index":1119,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["this.radcheckservice.getallradcheck",{"_index":1116,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["this.radcheckservice.getbyid(id",{"_index":1117,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["this.radcheckservice.updateradcheck(id",{"_index":1121,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["this.radgroupreply.findoneby",{"_index":1849,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radgrouprepository.findby",{"_index":511,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.radusergroup.create",{"_index":1291,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["this.radusergroup.find",{"_index":1298,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["this.radusergroup.findoneby",{"_index":1289,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["this.radusergroup.save(newusergroup",{"_index":1293,"title":{},"body":{"injectables/RadusergroupService.html":{}}}],["this.radusergrouprepository.create",{"_index":1965,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radusergrouprepository.find({where:{username:o.username",{"_index":1478,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.radusergrouprepository.find({where:{username:o.username,priority:0",{"_index":1474,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.radusergrouprepository.findby",{"_index":1939,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radusergrouprepository.findone({where:{username:o.username,groupname:'cancelado",{"_index":1497,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.radusergrouprepository.findone({where:{username:o.username,priority:0",{"_index":1493,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.radusergrouprepository.save(isradduser",{"_index":1958,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radusergrouprepository.save(usergroup",{"_index":1966,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.radusergroupservice.createradusergroup(data",{"_index":1246,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["this.radusergroupservice.deleteusergroup(data",{"_index":1255,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["this.radusergroupservice.getallusergroups",{"_index":1244,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["this.radusergroupservice.getusergroupbyid(data",{"_index":1248,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["this.radusergroupservice.updateusergroup(data",{"_index":1252,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["this.servicesrepository.create",{"_index":1430,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.delete(id",{"_index":1536,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.find",{"_index":1436,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.findone",{"_index":1439,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.findone({where:{radiusid:o.id},relations:['sys','plan",{"_index":1482,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.findoneby",{"_index":1526,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.save(servicenew",{"_index":1434,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servicesrepository.save(servicetoupdate",{"_index":1533,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.servservice.createservice(data",{"_index":1361,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.findallservices",{"_index":1362,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.findoneonsys(id",{"_index":1368,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.findonservice(id",{"_index":1366,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.removeservice(id",{"_index":1373,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.syncservice(node",{"_index":1364,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servservice.updateservice(id",{"_index":1371,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.sysrepository.create",{"_index":1627,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.sysrepository.delete(id",{"_index":1653,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.sysrepository.find",{"_index":1624,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.sysrepository.findoneby",{"_index":1633,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.sysrepository.save(systnew",{"_index":1629,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.sysservice.allonsys(id",{"_index":1587,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.createsys(data",{"_index":1579,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.findallsys",{"_index":1580,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.findonesys(id",{"_index":1581,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.removesys(id",{"_index":1588,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.sysnode(id",{"_index":1585,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservice.updatesys(id",{"_index":1582,"title":{},"body":{"controllers/SystemsController.html":{}}}],["this.sysservices.sysnode(i.id,node",{"_index":1472,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.systems.push(sys",{"_index":1621,"title":{},"body":{"injectables/SystemsService.html":{}}}],["this.updateservice(userservice.id,{sys:userservice.sys,clientid:userservice.id,radiusid:userservice.radiusid,status:userservice.status,plan:{id:plan.id,name:plan.name,listname:plan.listname",{"_index":1506,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.updateservice(userservice.id,{sys:userservice.sys,status:1,clientid:userservice.clientid,plan:userservice.plan,radiusid:userservice.radiusid",{"_index":1502,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.updateservice(userservice.id,{sys:userservice.sys,status:2,clientid:userservice.clientid,plan:userservice.plan,radiusid:userservice.radiusid",{"_index":1494,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.updateservice(userservice.id,{sys:userservice.sys,status:3,clientid:userservice.clientid,plan:userservice.plan,radiusid:userservice.radiusid",{"_index":1498,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.usergroupservice.createradusergroup(data",{"_index":503,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.usergroupservice.deleteusergroup",{"_index":472,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.usergroupservice.updateusergroup(data",{"_index":515,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.userinfo.findoneby",{"_index":414,"title":{},"body":{"injectables/CoaService.html":{}}}],["this.userinforepository.find({where:{address:node",{"_index":1465,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.userinfoservice.createuser(data",{"_index":1796,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["this.userinfoservice.deletebyusername(username",{"_index":1803,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["this.userinfoservice.findallusers",{"_index":1797,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["this.userinfoservice.findbyid(id",{"_index":1799,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["this.userinfoservice.updateuserinfo(id",{"_index":1801,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["this.usersrepository.create",{"_index":1864,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.usersrepository.find",{"_index":1972,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.usersrepository.findoneby",{"_index":1854,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.usersrepository.save(newuser",{"_index":1909,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.zonerepository.create",{"_index":2075,"title":{},"body":{"injectables/ZoneService.html":{}}}],["this.zonerepository.find",{"_index":2081,"title":{},"body":{"injectables/ZoneService.html":{}}}],["this.zonerepository.findby",{"_index":2072,"title":{},"body":{"injectables/ZoneService.html":{}}}],["this.zonerepository.save(newzone",{"_index":2078,"title":{},"body":{"injectables/ZoneService.html":{}}}],["this.zoneservice.createzone(data",{"_index":2033,"title":{},"body":{"controllers/ZoneController.html":{}}}],["this.zoneservice.findallzones",{"_index":2034,"title":{},"body":{"controllers/ZoneController.html":{}}}],["this.zoneservice.findbyid(id",{"_index":2035,"title":{},"body":{"controllers/ZoneController.html":{}}}],["this.zoneservice.updatezone(id",{"_index":2037,"title":{},"body":{"controllers/ZoneController.html":{}}}],["throw",{"_index":399,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["tiempo",{"_index":1190,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["tiene",{"_index":1236,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["timestamp",{"_index":1049,"title":{},"body":{"entities/Radacct.html":{},"entities/UserInfo.html":{}}}],["tipo",{"_index":1083,"title":{},"body":{"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{}}}],["tlf",{"_index":2003,"title":{},"body":{"entities/Zone.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{}}}],["tlg",{"_index":2068,"title":{},"body":{"injectables/ZoneService.html":{}}}],["toda",{"_index":1143,"title":{},"body":{"injectables/RadcheckService.html":{},"injectables/ServicesService.html":{},"injectables/UserInfoService.html":{}}}],["todas",{"_index":686,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["todo",{"_index":407,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/SystemsController.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["todos",{"_index":305,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NasController.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["toma",{"_index":298,"title":{},"body":{"injectables/CoaService.html":{}}}],["touch",{"_index":2202,"title":{},"body":{"index.html":{}}}],["trae",{"_index":886,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["traer",{"_index":2062,"title":{},"body":{"injectables/ZoneService.html":{}}}],["transformer",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["trata",{"_index":1321,"title":{},"body":{"controllers/ServicesController.html":{}}}],["traves",{"_index":1841,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["travez",{"_index":272,"title":{},"body":{"modules/CoaModule.html":{}}}],["tres",{"_index":1780,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["true",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"entities/Nas.html":{},"entities/Plan.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["try",{"_index":381,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["twitter",{"_index":2208,"title":{},"body":{"index.html":{}}}],["type",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"entities/Nas.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["typeof",{"_index":401,"title":{},"body":{"injectables/CoaService.html":{}}}],["typeorm",{"_index":368,"title":{},"body":{"injectables/CoaService.html":{},"entities/Nas.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"entities/Plan.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"injectables/SystemsService.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{},"injectables/ZoneService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{}}}],["typeormmodule.forfeature",{"_index":282,"title":{},"body":{"modules/CoaModule.html":{},"modules/ServicesModule.html":{}}}],["typeormmodule.forfeature([plan",{"_index":920,"title":{},"body":{"modules/PlanModule.html":{}}}],["typeormmodule.forfeature([radcheck",{"_index":1127,"title":{},"body":{"modules/RadcheckModule.html":{}}}],["typeormmodule.forfeature([radusergroup",{"_index":1262,"title":{},"body":{"modules/RadusergroupModule.html":{}}}],["typeormmodule.forfeature([system",{"_index":799,"title":{},"body":{"modules/NodesModule.html":{}}}],["typeormmodule.forfeature([userinfo",{"_index":676,"title":{},"body":{"modules/NasModule.html":{},"modules/UserInfoModule.html":{}}}],["typeormmodule.forfeature([zonacliente",{"_index":1595,"title":{},"body":{"modules/SystemsModule.html":{}}}],["typeormmodule.forfeature([zone",{"_index":2051,"title":{},"body":{"modules/ZoneModule.html":{}}}],["typeormmodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":541,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSystemDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1443,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"index.html":{}}}],["u",{"_index":1485,"title":{},"body":{"injectables/ServicesService.html":{}}}],["u['id_servicio",{"_index":1486,"title":{},"body":{"injectables/ServicesService.html":{}}}],["ubícalo",{"_index":1488,"title":{},"body":{"injectables/ServicesService.html":{}}}],["ultimo",{"_index":1711,"title":{},"body":{"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["un",{"_index":172,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["una",{"_index":442,"title":{},"body":{"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["unaentrada",{"_index":2027,"title":{},"body":{"controllers/ZoneController.html":{}}}],["unico",{"_index":1184,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["unique",{"_index":581,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/Radacct.html":{},"entities/Service.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["unique:false",{"_index":1076,"title":{},"body":{"entities/Radacct.html":{}}}],["unit",{"_index":2179,"title":{},"body":{"index.html":{}}}],["unix",{"_index":332,"title":{},"body":{"injectables/CoaService.html":{}}}],["unknown",{"_index":203,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"controllers/NodesController.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["unlicensed",{"_index":2218,"title":{},"body":{"properties.html":{}}}],["uno",{"_index":1226,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{}}}],["unused",{"_index":1636,"title":{},"body":{"injectables/SystemsService.html":{}}}],["update",{"_index":691,"title":{},"body":{"injectables/NasService.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UserDto.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"injectables/ZoneService.html":{}}}],["update(@param('id",{"_index":1370,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["update(id",{"_index":1344,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/SystemsController.html":{}}}],["updateby",{"_index":1680,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["updatedate",{"_index":1724,"title":{},"body":{"entities/UserInfo.html":{},"injectables/UserInfoService.html":{}}}],["updatenas",{"_index":613,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{}}}],["updatenas(@param('id",{"_index":639,"title":{},"body":{"controllers/NasController.html":{}}}],["updatenas(id",{"_index":623,"title":{},"body":{"controllers/NasController.html":{},"injectables/NasService.html":{}}}],["updatenode",{"_index":760,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["updatenode(@param('id",{"_index":790,"title":{},"body":{"controllers/NodesController.html":{}}}],["updatenode(id",{"_index":772,"title":{},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{}}}],["updatenodedto",{"_index":773,"title":{"classes/UpdateNodeDto.html":{}},"body":{"controllers/NodesController.html":{},"injectables/NodesService.html":{},"classes/UpdateNodeDto.html":{},"coverage.html":{}}}],["updateplan",{"_index":876,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["updateplan(@param('id",{"_index":909,"title":{},"body":{"controllers/PlanController.html":{}}}],["updateplan(id",{"_index":894,"title":{},"body":{"controllers/PlanController.html":{},"injectables/PlanService.html":{}}}],["updateplandto",{"_index":542,"title":{"classes/UpdatePlanDto.html":{}},"body":{"classes/CreatePlanDto.html":{},"controllers/PlanController.html":{},"injectables/PlanService.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["updaterad",{"_index":1163,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["updaterad.username",{"_index":1167,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["updateradcheck",{"_index":1089,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["updateradcheck(@param('id",{"_index":1120,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["updateradcheck(id",{"_index":1110,"title":{},"body":{"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{}}}],["updateservdto",{"_index":1369,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["updateservice",{"_index":1389,"title":{},"body":{"injectables/ServicesService.html":{}}}],["updateservice(id",{"_index":1420,"title":{},"body":{"injectables/ServicesService.html":{}}}],["updateservicedto",{"_index":1345,"title":{"classes/UpdateServiceDto.html":{}},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["updatesys",{"_index":1601,"title":{},"body":{"injectables/SystemsService.html":{}}}],["updatesys(id",{"_index":1618,"title":{},"body":{"injectables/SystemsService.html":{}}}],["updatesysdto",{"_index":1568,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{}}}],["updatesystemdto",{"_index":1569,"title":{"classes/UpdateSystemDto.html":{}},"body":{"controllers/SystemsController.html":{},"injectables/SystemsService.html":{},"classes/UpdateSystemDto.html":{},"coverage.html":{}}}],["updateusergroup",{"_index":1204,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["updateusergroup(@body",{"_index":1251,"title":{},"body":{"controllers/RadusergroupController.html":{}}}],["updateusergroup(data",{"_index":1229,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["updateuserinfo",{"_index":1762,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["updateuserinfo(@param('id",{"_index":1800,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["updateuserinfo(id",{"_index":1787,"title":{},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{}}}],["updatezone",{"_index":2018,"title":{},"body":{"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["updatezone(@param('id",{"_index":2036,"title":{},"body":{"controllers/ZoneController.html":{}}}],["updatezone(id",{"_index":2025,"title":{},"body":{"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["url='${url_suspension}',filter",{"_index":494,"title":{},"body":{"injectables/CoaService.html":{}}}],["url_suspension",{"_index":484,"title":{},"body":{"injectables/CoaService.html":{}}}],["url_suspension}\\nacl",{"_index":490,"title":{},"body":{"injectables/CoaService.html":{}}}],["urxlgocl8gt5k",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["usa",{"_index":1234,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{}}}],["usadas",{"_index":1830,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usados",{"_index":1768,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["usando",{"_index":2066,"title":{},"body":{"injectables/ZoneService.html":{}}}],["usar",{"_index":668,"title":{},"body":{"modules/NasModule.html":{}}}],["user",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/CoaService.html":{},"injectables/RadcheckService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{}}}],["user.message",{"_index":1969,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["userdto",{"_index":1664,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["userentity",{"_index":1772,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["usergrooupactulized",{"_index":1957,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usergroup",{"_index":502,"title":{},"body":{"injectables/CoaService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{}}}],["usergroupservice",{"_index":294,"title":{},"body":{"injectables/CoaService.html":{}}}],["userinfo",{"_index":91,"title":{"entities/UserInfo.html":{}},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"injectables/CoaService.html":{},"modules/NasModule.html":{},"injectables/RadcheckService.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["userinfo.id",{"_index":1481,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userinfocontroller",{"_index":1749,"title":{"controllers/UserInfoController.html":{}},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"coverage.html":{}}}],["userinfomodule",{"_index":48,"title":{"modules/UserInfoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserInfoModule.html":{},"modules.html":{},"overview.html":{}}}],["userinfonodes",{"_index":1464,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userinfonodes.foreach(async",{"_index":1473,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userinfonodes.length",{"_index":1467,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userinforepository",{"_index":1391,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userinfoservice",{"_index":1790,"title":{"injectables/UserInfoService.html":{}},"body":{"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/ChangePlanDto.html":{},"controllers/CoaController.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"injectables/NasService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadUserGroup.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"entities/Radacct.html":{},"controllers/RadcheckController.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"entities/UserInfo.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["username/onu",{"_index":1858,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["username:${username",{"_index":427,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["username}.\\n",{"_index":1926,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["username}.\\nfecha",{"_index":411,"title":{},"body":{"injectables/CoaService.html":{}}}],["users",{"_index":1971,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["users?.length",{"_index":1973,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["userservice",{"_index":1483,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userservice.clientid",{"_index":1487,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userservice.status",{"_index":1501,"title":{},"body":{"injectables/ServicesService.html":{}}}],["userservice['plan']['id",{"_index":1505,"title":{},"body":{"injectables/ServicesService.html":{}}}],["usersrepository",{"_index":1812,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["userupdatedto",{"_index":1788,"title":{"classes/UserUpdateDto.html":{}},"body":{"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{},"coverage.html":{}}}],["uso",{"_index":174,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"classes/UserDto.html":{},"controllers/ZoneController.html":{},"injectables/ZoneService.html":{}}}],["usuario",{"_index":208,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"classes/UserDto.html":{},"controllers/UserInfoController.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["usuario.\\n",{"_index":1860,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usuario.\\nfecha",{"_index":1846,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usuario/onu",{"_index":1852,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usuarios",{"_index":199,"title":{},"body":{"controllers/CoaController.html":{},"modules/CoaModule.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{}}}],["usuarios.\\nfecha",{"_index":1970,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["util",{"_index":372,"title":{},"body":{"injectables/CoaService.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{}}}],["utilizados",{"_index":1766,"title":{},"body":{"controllers/UserInfoController.html":{}}}],["va",{"_index":1231,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{}}}],["vacios",{"_index":507,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NodesService.html":{},"controllers/ServicesController.html":{}}}],["vacios.\\n",{"_index":1520,"title":{},"body":{"injectables/ServicesService.html":{}}}],["vacíos",{"_index":1571,"title":{},"body":{"controllers/SystemsController.html":{},"injectables/UserInfoService.html":{}}}],["validator",{"_index":162,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"classes/CreateNodeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSystemDto.html":{},"classes/NasDto.html":{},"classes/NasDtoUpdate.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"classes/RadUserGroupDto.html":{},"classes/RadUserGroupUpdateDto.html":{},"classes/UpdateNodeDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{},"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{},"dependencies.html":{}}}],["valido",{"_index":2069,"title":{},"body":{"injectables/ZoneService.html":{}}}],["valor",{"_index":976,"title":{},"body":{"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"injectables/RadcheckService.html":{},"injectables/RadusergroupService.html":{}}}],["valores",{"_index":710,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"controllers/RadusergroupController.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"injectables/ZoneService.html":{}}}],["value",{"_index":166,"title":{},"body":{"classes/ChangePlanDto.html":{},"classes/CoaDto.html":{},"injectables/CoaService.html":{},"injectables/PlanService.html":{},"entities/RadCheck.html":{},"classes/RadCheckDto.html":{},"classes/RadCheckUpdateDto.html":{},"entities/RadGroupReply.html":{},"injectables/RadcheckService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":1445,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/SystemsService.html":{}}}],["varchar",{"_index":578,"title":{},"body":{"entities/Nas.html":{},"entities/Plan.html":{},"entities/RadCheck.html":{},"entities/RadGroupReply.html":{},"entities/RadUserGroup.html":{},"entities/Radacct.html":{},"entities/System.html":{},"entities/UserInfo.html":{},"entities/ZonaCliente.html":{},"entities/Zone.html":{}}}],["varchar(200",{"_index":860,"title":{},"body":{"entities/Plan.html":{}}}],["variable",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2219,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varias",{"_index":367,"title":{},"body":{"injectables/CoaService.html":{},"injectables/UserInfoService.html":{}}}],["varios",{"_index":1101,"title":{},"body":{"controllers/RadcheckController.html":{}}}],["vars",{"_index":1637,"title":{},"body":{"injectables/SystemsService.html":{}}}],["vaya",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["vayan",{"_index":667,"title":{},"body":{"modules/NasModule.html":{}}}],["veces",{"_index":1194,"title":{},"body":{"controllers/RadusergroupController.html":{},"injectables/UserInfoService.html":{}}}],["venezuela",{"_index":1729,"title":{},"body":{"entities/UserInfo.html":{},"injectables/UserInfoService.html":{}}}],["ver",{"_index":221,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"controllers/NasController.html":{},"injectables/NasService.html":{},"controllers/RadusergroupController.html":{},"modules/RadusergroupModule.html":{},"injectables/RadusergroupService.html":{},"injectables/ServicesService.html":{},"controllers/UserInfoController.html":{}}}],["verefica",{"_index":337,"title":{},"body":{"injectables/CoaService.html":{}}}],["verifica",{"_index":325,"title":{},"body":{"injectables/CoaService.html":{},"injectables/NasService.html":{},"injectables/PlanService.html":{},"injectables/RadusergroupService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["verificacion",{"_index":938,"title":{},"body":{"injectables/PlanService.html":{},"injectables/ServicesService.html":{}}}],["verificación",{"_index":1432,"title":{},"body":{"injectables/ServicesService.html":{}}}],["verificando",{"_index":1165,"title":{},"body":{"injectables/RadcheckService.html":{}}}],["verificar",{"_index":508,"title":{},"body":{"injectables/CoaService.html":{}}}],["version",{"_index":2216,"title":{},"body":{"properties.html":{}}}],["viene",{"_index":210,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{}}}],["visible",{"_index":863,"title":{},"body":{"entities/Plan.html":{}}}],["vivo",{"_index":359,"title":{},"body":{"injectables/CoaService.html":{}}}],["vrea",{"_index":807,"title":{},"body":{"injectables/NodesService.html":{}}}],["watch",{"_index":2174,"title":{},"body":{"index.html":{}}}],["website",{"_index":2206,"title":{},"body":{"index.html":{}}}],["wisphub",{"_index":1322,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UserDto.html":{},"classes/UserUpdateDto.html":{}}}],["workphone",{"_index":1681,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["world",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":457,"title":{},"body":{"injectables/CoaService.html":{}}}],["y",{"_index":215,"title":{},"body":{"controllers/CoaController.html":{},"injectables/CoaService.html":{},"injectables/NodesService.html":{},"controllers/PlanController.html":{},"modules/PlanModule.html":{},"injectables/PlanService.html":{},"controllers/RadcheckController.html":{},"modules/RadcheckModule.html":{},"injectables/RadcheckService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"injectables/SystemsService.html":{},"controllers/UserInfoController.html":{},"modules/UserInfoModule.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["ya",{"_index":698,"title":{},"body":{"injectables/NasService.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"injectables/PlanService.html":{},"controllers/RadusergroupController.html":{},"injectables/RadusergroupService.html":{},"injectables/SystemsService.html":{},"injectables/UserInfoService.html":{},"injectables/ZoneService.html":{}}}],["you'd",{"_index":2195,"title":{},"body":{"index.html":{}}}],["zh49cups8sqmvpgx",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["zip",{"_index":1682,"title":{},"body":{"classes/UserDto.html":{},"entities/UserInfo.html":{},"injectables/UserInfoService.html":{},"classes/UserUpdateDto.html":{}}}],["zona",{"_index":825,"title":{},"body":{"injectables/NodesService.html":{},"injectables/ZoneService.html":{}}}],["zonacliente",{"_index":93,"title":{"entities/ZonaCliente.html":{}},"body":{"modules/AppModule.html":{},"controllers/NodesController.html":{},"modules/NodesModule.html":{},"injectables/NodesService.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/System.html":{},"modules/SystemsModule.html":{},"entities/ZonaCliente.html":{},"coverage.html":{}}}],["zonacliente/nodo",{"_index":821,"title":{},"body":{"injectables/NodesService.html":{}}}],["zonaclientes",{"_index":749,"title":{},"body":{"controllers/NodesController.html":{},"modules/NodesModule.html":{}}}],["zonaclientes/nodos.\\nfecha",{"_index":833,"title":{},"body":{"injectables/NodesService.html":{}}}],["zonas",{"_index":2014,"title":{},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{}}}],["zonasnodos",{"_index":834,"title":{},"body":{"injectables/NodesService.html":{}}}],["zonasnodos?.length",{"_index":837,"title":{},"body":{"injectables/NodesService.html":{}}}],["zone",{"_index":95,"title":{"entities/Zone.html":{}},"body":{"modules/AppModule.html":{},"modules/NasModule.html":{},"entities/Zone.html":{},"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"coverage.html":{}}}],["zone.controller",{"_index":2049,"title":{},"body":{"modules/ZoneModule.html":{}}}],["zone.service",{"_index":2029,"title":{},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{}}}],["zone/zone.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["zonecontroller",{"_index":2010,"title":{"controllers/ZoneController.html":{}},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"coverage.html":{}}}],["zonedto",{"_index":2020,"title":{"classes/ZoneDto.html":{}},"body":{"controllers/ZoneController.html":{},"classes/ZoneDto.html":{},"injectables/ZoneService.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["zonemodule",{"_index":49,"title":{"modules/ZoneModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZoneModule.html":{},"modules.html":{},"overview.html":{}}}],["zonerepository",{"_index":2056,"title":{},"body":{"injectables/ZoneService.html":{}}}],["zones",{"_index":2080,"title":{},"body":{"injectables/ZoneService.html":{}}}],["zones?.length",{"_index":2082,"title":{},"body":{"injectables/ZoneService.html":{}}}],["zoneservice",{"_index":2028,"title":{"injectables/ZoneService.html":{}},"body":{"controllers/ZoneController.html":{},"modules/ZoneModule.html":{},"injectables/ZoneService.html":{},"coverage.html":{},"overview.html":{}}}],["zoneupadatedto",{"_index":2045,"title":{"classes/ZoneUpadateDto.html":{}},"body":{"classes/ZoneDto.html":{},"classes/ZoneUpadateDto.html":{},"coverage.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CoaModule.html":{},"modules/NasModule.html":{},"modules/NodesModule.html":{},"modules/PlanModule.html":{},"modules/RadcheckModule.html":{},"modules/RadusergroupModule.html":{},"modules/ServicesModule.html":{},"modules/SystemsModule.html":{},"modules/UserInfoModule.html":{},"modules/ZoneModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoaModule\n\nCoaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoaModule->AppModule\n\n\n\n\n\nNasModule\n\nNasModule\n\nAppModule -->\n\nNasModule->AppModule\n\n\n\n\n\nNodesModule\n\nNodesModule\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\n\n\nPlanModule\n\nPlanModule\n\nAppModule -->\n\nPlanModule->AppModule\n\n\n\n\n\nRadcheckModule\n\nRadcheckModule\n\nAppModule -->\n\nRadcheckModule->AppModule\n\n\n\n\n\nRadusergroupModule\n\nRadusergroupModule\n\nAppModule -->\n\nRadusergroupModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nSystemsModule\n\nSystemsModule\n\nAppModule -->\n\nSystemsModule->AppModule\n\n\n\n\n\nUserInfoModule\n\nUserInfoModule\n\nAppModule -->\n\nUserInfoModule->AppModule\n\n\n\n\n\nZoneModule\n\nZoneModule\n\nAppModule -->\n\nZoneModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoaModule\n                        \n                        \n                            NasModule\n                        \n                        \n                            NodesModule\n                        \n                        \n                            NodesModule\n                        \n                        \n                            PlanModule\n                        \n                        \n                            RadcheckModule\n                        \n                        \n                            RadusergroupModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            SystemsModule\n                        \n                        \n                            UserInfoModule\n                        \n                        \n                            ZoneModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CoaModule } from './coa/coa.module';\n//* MODULOS *//\nimport { NasModule } from './nas/nas.module';\nimport { NodesModule } from './nodes/nodes.module';\nimport { PlanModule } from './plan/plan.module';\nimport { ServicesModule } from './services/services.module';\nimport { SystemsModule } from './systems/systems.module';\nimport { RadusergroupModule } from './radusergroup/radusergroup.module';\nimport { RadcheckModule } from './radcheck/radcheck.module';\nimport { UserInfoModule } from './user-info/user-info.module';\nimport { ZoneModule } from './zone/zone.module';\n//* ENTIDADES *//\nimport { Nas } from './database/nas.entity';\nimport { RadCheck } from './database/radcheck.entity';\nimport { Radacct } from './database/radacct.entity';\nimport { Plan } from './database/plan.entity';\nimport { Service } from './database/service.entity';\nimport { System } from './database/system.entity';\nimport { RadUserGroup } from './database/radusergroup.entity';\nimport { UserInfo } from './database/user.entity';\nimport { ZonaCliente } from './database/node.entity';\nimport { Zone } from './database/zone.entity';\nimport { RadGroupReply } from './database/radgroupreply.entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development', '.env'],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot({\n\n      type: 'mariadb',\n      host: 'localhost',\n      port: 3306,\n      // // username: 'radius',\n      username: 'root',\n      // // password: 'zh49cUPs8sQMvPgX',\n      password: '7448280',\n      database: 'radius',\n      // database: 'radius',\n\n      // type: 'mysql',\n      // host: 'netcomplus.com.ve',\n      // port: 3306,\n      // username: 'urxlgocl8gt5k',\n      // password: '24Nr^1$d##dg',\n      // database: 'db8tlaoegfxlwz',\n      entities: [\n        Nas,\n        Plan,\n        Radacct,\n        RadCheck,\n        RadGroupReply,\n        RadUserGroup,\n        Service,\n        System,\n        UserInfo,\n        ZonaCliente,\n        Zone,\n      ],\n      synchronize: false, // Setear en 'false' cuando vaya a produccion\n    }),\n    CoaModule,\n    NasModule,\n    NodesModule,\n    PlanModule,\n    RadusergroupModule,\n    RadcheckModule,\n    SystemsModule,\n    UserInfoModule,\n    ZoneModule,\n    ServicesModule,\n    NodesModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\n// eslint-disable-next-line prettier/prettier\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePlanDto.html":{"url":"classes/ChangePlanDto.html","title":"class - ChangePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/coa.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Dto creado para el metodo de cambio de plan en el coa.service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newgroupname\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newgroupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\n/**\n * Dto creado para el metodo de modificacion en el coa.service.\n */\nexport class CoaDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsIP()\n  attribute: string;\n\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n\n  /***********************************************************************\n   *                                                                     *\n   * CAMPOS OPCIONALES                                                   *\n   * Se dejan estos campos para un posible uso futuro                    *\n   *                                                                     *\n   ***********************************************************************/\n\n  @IsOptional()\n  @IsString()\n  secret: string;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  nasipaddress: string;\n}\n\n/**\n * Dto creado para el metodo de cambio de plan en el coa.service\n */\nexport class ChangePlanDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  newgroupname: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoaController.html":{"url":"controllers/CoaController.html","title":"controller - CoaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coa/coa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                coa\n            \n\n\n            \n                Description\n            \n            \n                Metodo de entrada a las rutas relacionada al CoA de Radius.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                activateUser\n                            \n                            \n                                    \n                                    Async\n                                changePlan\n                            \n                            \n                                    \n                                    Async\n                                modifyPlan\n                            \n                            \n                                    \n                                    Async\n                                suspendUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        activateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    activateUser(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate/:username')\n                \n            \n\n            \n                \n                    Defined in src/coa/coa.controller.ts:29\n                \n            \n\n\n            \n                \n                    Ruta para la activacion de usuarios.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        changePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePlan(data: ChangePlanDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-plan')\n                \n            \n\n            \n                \n                    Defined in src/coa/coa.controller.ts:40\n                \n            \n\n\n            \n                \n                    Ruta para cambio de plan del usuario.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        viene con dos string, username con nombre de la ONU y \"groupname\" con el nuevo plan.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        modifyPlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    modifyPlan(data: CoaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('modify-plan')\n                \n            \n\n            \n                \n                    Defined in src/coa/coa.controller.ts:50\n                \n            \n\n\n            \n                \n                    Ruta para cambio de plan del usuario.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CoaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ver CoaDto en la carpeta de Ddto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        suspendUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    suspendUser(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('suspend/:username')\n                \n            \n\n            \n                \n                    Defined in src/coa/coa.controller.ts:18\n                \n            \n\n\n            \n                \n                    Ruta para la suspencion de usuarios.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        llega por Param.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { CoaService } from './coa.service';\nimport { ChangePlanDto, CoaDto } from 'src/dto/coa.dto';\n\n/**\n * Metodo de entrada a las rutas relacionada al CoA de Radius.\n */\n@Controller('coa')\nexport class CoaController {\n  constructor(private readonly coaService: CoaService) {}\n\n  /**\n   * Ruta para la suspencion de usuarios.\n   * @param username { string } llega por Param.\n   * @returns { method } \n   */\n  @Get('suspend/:username')\n  async suspendUser(@Param('username') username: string) {\n    console.log('Username', username);\n    return this.coaService.SuspendUser(username);\n  }\n\n  /**\n   * Ruta para la activacion de usuarios.\n   * @param username \n   * @returns \n   */\n  @Get('activate/:username')\n  async activateUser(@Param('username') username: string) {\n    console.log('Username', username);\n    return this.coaService.ActivateUser(username);\n  }\n\n  /**\n   * Ruta para cambio de plan del usuario.\n   * @param data { ChangePlanDto } viene con dos string, username con nombre de la ONU y \"groupname\" con el nuevo plan.\n   * @returns \n   */\n  @Post('change-plan')\n  async changePlan(@Body() data: ChangePlanDto) {\n    return this.coaService.ChangePlan(data);\n  }\n\n    /**\n   * Ruta para cambio de plan del usuario.\n   * @param data { CoaDto } Ver CoaDto en la carpeta de Ddto. \n   * @returns \n   */\n  @Post('modify-plan')\n  async modifyPlan(@Body() data: CoaDto) {\n    return this.coaService.Modify(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoaDto.html":{"url":"classes/CoaDto.html","title":"class - CoaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/coa.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Dto creado para el metodo de modificacion en el coa.service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                nasipaddress\n                            \n                            \n                                    \n                                    \n                                secret\n                            \n                            \n                                    \n                                    \n                                server\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsIP()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nasipaddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:29\n                        \n                    \n\n            \n                \n                                                                                    *CAMPOS OPCIONALES                                                   *\nSe dejan estos campos para un posible uso futuro                    *\n                                                                    *\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/coa.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\n/**\n * Dto creado para el metodo de modificacion en el coa.service.\n */\nexport class CoaDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsIP()\n  attribute: string;\n\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n\n  /***********************************************************************\n   *                                                                     *\n   * CAMPOS OPCIONALES                                                   *\n   * Se dejan estos campos para un posible uso futuro                    *\n   *                                                                     *\n   ***********************************************************************/\n\n  @IsOptional()\n  @IsString()\n  secret: string;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  nasipaddress: string;\n}\n\n/**\n * Dto creado para el metodo de cambio de plan en el coa.service\n */\nexport class ChangePlanDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  newgroupname: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoaModule.html":{"url":"modules/CoaModule.html","title":"module - CoaModule","body":"\n                   \n\n\n\n\n    Modules\n    CoaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoaModule\n\n\n\ncluster_CoaModule_exports\n\n\n\ncluster_CoaModule_providers\n\n\n\n\nCoaService \n\nCoaService \n\n\n\nCoaModule\n\nCoaModule\n\nCoaService  -->\n\nCoaModule->CoaService \n\n\n\n\n\nCoaService\n\nCoaService\n\nCoaModule -->\n\nCoaService->CoaModule\n\n\n\n\n\nRadusergroupService\n\nRadusergroupService\n\nCoaModule -->\n\nRadusergroupService->CoaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/coa/coa.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo principal de la ruta 'coa'.\nLos CoA son los comandos que permiten modificar ciertos parametros de los usuarios que acceden a los servicios de conexion a travez del servidor de Radius.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoaService\n                        \n                        \n                            RadusergroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoaController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { CoaService } from './coa.service';\nimport { CoaController } from './coa.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserInfo } from 'src/database/user.entity';\nimport { Radacct } from 'src/database/radacct.entity';\nimport { Nas } from 'src/database/nas.entity';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport { RadusergroupService } from 'src/radusergroup/radusergroup.service';\nimport { RadGroupReply } from 'src/database/radgroupreply.entity';\n\n/**\n * Modulo principal de la ruta 'coa'.\n * Los CoA son los comandos que permiten modificar ciertos parametros de los usuarios que acceden a los servicios de conexion a travez del servidor de Radius.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Nas,\n      Radacct,\n      RadGroupReply,\n      RadUserGroup,\n      UserInfo,\n    ]),\n  ],\n  providers: [CoaService, RadusergroupService, ConfigService],\n  controllers: [CoaController],\n  exports: [CoaService]\n})\nexport class CoaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoaService.html":{"url":"injectables/CoaService.html","title":"injectable - CoaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coa/coa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ActivateUser\n                            \n                            \n                                    Async\n                                ChangePlan\n                            \n                            \n                                    Async\n                                CoA_cmd\n                            \n                            \n                                CoA_Status\n                            \n                            \n                                echoComand\n                            \n                            \n                                    Async\n                                Modify\n                            \n                            \n                                    Async\n                                SuspendUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfo: Repository, radacctRepository: Repository, nasRepository: Repository, radGroupRepository: Repository, userGroupService: RadusergroupService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/coa/coa.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radacctRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nasRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radGroupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupService\n                                                  \n                                                        \n                                                                        RadusergroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ActivateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    ActivateUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:107\n                \n            \n\n\n            \n                \n                    para activar el usuario en radius, se toma el username de la ONU asignada y se busca en la BD, tambien el \"nasipaddress\" y su \"secret\".\nSi todos los aprametros son encontrados se ejecuta el CoA.\nSi el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\nSi en algun momento algo falla se retorna un msj de error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Queda pendiente la respuesta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ChangePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangePlan(data: ChangePlanDto)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:394\n                \n            \n\n\n            \n                \n                    Se verifica la existencia del usuario, se busca su \"nasipaddress\" y \"secret\".\nSi todos los parametros son encontrados se ejecuta el CoA.\nSi el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\nSi en algun momento algo falla se retorna un msj de error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        viene con dos string, username con nombre de la ONU y \"groupname\" con el nuevo plan.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Queda pendiente la respuesta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CoA_cmd\n                        \n                    \n                \n            \n            \n                \n                    \n                    CoA_cmd(echoCommand: string, radClientCommand: string)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:42\n                \n            \n\n\n            \n                \n                    Inserta los comandos a la terminal unix.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    echoCommand\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    radClientCommand\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CoA_Status\n                        \n                    \n                \n            \n            \n                \nCoA_Status(response: string)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:75\n                \n            \n\n\n            \n                \n                    Verefica que el comando se haya ejecutado exitosamente.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Toma la Respuesta del CoA y evalua si fue exitosa.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        echoComand\n                        \n                    \n                \n            \n            \n                \nechoComand(data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Modify\n                        \n                    \n                \n            \n            \n                \n                    \n                    Modify(data: CoaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:595\n                \n            \n\n\n            \n                \n                    Metodo para uso interno de la API, y su objetivo  es permitir enviar un mensaje CoA a un NAS para modificar  parámetros de un servicio, en vivo.\nSe verifica la existencia del usuario, se busca su \"nasipaddress\" y \"secret\".\nSi todos los parametros son encontrados se ejecuta el CoA.\nSi el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\nSi en algun momento algo falla se retorna un msj de error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CoaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ver CoaDto en la carpeta de Ddto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Queda pendiente la respuesta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        SuspendUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    SuspendUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/coa/coa.service.ts:241\n                \n            \n\n\n            \n                \n                    Para Suspender el usuario en radius, se toma el username de la ONU asignada y se busca en la BD, tambien el \"nasipaddress\" y su \"secret\".\nSi todos los aprametros son encontrados se ejecuta el CoA.\nSi el CoA es exitoso se agrega  al grupo de suspendidos de \"radusergroup\".\nSi en algun momento algo falla se retorna un msj de error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Queda pendiente la respuesta\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config'\n//* IMPORTACIONES VARIAS *//\nimport { Repository } from 'typeorm';\nimport { exec } from 'child_process';\nimport { promisify } from 'util';\nimport { RadusergroupService } from 'src/radusergroup/radusergroup.service';\nimport { ChangePlanDto, CoaDto } from 'src/dto/coa.dto';\n//* ENTIDADES *//\nimport { Nas } from 'src/database/nas.entity';\nimport { Radacct } from 'src/database/radacct.entity';\nimport { UserInfo } from 'src/database/user.entity';\nimport { RadGroupReply } from 'src/database/radgroupreply.entity';\n\n@Injectable()\nexport class CoaService {\n  constructor(\n    @InjectRepository(UserInfo)\n    private readonly userInfo: Repository,\n    @InjectRepository(Radacct)\n    private readonly radacctRepository: Repository,\n    @InjectRepository(Nas)\n    private readonly nasRepository: Repository,\n    @InjectRepository(RadGroupReply)\n    private readonly radGroupRepository: Repository,\n    private readonly userGroupService: RadusergroupService,\n    private configService: ConfigService\n    ) {}\n    \n    ////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Inserta los comandos a la terminal unix.\n   * @param echoCommand {string}\n   * @param radClientCommand {string}\n   * @returns { string }\n   */\n  async CoA_cmd(\n    echoCommand: string,\n    radClientCommand: string,\n  ): Promise {\n    const execAsync = promisify(exec);\n    try {\n      const { stdout } = await execAsync(\n        `${echoCommand} | ${radClientCommand}`,\n      );\n      console.log('Command output:', stdout);\n      return stdout;\n    } catch (error) {\n      // console.log(error);\n      // //console.error('Error executing the command:', error.message);\n      // console.log(\n      //   '------------------------------------------------------------------------------',\n      // );\n      if (error.stdout.includes('Session-Context-Not-Found')){\n        return \"CoA-ACK, El usuario no estaba activo\"\n      }\n      throw error;\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Verefica que el comando se haya ejecutado exitosamente.\n   * @param response {string} Toma la Respuesta del CoA y evalua si fue exitosa.\n   * @returns { boolean }\n   */\n  CoA_Status(response: string) {\n    if (!(typeof response === 'string')) return false; // Failsafe por si falla el coa\n    const str = response.toLowerCase();\n    return str.includes('coa-ack');\n  }\n  ////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////\n\n  echoComand(data: Array) {\n    let command = '';\n\n    for (const str of data ){\n      command +=`,${str.attribute}=${str.value}`\n    }\n\n    return command;\n  }\n  ////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * para activar el usuario en radius, se toma el username de la ONU asignada y se busca en la BD, tambien el \"nasipaddress\" y su \"secret\".\n   * Si todos los aprametros son encontrados se ejecuta el CoA.\n   * Si el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\n   * Si en algun momento algo falla se retorna un msj de error.\n   * \n   * @todo msj de error\n   * @param username { string }\n   * @returns Queda pendiente la respuesta\n   */\n  async ActivateUser(username: string) {\n    try {\n      const date = new Date();\n      console.log(`Activando al usuario ${username}.\\nFecha: ${date}\\n`);\n      const isUser = await this.userInfo.findOneBy({ username });\n      if (!isUser) {\n        const str = `No existe el username: ${username}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      //* Busqueda de Ip en radacct\n      console.log(`Buscando IP`);\n      const radacct = await this.radacctRepository.findOneBy({ username });\n      if (!radacct) {\n        const str = `El username:${username}, no pudo ser encontrado.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n      const ip_address = radacct.nasipaddress;\n\n      // Busqueda del secret\n      console.log(`Localizando Secret`);\n      const nas = await this.nasRepository.find({\n        where: [{ nasname: ip_address }],\n        order: { id: 'desc' },\n        take: 1,\n      });\n      if (!nas) {\n        const str = `No se encontro una dirección 'nas' asociada al username:${username} y su ip.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n      const secret = nas[0].secret;\n\n      //* Preparacion de los comandos para Radius.\n      const echoCommand = `echo \"User-Name='${username}',User-Name='${username}',NetElastic-Portal-Mode=0\"`;\n      const radClientCommand = `radclient -c '1' -n '3' -r '3' -t '3' -x '${ip_address}:3799' 'coa' '${secret}' 2>&1`;\n\n      console.log(`Activando`);\n      const res = await this.CoA_cmd(echoCommand, radClientCommand);\n      console.log('COA Response', res);\n\n      console.log(`Confirmando`);\n      const statusCoa = this.CoA_Status(res);\n\n      if (!statusCoa) {\n        return `El usuario ${username} no pudo ser activado`;\n      }\n\n       //borrar entrada de la tabla radusergroup\n      const data = { username, groupname: 'suspendido', priority: 1 };\n      const eliminateSuspend = await this.userGroupService.DeleteUserGroup(\n        data,\n      );\n\n      if (!eliminateSuspend) {\n        const str = `El usuario no pudo ser eliminado de la tabla radusergroup`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      const str = `El usuario \"${username} fue activado con exito\"`;\n      console.log(`${str}\\n------------------------------------------------\\n`);\n      return str;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Para Suspender el usuario en radius, se toma el username de la ONU asignada y se busca en la BD, tambien el \"nasipaddress\" y su \"secret\".\n   * Si todos los aprametros son encontrados se ejecuta el CoA.\n   * Si el CoA es exitoso se agrega  al grupo de suspendidos de \"radusergroup\".\n   * Si en algun momento algo falla se retorna un msj de error.\n   * \n   * @todo msj de error\n   * @param username { string }\n   * @returns Queda pendiente la respuesta\n   */\n  async SuspendUser(username: string) {\n    \n      //* Preparacion de comandos para Radius. *//\n    try {\n      /*\n       * Busqueda de usuario en BD.\n       */\n      const date = new Date();\n      console.log(`Suspendiendo al usuario ${username}.\\nFecha: ${date}\\n`);\n      const isUser = await this.userInfo.findOneBy({ username });\n      if (!isUser) {\n        const str = `No existe el username: ${username}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      /*\n       * Busqueda de Ip en radacct.\n       */\n      console.log(`Bucando IP`);\n      const radacct = await this.radacctRepository.findOneBy({ username });\n      if (!radacct) {\n        const str = `El username:${username}, no pudo ser encontrado en la tabla radacct.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n      const ip_address = radacct.nasipaddress;\n\n      //* Busqueda del secret es tabla nas. *//\n      const nas = await this.nasRepository.find({\n        where: [{ nasname: ip_address }],\n        order: { id: 'desc' },\n        take: 1,\n      });\n      if (!nas) {\n        const str = `No se encontró una direccion nas aosciada al username:${username} y su ip.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n      const secret = nas[0].secret;\n\n      const url_suspension = this.configService.get('URL_SUSPENSION') || 'http://10.10.20.7/avisodecorte';\n      const acl_suspension = this.configService.get('ACL_SUSPENSION') || 'suspendido';\n\n      console.log(`URL ${url_suspension}\\nACL ${acl_suspension}`)\n      //* Preparacion de comandos para Radius. *//\n      const echoCommand = `echo \"User-Name='${username}',User-Name='${username}',NetElastic-Portal-Mode=1,NetElastic-HTTP-Redirect-URL='${url_suspension}',Filter-Id='${acl_suspension}'\"`;\n      const radClientCommand = `radclient -c '1' -n '3' -r '3' -t '3' -x '${ip_address}:3799' 'coa' '${secret}' 2>&1`;\n\n      console.log(`Suspendiendo`);\n      const res = await this.CoA_cmd(echoCommand, radClientCommand);\n      console.log('COA Response', res);\n\n      /**\n       * Compara string recibido de la terminal Linux con string esperado.\n       * Retornal bool.\n       */\n      const statusCoa = this.CoA_Status(res);\n      if (!statusCoa) {\n        const str = `No se pudo suspender al usuario ${username}`;\n        console.log(`${str}\\n------------------------------------------------\\n`);\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      const data = { username, groupname: 'suspendido', priority: 1 };\n\n      const userGroup = await this.userGroupService.CreateRadUserGroup(data);\n      console.log(\"usergoup: \",userGroup);\n      if (!userGroup) {\n        const str = `No se pudo suspender al usuario ${username} en la tabla \"radusergroup\"`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n      return `El usuario ${username} fue suspendido exitosamente`;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n\n    /**\n   * Se verifica la existencia del usuario, se busca su \"nasipaddress\" y \"secret\".\n   * Si todos los parametros son encontrados se ejecuta el CoA.\n   * Si el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\n   * Si en algun momento algo falla se retorna un msj de error.\n   * \n   * @todo msj de error\n   * @param data { ChangePlanDto } viene con dos string, username con nombre de la ONU y \"groupname\" con el nuevo plan.\n   * @returns Queda pendiente la respuesta\n   */\n  async ChangePlan(data: ChangePlanDto) {\n    const { username, newgroupname } = data;\n    const date = new Date();\n    console.log(`Cambiando el plan al usuario: ${username}.\\nFecha: ${date}\\n`);\n    // Verifica que no hayan campos vacios.\n    try {\n      if (!username || !newgroupname) {\n        const str = `Verificar username: ${username} y newgroupname: ${newgroupname}.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.BAD_REQUEST,\n            error: str,\n          },\n          HttpStatus.BAD_REQUEST,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      /*\n       * Busqueda del value del plan en RadGroupRepository\n       */\n\n      const groupValue = await this.radGroupRepository.findBy({ groupname: newgroupname });\n      if(groupValue?.length &1`;\n\n      console.log(`Cambiando Plan`);\n      console.log(`CoA:\\n${echoCommand} | ${radClientCommand}`)\n      const res = await this.CoA_cmd(echoCommand, radClientCommand);\n      console.log('COA Response', res);\n\n      /**\n       * Compara string recibido de la terminal Linux con string esperado.\n       * Retornal bool.\n       */\n      const statusCoa = this.CoA_Status(res);\n      if (!statusCoa) {\n        const str = `No se pudo suspender al usuario ${username}`;\n        console.log(`${str}\\n------------------------------------------------\\n`);\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      const data = { username, groupname: newgroupname, priority: 10 };\n\n      const userGroup = this.userGroupService.UpdateUserGroup(data);\n      if (!userGroup) {\n        const str = `No se pudo cambiar el plan al usuario ${username} en la tabla \"radusergroup\"`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n      return `Se realizó el cambio de plan al usuario ${username} exitosamente`;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /** Metodo para uso interno de la API, y su objetivo  es permitir enviar un mensaje CoA a un NAS para modificar  parámetros de un servicio, en vivo.\n   * Se verifica la existencia del usuario, se busca su \"nasipaddress\" y \"secret\".\n   * Si todos los parametros son encontrados se ejecuta el CoA.\n   * Si el CoA es exitoso se elmina del grupo de suspendidos de \"radusergroup\".\n   * Si en algun momento algo falla se retorna un msj de error.\n   * \n   * @todo msj de error\n   * @param data { CoaDto } Ver CoaDto en la carpeta de Ddto. \n   * @returns Queda pendiente la respuesta\n   */\n  async Modify(data: CoaDto) {\n    try {\n      const { username, attribute, value } = data;\n      const date = new Date();\n      console.log(`Modificando al usuario ${username}.\\nFecha: ${date}\\n`);\n      const isUser = await this.userInfo.findOneBy({ username });\n      if (!isUser) {\n        const str = `No existe el username: ${username}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      /*\n       * Busqueda de Ip en radacct\n       */\n      console.log(`Bucando IP`);\n      const radacct = await this.radacctRepository.findOneBy({ username });\n      if (!radacct) {\n        const str = `El username:${username}, no pudo ser encontrado en la tabla radacct.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );\n      }\n      const ip_address = radacct.nasipaddress;\n\n      //* Busqueda del secret\n      const nas = await this.nasRepository.find({\n        where: [{ nasname: ip_address }],\n        order: { id: 'desc' },\n        take: 1,\n      });\n      console.log(nas);\n      if (!nas) {\n        const str = `No se encontró una direccion nas aosciada al username:${username} y su ip.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          },\n        );;\n      }\n      const secret = nas[0].secret;\n\n      const echoCommand = `echo \"User-Name=${username},User-Name=${username},${attribute}=${value}\"`;\n      const radClientCommand = `radclient -c '1' -n '3' -r '3' -t '3' -x '${ip_address}:3799' 'coa' '${secret}' 2>&1`;\n\n      console.log(`Modificando`);\n      const res = await this.CoA_cmd(echoCommand, radClientCommand);\n      console.log('COA Response', res);\n\n      /**\n       * Compara string recibido de la terminal Linux con string esperado.\n       * Retornal bool.\n       */\n      const statusCoa = this.CoA_Status(res);\n      if (!statusCoa) {\n        const str = `No se pudo suspender al usuario ${username}`;\n        console.log(`${str}\\n------------------------------------------------\\n`);\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      return `El usuario ${username} fue modificado exitosamente`;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNodeDto.html":{"url":"classes/CreateNodeDto.html","title":"class - CreateNodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/create-node.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                systems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/create-node.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/create-node.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        systems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/create-node.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsIP,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { System } from 'src/database/system.entity';\n\nexport class CreateNodeDto {\n  id: number;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  systems: System[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlanDto.html":{"url":"classes/CreatePlanDto.html","title":"class - CreatePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/plan.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                listName\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        listName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/plan.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/plan.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class CreatePlanDto {\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  listName: string;\n}\n\n\nexport class UpdatePlanDto extends PartialType(CreatePlanDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                clientId\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                plan\n                            \n                            \n                                    \n                                radiusId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                sys\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Plan\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        radiusId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@Min(0)@Max(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-service.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsNumber, Max, Min } from 'class-validator';\nimport { System } from 'src/database/system.entity';\nimport { Plan } from 'src/database/plan.entity';\n\nexport class CreateServiceDto {\n  id: number;\n\n  @IsNotEmpty()\n  sys: System[];\n\n  @IsNumber()\n  @IsNotEmpty()\n  clientId: number;\n\n  @IsNotEmpty()\n  plan: Plan;\n\n  @IsNumber()\n  radiusId: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  @Min(0)\n  @Max(4)\n  status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSystemDto.html":{"url":"classes/CreateSystemDto.html","title":"class - CreateSystemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSystemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/create-system.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiKey\n                            \n                            \n                                    \n                                    \n                                endPoint\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-system.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-system.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/create-system.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/create-system.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSystemDto {\n    id: number;\n\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsNotEmpty()\n    @IsString()\n    apiKey: string;\n\n    @IsNotEmpty()\n    @IsString()\n    endPoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Nas.html":{"url":"entities/Nas.html","title":"entity - Nas","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Nas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/nas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                community\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nasname\n                            \n                            \n                                    \n                                ports\n                            \n                            \n                                    \n                                secret\n                            \n                            \n                                    \n                                server\n                            \n                            \n                                    \n                                shortname\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        community\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nasname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 60, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 30, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/nas.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'nas' })\nexport class Nas {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 128, unique: true })\n  nasname: string;\n\n\t@Column({ type: 'varchar', length: 32, unique: true })\n  shortname: string;\n\n\t@Column({ type: 'varchar', length: 30, unique: false })\n  type: string;\n\n\t@Column({ type: 'int', unique: false })\n  ports: number;\n\n\t@Column({ type: 'varchar', length: 60, unique: false })\n  secret: string;\n\n\t@Column({ type: 'varchar', length: 64, unique: false })\n  server: string;\n\n\t@Column({ type: 'varchar', length: 50, unique: false })\n  community: string;\n\n\t@Column({ type: 'varchar', length: 200, unique: false })\n  description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NasController.html":{"url":"controllers/NasController.html","title":"controller - NasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nas/nas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                nas\n            \n\n\n            \n                Description\n            \n            \n                La tabla NAS refiere a \"Servidor de Acceso a la Red\".\nCon estos enlaces se pueden alterar las entradas a esa tabla.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createNas\n                            \n                            \n                                    \n                                getAllNas\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                updateNas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNas(data: NasDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/nas/nas.controller.ts:20\n                \n            \n\n\n            \n                \n                    Crear entradas del NAS\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                NasDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ver en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllNas()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/nas/nas.controller.ts:29\n                \n            \n\n\n            \n                \n                    Retorna todos los NAS\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/nas/nas.controller.ts:39\n                \n            \n\n\n            \n                \n                    Retorna un NAS en particular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNas(id: number, data: NasDtoUpdate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/nas/nas.controller.ts:50\n                \n            \n\n\n            \n                \n                    Permite modificar una entrada del NAS\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    data\n                                    \n                                                NasDtoUpdate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ver en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\nimport { NasService } from './nas.service';\nimport { NasDto, NasDtoUpdate } from 'src/dto/nas.dto';\n\n/**\n * La tabla NAS refiere a \"Servidor de Acceso a la Red\".\n * Con estos enlaces se pueden alterar las entradas a esa tabla.\n * \n */\n@Controller('nas')\nexport class NasController {\n  constructor(private readonly nasService: NasService) {}\n\n  /**\n   * Crear entradas del NAS\n   * @param data { NasDto } Ver en carpeta dto.\n   * @returns { object }\n   */\n  @Post()\n  createNas(@Body() data: NasDto) {\n    return this.nasService.CreateNas(data);\n  }\n\n  /**\n   * Retorna todos los NAS\n   * @returns { array } \n   */\n  @Get()\n  getAllNas() {\n    return this.nasService.FindAllNas();\n  }\n\n  /**\n   * Retorna un NAS en particular\n   * @param id { number } \n   * @returns { object }\n   */\n  @Get(':id')\n  getById(@Param('id') id: number) {\n    return this.nasService.FindById(id);\n  }\n\n  /**\n   * Permite modificar una entrada del NAS\n   * @param id { number }\n   * @param data { NasDto } Ver en carpeta dto.\n   * @returns { object }\n   */\n  @Put(':id')\n  updateNas(@Param('id') id: number, @Body() data: NasDtoUpdate) {\n    return this.nasService.UpdateNas(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NasDto.html":{"url":"classes/NasDto.html","title":"class - NasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/nas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                community\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                ports\n                            \n                            \n                                    \n                                    \n                                secret\n                            \n                            \n                                    \n                                    \n                                server\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        community\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsIP()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:29\n                        \n                    \n\n            \n                \n                                                                                    *CAMPOS OPCIONALES                                                   *\nSe dejan estos campos para un posible uso futuro                    *\n                                                                    *\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\n/**\n * \n */\nexport class NasDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsIP()\n  ip_address: string;\n\n  @IsNotEmpty()\n  @IsString()\n  secret: string;\n\n  /***********************************************************************\n   *                                                                     *\n   * CAMPOS OPCIONALES                                                   *\n   * Se dejan estos campos para un posible uso futuro                    *\n   *                                                                     *\n   ***********************************************************************/\n\n  @IsOptional()\n  @IsNumber()\n  ports: number;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  community: string;\n\n  @IsOptional()\n  @IsString()\n  description: string;\n}\n\n\nexport class NasDtoUpdate {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsIP()\n  ip_address: string;\n\n  @IsOptional()\n  @IsString()\n  secret: string;\n\n  @IsOptional()\n  @IsNumber()\n  ports: number;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  community: string;\n\n  @IsOptional()\n  @IsString()\n  description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NasDtoUpdate.html":{"url":"classes/NasDtoUpdate.html","title":"class - NasDtoUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NasDtoUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/nas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                community\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                ports\n                            \n                            \n                                    \n                                    \n                                secret\n                            \n                            \n                                    \n                                    \n                                server\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        community\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsIP()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/nas.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\n/**\n * \n */\nexport class NasDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsIP()\n  ip_address: string;\n\n  @IsNotEmpty()\n  @IsString()\n  secret: string;\n\n  /***********************************************************************\n   *                                                                     *\n   * CAMPOS OPCIONALES                                                   *\n   * Se dejan estos campos para un posible uso futuro                    *\n   *                                                                     *\n   ***********************************************************************/\n\n  @IsOptional()\n  @IsNumber()\n  ports: number;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  community: string;\n\n  @IsOptional()\n  @IsString()\n  description: string;\n}\n\n\nexport class NasDtoUpdate {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsIP()\n  ip_address: string;\n\n  @IsOptional()\n  @IsString()\n  secret: string;\n\n  @IsOptional()\n  @IsNumber()\n  ports: number;\n\n  @IsOptional()\n  @IsString()\n  server: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  community: string;\n\n  @IsOptional()\n  @IsString()\n  description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NasModule.html":{"url":"modules/NasModule.html","title":"module - NasModule","body":"\n                   \n\n\n\n\n    Modules\n    NasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NasModule\n\n\n\ncluster_NasModule_providers\n\n\n\n\nNasService\n\nNasService\n\n\n\nNasModule\n\nNasModule\n\nNasModule -->\n\nNasService->NasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/nas/nas.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo principal para interactuar con la tabla NAS.\nEs posible que muchos de las rutas aqui implementadas no se vayan a usar, el modulo se construyo principalmente para generar los metodos de manipularan la tabla.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NasController } from './nas.controller';\nimport { NasService } from './nas.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserInfo } from 'src/database/user.entity';\nimport { Nas } from 'src/database/nas.entity';\nimport { Zone } from 'src/database/zone.entity';\n\n/**\n * Modulo principal para interactuar con la tabla NAS.\n * Es posible que muchos de las rutas aqui implementadas no se vayan a usar, el modulo se construyo principalmente para generar los metodos de manipularan la tabla.\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([UserInfo, Nas, Zone])],\n  controllers: [NasController],\n  providers: [NasService],\n})\nexport class NasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NasService.html":{"url":"injectables/NasService.html","title":"injectable - NasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nas/nas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateNas\n                            \n                            \n                                    Async\n                                FindAllNas\n                            \n                            \n                                    Async\n                                FindById\n                            \n                            \n                                    Async\n                                UpdateNas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nasRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/nas/nas.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nasRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateNas(data: NasDto)\n                \n            \n\n\n            \n                \n                    Defined in src/nas/nas.service.ts:24\n                \n            \n\n\n            \n                \n                    Crea una entrada en la tabla NAS.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                NasDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        , ver el nas.dto en la carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllNas()\n                \n            \n\n\n            \n                \n                    Defined in src/nas/nas.service.ts:104\n                \n            \n\n\n            \n                \n                    Busca todas las entradas en la tabla NAS.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindById\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nas/nas.service.ts:147\n                \n            \n\n\n            \n                \n                    Busqueda de una entrada por su id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateNas\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateNas(id: number, data: NasDtoUpdate)\n                \n            \n\n\n            \n                \n                    Defined in src/nas/nas.service.ts:193\n                \n            \n\n\n            \n                \n                    PErmite hacer update a una entrada del NAS.\nPuede que el metodo tenga que ser desechadoo al menos la ruta que lo llama.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                NasDtoUpdate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Nas } from 'src/database/nas.entity';\nimport { NasDto, NasDtoUpdate } from 'src/dto/nas.dto';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class NasService {\n  constructor(\n    @InjectRepository(Nas)\n    private nasRepository: Repository,\n  ) {}\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Crea una entrada en la tabla NAS.\n   * @param data { NasDto }, ver el nas.dto en la carpeta dto.\n   * @returns { object }\n   */\n  async CreateNas(data: NasDto) {\n    try {\n      const { name, ip_address, secret } = data;\n\n      //* Verifica si el username ya existe. *//\n      const date = new Date();\n      console.log(`Creando NAS con el name: ${name}.\\nFecha: ${date}\\n`);\n\n      const isNas = await this.nasRepository.findBy({\n        nasname: ip_address,\n      });\n      if (isNas?.length > 0) {\n        const str = `Ya existe un NAS con ese IP: ${ip_address}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      //* Crea una nueva entrada, el metdodo posee valores por defecto para no dejar espacio nulos en la memoria *//\n      const newNas = this.nasRepository.create({\n        shortname: name,\n        nasname: ip_address,\n        secret: secret,\n        /* OPCIONALES */\n        type: data?.type ? data.type : '0',\n        ports: data?.type ? data.ports : 0,\n        server: data?.server ? data.server : '0',\n        community: data?.community ? data.community : '0',\n        description: data?.description ? data.description : '0',\n      });\n      const nas = await this.nasRepository.save(newNas);\n\n      //* Se verifica que se guarde correctamente la entrada. *//\n      if (!nas) {\n        const str = `Hubo un error al guardar los datos`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      console.log(`------------------------------------------------\\n`);\n      return nas;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Busca todas las entradas en la tabla NAS.\n   * @TODO paginar!\n   * @returns { array }\n   */\n  async FindAllNas() {\n    try {\n      const date = new Date();\n      console.log(`Buscando los NAS.\\nFecha: ${date}\\n`);\n      const allNas = await this.nasRepository.find();\n\n      //* Verifica la existencia de entradas en la tabla. *//\n      if (allNas?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NodesController.html":{"url":"controllers/NodesController.html","title":"controller - NodesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NodesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodes/nodes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                nodes\n            \n\n\n            \n                Description\n            \n            \n                Los nodos son los puntos físicos por donde se conectan los clientes al los servicios de Netcom.\nLa entidad de Nodos se modifico a ZonaClientes porque Radius ya posee una tabla 'node' con sus porpios valores.\nFue modificado como 'ZonaCliente' pero el modulo si se llama 'nodes'\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createNodo\n                            \n                            \n                                    \n                                findAllNodes\n                            \n                            \n                                    \n                                findOneNode\n                            \n                            \n                                    \n                                removeNode\n                            \n                            \n                                    \n                                updateNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createNodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNodo(data: CreateNodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/nodes/nodes.controller.ts:31\n                \n            \n\n\n            \n                \n                    Permite crear una nueva entrada en la tabla.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateNodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAllNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllNodes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/nodes/nodes.controller.ts:40\n                \n            \n\n\n            \n                \n                    Busca todas las entradas en la tabla.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOneNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneNode(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/nodes/nodes.controller.ts:50\n                \n            \n\n\n            \n                \n                    Obtiene una entrada mediante el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        removeNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/nodes/nodes.controller.ts:71\n                \n            \n\n\n            \n                \n                    Elimina una entrada de la tabla mediante el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNode(id: number, data: UpdateNodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/nodes/nodes.controller.ts:61\n                \n            \n\n\n            \n                \n                    Actualiza la entrada en en ZonaCliente.\nSi no hay valores\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateNodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { NodesService } from './nodes.service';\nimport { CreateNodeDto } from '../database/create-node.dto';\n// import { UpdateNodeDto } from './dto/update-node.dto';\nimport { UpdateNodeDto } from 'src/database/update-node.dto';\n\n/**\n * Los nodos son los puntos físicos por donde se conectan los clientes al los servicios de Netcom.\n * La entidad de Nodos se modifico a ZonaClientes porque Radius ya posee una tabla 'node' con sus porpios valores.\n * Fue modificado como 'ZonaCliente' pero el modulo si se llama 'nodes'\n */\n@Controller('nodes')\nexport class NodesController {\n  constructor(private readonly nodesService: NodesService) {}\n\n  /**\n   * Permite crear una nueva entrada en la tabla.\n   * @param data { CreateNodeDto }\n   * @returns { object }\n   */\n  @Post()\n  async createNodo(@Body() data: CreateNodeDto) {\n    return await this.nodesService.CreateNodo(data);\n  }\n\n  /**\n   * Busca todas las entradas en la tabla.\n   * @returns { Array }\n   */\n  @Get()\n  findAllNodes() {\n    return this.nodesService.FindAllNodes();\n  }\n\n  /**\n   * Obtiene una entrada mediante el id.\n   * @param id  { number }\n   * @returns { object }\n   */\n  @Get(':id')\n  findOneNode(@Param('id') id: number) {\n    return this.nodesService.FindOneNode(id);\n  }\n\n  /**\n   * Actualiza la entrada en en ZonaCliente.\n   * Si no hay valores \n   * @param id { number }\n   * @param data { UpdateNodeDto } \n   */\n  @Put(':id')\n  updateNode(@Param('id') id: number, @Body() data: UpdateNodeDto) {\n    return this.nodesService.UpdateNode(id, data);\n  }\n\n  /**\n   * Elimina una entrada de la tabla mediante el id.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Delete(':id')\n  removeNode(@Param('id') id: number) {\n    return this.nodesService.RemoveNode(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NodesModule.html":{"url":"modules/NodesModule.html","title":"module - NodesModule","body":"\n                   \n\n\n\n\n    Modules\n    NodesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NodesModule\n\n\n\ncluster_NodesModule_providers\n\n\n\n\nNodesService\n\nNodesService\n\n\n\nNodesModule\n\nNodesModule\n\nNodesModule -->\n\nNodesService->NodesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/nodes/nodes.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Los nodos son los puntos físico por donde se conectan los clientes al los servicios de Netcom.\nLa entidad de Nodos se modifico a ZonaClientes porque Radius ya posee una tabla 'node' con sus porpios valores.\nFue modificado como 'ZonaCliente' pero el modulo si se llama 'nodes'\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NodesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NodesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NodesService } from './nodes.service';\nimport { NodesController } from './nodes.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { System } from 'src/database/system.entity'\nimport { ZonaCliente } from '../database/node.entity';\n\n/**\n * Los nodos son los puntos físico por donde se conectan los clientes al los servicios de Netcom.\n * La entidad de Nodos se modifico a ZonaClientes porque Radius ya posee una tabla 'node' con sus porpios valores.\n * Fue modificado como 'ZonaCliente' pero el modulo si se llama 'nodes'\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([System, ZonaCliente])],\n  controllers: [NodesController],\n  providers: [NodesService]\n})\nexport class NodesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodesService.html":{"url":"injectables/NodesService.html","title":"injectable - NodesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NodesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodes/nodes.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Metodos del modulo nodo.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateNodo\n                            \n                            \n                                    Async\n                                FindAllNodes\n                            \n                            \n                                    Async\n                                FindOneNode\n                            \n                            \n                                    Async\n                                RemoveNode\n                            \n                            \n                                    Async\n                                UpdateNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/nodes/nodes.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateNodo\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateNodo(node: ZonaCliente)\n                \n            \n\n\n            \n                \n                    Defined in src/nodes/nodes.service.ts:29\n                \n            \n\n\n            \n                \n                    Vrea una nueva entrada en la tabla ZonaCliente\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ZonaCliente\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllNodes()\n                \n            \n\n\n            \n                \n                    Defined in src/nodes/nodes.service.ts:96\n                \n            \n\n\n            \n                \n                    Busca todas la entradas asociadas.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindOneNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindOneNode(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nodes/nodes.service.ts:142\n                \n            \n\n\n            \n                \n                    Encuentra una entrada a partir del id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RemoveNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveNode(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nodes/nodes.service.ts:276\n                \n            \n\n\n            \n                \n                    Metodo para remover una entrada de la tabla mediante el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateNode(id: number, updateNodeDto: UpdateNodeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/nodes/nodes.service.ts:192\n                \n            \n\n\n            \n                \n                    Metodo para hacer update a las entradas de la tabla.\nSi name y system llegan vacios la solicitud se rechaza.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNodeDto\n                                    \n                                                UpdateNodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n// import { CreateNodeDto } from '../database/create-node.dto';\n// import { UpdateNodeDto } from './dto/update-node.dto';\nimport { UpdateNodeDto } from 'src/database/update-node.dto';\nimport { ZonaCliente } from '../database/node.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n/**\n * Metodos del modulo nodo.\n*/\n@Injectable()\nexport class NodesService {\n  constructor(\n    @InjectRepository(ZonaCliente)\n    private readonly nodeRepository: Repository,\n  ) {}\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Vrea una nueva entrada en la tabla ZonaCliente\n   * @param node\n   * @returns { object }\n   */\n  async CreateNodo(node: ZonaCliente) {\n    const { name, systems } = node;\n    try {\n      const date = new Date();\n      console.log(`Creado nueva ZonaCliente/Nodo con name: ${name} y system: ${systems}.\\nFecha: ${date}\\n`);\n\n      const isZona = await this.nodeRepository.findOneBy({ name });\n\n      if (isZona) {\n        const str = `Ya existe una zona con el el name: ${name}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      const nodeNew = await this.nodeRepository.create({\n        name,\n        systems,\n      });\n      const nodeSave = await this.nodeRepository.save(nodeNew);\n      if (!nodeSave) {\n        const str = `Hubo un problema al crear la ZonaCliente/Nodo con el el name: ${name}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n      console.log(\n        `ZonaCliente/Nodo creada exitosamente.\\n------------------------------------------------\\n`,\n      );\n      return nodeSave;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Busca todas la entradas asociadas.\n   * @returns { Array }\n   */\n  async FindAllNodes() {\n    try {\n      const date = new Date();\n      console.log(`Buscando todas las ZonaClientes/Nodos.\\nFecha: ${date}\\n`);\n      const zonasNodos = await this.nodeRepository.find({\n        relations: ['systems'],\n      });\n\n      if (zonasNodos?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Plan.html":{"url":"entities/Plan.html","title":"entity - Plan","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                listName\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                services\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/plan.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        listName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/plan.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/plan.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn()@OneToMany(undefined, service => service.plan, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, Column, PrimaryGeneratedColumn, JoinColumn, OneToMany } from 'typeorm';\nimport { Service } from './service.entity';\n\n@Entity('plan')\nexport class Plan {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 200, unique: true })\n  name: string;\n\n  @Column({ type: 'varchar', length: 200, unique: true })\n  listName: string;\n\n  @JoinColumn()\n  @OneToMany(() => Service,\n  service => service.plan,\n  {\n    onDelete: 'CASCADE',\n    onUpdate:'CASCADE'},)\n  services?: Service[]\n}\n\n\n/**\n * Query para crear la tabla\n * --------------------------\n  CREATE TABLE `nest`.`plan` (\n  `id`  INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(200) NULL,\n  `listName` VARCHAR(200) NULL,\n  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,\n  PRIMARY KEY (`id`),\n  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,\n  UNIQUE INDEX `listName_UNIQUE` (`listName` ASC) VISIBLE);\n *\n */\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlanController.html":{"url":"controllers/PlanController.html","title":"controller - PlanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plan/plan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                plan\n            \n\n\n            \n                Description\n            \n            \n                Ruta principal para manipular los planes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPlan\n                            \n                            \n                                    \n                                findAllPlans\n                            \n                            \n                                    \n                                findOnePlan\n                            \n                            \n                                    \n                                removePlan\n                            \n                            \n                                    \n                                updatePlan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPlan(data: CreatePlanDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/plan/plan.controller.ts:31\n                \n            \n\n\n            \n                \n                    Recibe dos parametros en forma de String, name: Que sería el nomabre comercial y listname: El nombre en lista.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAllPlans\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllPlans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/plan/plan.controller.ts:40\n                \n            \n\n\n            \n                \n                    Trae todo los planes\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOnePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePlan(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/plan/plan.controller.ts:50\n                \n            \n\n\n            \n                \n                    Trae una entrada en base al id del plan buscado.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        removePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    removePlan(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/plan/plan.controller.ts:70\n                \n            \n\n\n            \n                \n                    Permite eliminar una entrada en base al id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updatePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePlan(id: number, data: UpdatePlanDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/plan/plan.controller.ts:60\n                \n            \n\n\n            \n                \n                    Permite actualizar una entrada en base al id y los parametros enviados.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Injectable,\n} from '@nestjs/common';\nimport { PlanService } from './plan.service';\nimport { CreatePlanDto } from '../dto/plan.dto';\nimport { UpdatePlanDto } from '../dto/plan.dto';\n// import { UpdatePlanDto } from './dto/update-plan.dto';\n//import { UpdatePlanDto } from 'src/dto/update-plan.dto';\n\n/**\n * Ruta principal para manipular los planes.\n */\n@Controller('plan')\nexport class PlanController {\n  constructor(private planService: PlanService) {}\n\n  /**\n   * Recibe dos parametros en forma de String, name: Que sería el nomabre comercial y listname: El nombre en lista.\n   * @param data { createPlanDto } \n   * @returns { object }\n   */\n  @Post()\n  async createPlan(@Body() data: CreatePlanDto) {\n    return await this.planService.CreatePlan(data);\n  }\n\n  /**\n   * Trae todo los planes\n   * @returns { Array }\n   */\n  @Get()\n  findAllPlans() {\n    return this.planService.FindAllPlans();\n  }\n\n  /**\n   * Trae una entrada en base al id del plan buscado.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Get(':id')\n  findOnePlan(@Param('id') id: number) {\n    return this.planService.FindOnePlan(id);\n  }\n\n  /**\n   * Permite actualizar una entrada en base al id y los parametros enviados.\n   * @param id { number }\n   * @param data { UpdatePlanDto } \n   */\n  @Put(':id')\n  updatePlan(@Param('id') id: number, @Body() data: UpdatePlanDto) {\n    return this.planService.UpdatePlan(id, data);\n  }\n\n  /**\n   * Permite eliminar una entrada en base al id.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Delete(':id')\n  removePlan(@Param('id') id: number) {\n    return this.planService.RemovePlan(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlanModule.html":{"url":"modules/PlanModule.html","title":"module - PlanModule","body":"\n                   \n\n\n\n\n    Modules\n    PlanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlanModule\n\n\n\ncluster_PlanModule_providers\n\n\n\ncluster_PlanModule_exports\n\n\n\n\nPlanService \n\nPlanService \n\n\n\nPlanModule\n\nPlanModule\n\nPlanService  -->\n\nPlanModule->PlanService \n\n\n\n\n\nPlanService\n\nPlanService\n\nPlanModule -->\n\nPlanService->PlanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plan/plan.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo para crear y manipular los planes de servicio de Netcom.\nHubo que crear la tabla manualmente.\nEl comando MySql se encuentra comentado en En la entidad del plan.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlanController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlanService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { PlanService } from './plan.service';\nimport { PlanController } from './plan.controller';\nimport { Plan } from '../database/plan.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n/**\n * Modulo para crear y manipular los planes de servicio de Netcom.\n * Hubo que crear la tabla manualmente. \n * El comando MySql se encuentra comentado en En la entidad del plan.\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Plan])],\n  controllers: [PlanController],\n  providers: [PlanService],\n  exports: [PlanService]\n})\nexport class PlanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlanService.html":{"url":"injectables/PlanService.html","title":"injectable - PlanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plan/plan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Metodos para la manipulacion de los planes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                plans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreatePlan\n                            \n                            \n                                    Async\n                                FindAllPlans\n                            \n                            \n                                    Async\n                                FindOnePlan\n                            \n                            \n                                    Async\n                                RemovePlan\n                            \n                            \n                                    Async\n                                UpdatePlan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(planRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/plan/plan.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreatePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreatePlan(plan: CreatePlanDto)\n                \n            \n\n\n            \n                \n                    Defined in src/plan/plan.service.ts:30\n                \n            \n\n\n            \n                \n                    Recibe dos parametros en forma de String, name: Que sería el nomabre comercial y listname: El nombre en lista.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                CreatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllPlans\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllPlans()\n                \n            \n\n\n            \n                \n                    Defined in src/plan/plan.service.ts:107\n                \n            \n\n\n            \n                \n                    Trae todo los planes\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindOnePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindOnePlan(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/plan/plan.service.ts:150\n                \n            \n\n\n            \n                \n                    Trae una entrada en base al id del plan buscado.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RemovePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    RemovePlan(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/plan/plan.service.ts:263\n                \n            \n\n\n            \n                \n                    Permite eliminar una entrada en base al id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdatePlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdatePlan(id: number, updatePlanDto: UpdatePlanDto)\n                \n            \n\n\n            \n                \n                    Defined in src/plan/plan.service.ts:194\n                \n            \n\n\n            \n                \n                    Permite actualizar una entrada en base al id y los parametros enviados.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePlanDto\n                                    \n                                                UpdatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        plans\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Plan[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/plan/plan.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreatePlanDto } from '../dto/plan.dto';\n// import { UpdatePlanDto } from 'src/dto/update-plan.dto';\nimport { UpdatePlanDto } from '../dto/plan.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Plan } from '../database/plan.entity';\n\n/**\n * Metodos para la manipulacion de los planes.\n */\n@Injectable()\nexport class PlanService {\n  constructor(\n    @InjectRepository(Plan)\n    private planRepository: Repository,\n  ) {}\n  private readonly plans: Plan[] = [];\n\n  ////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Recibe dos parametros en forma de String, name: Que sería el nomabre comercial y listname: El nombre en lista.\n   * @param data { createPlanDto }\n   * @returns { object }\n   */\n  async CreatePlan(plan: CreatePlanDto) {\n    const { name, listName } = plan;\n    try {\n      const date = new Date();\n      console.log(`Creando nuevo plan con name:'${name}' y listName:'${listName}'.\\nFecha: ${date}\\n`);\n\n      //* Verificacion de existencia del plan *//\n      const isName = await this.planRepository.find({\n        where: [{ name }, { listName }],\n      });\n      if (isName?.length > 0) {\n        const str = `Ya existe un plan con el name:'${name}' o listName:'${listName}'`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      //* Si el plan no existe se crea *//\n      const planNew = await this.planRepository.create({\n        name,\n        listName,\n      });\n      const planSave = await this.planRepository.save(planNew);\n\n      //* Se verifica que el plan se haya guardado correctamente *//\n      if (!planSave) {\n        const str = `Hubo un error al guardar el plan con el name:'${name}' o listName:'${listName}'`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        console.log(\n          `Plan guardado exitopsamente.\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n      \n      console.log(\n        `Plan guardado exitopsamente.\\n------------------------------------------------\\n`,\n      );\n      return planSave;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Trae todo los planes\n   * @todo Paginar\n   * @returns { Array }\n   */\n  async FindAllPlans() {\n    try {\n      const date = new Date();\n      console.log(`Buscando los planes.\\nFecha: ${date}\\n`);\n      const planes = await this.planRepository.find();\n      if (planes?.length  0) {\n        const str = `No se encontró un plan con el name:'${name}' y listName:'${listName}'`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      //* Update del plan *//\n      const update = await this.planRepository.update(id, updatePlanDto);\n\n      if (!update) {\n        const str = `Hubo un problema al realizar el update`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(`Update exitoso`);\n      return update;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Permite eliminar una entrada en base al id.\n   * @param id { number }\n   * @returns { object }\n   */\n  async RemovePlan(id: number) {\n    try {\n      const date = new Date();\n      console.log(`Borrando plan con el id: ${id}.\\nFecha: ${date}\\n`);\n      const del = await this.planRepository.delete(id);\n\n      if (!del) {\n        const str = `No se puedo eliminar el plan`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(`Plan eliminado exitosamente`);\n      return del;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RadCheck.html":{"url":"entities/RadCheck.html","title":"entity - RadCheck","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RadCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/radcheck.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attribute\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                op\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radcheck.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radcheck.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 2, nullable: false, default: ':='})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radcheck.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radcheck.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 253, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radcheck.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity({ name: 'radcheck' })\nexport class RadCheck {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 64, nullable: false })\n  username: string;\n\n  @Column({ type: 'varchar', length: 64, nullable: false })\n  attribute: string;\n\n  @Column({ length: 2, nullable: false, default: ':=' })\n  op: string;\n\n  @Column({ type: 'varchar', length: 253, nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadCheckDto.html":{"url":"classes/RadCheckDto.html","title":"class - RadCheckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadCheckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/radcheck.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MaxLength(2, {message: 'El valor 'op' debe tener una extension de 2 carácteres'})@MinLength(2, {message: 'El valor 'op' debe tener una extension de 2 carácteres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class RadCheckDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  attribute: string;\n  \n  @IsOptional()\n  @IsString()\n  @MaxLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @MinLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  op: string;\n\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n}\n\nexport class RadCheckUpdateDto {\n\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  attribute: string;\n  \n  @MaxLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @MinLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @IsOptional()\n  @IsString()\n  op: string;\n\n  @IsOptional()\n  @IsString()\n  value: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadCheckUpdateDto.html":{"url":"classes/RadCheckUpdateDto.html","title":"class - RadCheckUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadCheckUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/radcheck.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(2, {message: 'El valor 'op' debe tener una extension de 2 carácteres'})@MinLength(2, {message: 'El valor 'op' debe tener una extension de 2 carácteres'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radcheck.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class RadCheckDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  attribute: string;\n  \n  @IsOptional()\n  @IsString()\n  @MaxLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @MinLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  op: string;\n\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n}\n\nexport class RadCheckUpdateDto {\n\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  attribute: string;\n  \n  @MaxLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @MinLength(2, { message: \"El valor 'op' debe tener una extension de 2 carácteres\"})\n  @IsOptional()\n  @IsString()\n  op: string;\n\n  @IsOptional()\n  @IsString()\n  value: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RadGroupReply.html":{"url":"entities/RadGroupReply.html","title":"entity - RadGroupReply","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RadGroupReply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/radgroupreply.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attribute\n                            \n                            \n                                    \n                                groupname\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                op\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radgroupreply.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radgroupreply.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radgroupreply.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 2, nullable: false, default: ':='})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radgroupreply.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 253, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radgroupreply.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity({ name: 'radgroupreply' })\nexport class RadGroupReply {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 64, nullable: false })\n  groupname: string;\n\n  @Column({ type: 'varchar', length: 64, nullable: false })\n  attribute: string;\n\n  @Column({ length: 2, nullable: false, default: ':=' })\n  op: string;\n\n  @Column({ type: 'varchar', length: 253, nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RadUserGroup.html":{"url":"entities/RadUserGroup.html","title":"entity - RadUserGroup","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RadUserGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/radusergroup.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                groupname\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                priority\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radusergroup.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radusergroup.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radusergroup.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radusergroup.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('radusergroup')\nexport class RadUserGroup {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 200 })\n  username: string;\n\n  @Column({ type: 'varchar', length: 200 })\n  groupname: string;\n\n  @Column({ type: 'int' })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadUserGroupDto.html":{"url":"classes/RadUserGroupDto.html","title":"class - RadUserGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadUserGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/radUserGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class RadUserGroupDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n  \n  @IsOptional()\n  @IsNumber()\n  priority: number;\n\n}\n\n\nexport class RadUserGroupUpdateDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n\n  @IsOptional()\n  @IsNumber()\n  priority: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadUserGroupUpdateDto.html":{"url":"classes/RadUserGroupUpdateDto.html","title":"class - RadUserGroupUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadUserGroupUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/radUserGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/radUserGroup.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class RadUserGroupDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n  \n  @IsOptional()\n  @IsNumber()\n  priority: number;\n\n}\n\n\nexport class RadUserGroupUpdateDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n\n  @IsOptional()\n  @IsNumber()\n  priority: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Radacct.html":{"url":"entities/Radacct.html","title":"entity - Radacct","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Radacct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/radacct.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                acctauthentic\n                            \n                            \n                                    \n                                acctinputoctets\n                            \n                            \n                                    \n                                acctinterval\n                            \n                            \n                                    \n                                acctoutputoctets\n                            \n                            \n                                    \n                                acctsessionid\n                            \n                            \n                                    \n                                acctsessiontime\n                            \n                            \n                                    \n                                acctstarttime\n                            \n                            \n                                    \n                                acctstoptime\n                            \n                            \n                                    \n                                acctterminatecause\n                            \n                            \n                                    \n                                acctuniqueid\n                            \n                            \n                                    \n                                calledstationid\n                            \n                            \n                                    \n                                callingstationid\n                            \n                            \n                                    \n                                connectinfo_start\n                            \n                            \n                                    \n                                connectinfo_stop\n                            \n                            \n                                    \n                                delegatedipv6prefix\n                            \n                            \n                                    \n                                framedinterfaceid\n                            \n                            \n                                    \n                                framedipaddress\n                            \n                            \n                                    \n                                framedipv6address\n                            \n                            \n                                    \n                                framedipv6prefix\n                            \n                            \n                                    \n                                framedprotocol\n                            \n                            \n                                    \n                                nasipaddress\n                            \n                            \n                                    \n                                nasportid\n                            \n                            \n                                    \n                                nasporttype\n                            \n                            \n                                    \n                                radacctid\n                            \n                            \n                                    \n                                realm\n                            \n                            \n                                    \n                                servicetype\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctauthentic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctinputoctets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctinterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctoutputoctets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctsessionid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctsessiontime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctstarttime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctstoptime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctterminatecause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acctuniqueid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        calledstationid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        callingstationid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        connectinfo_start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        connectinfo_stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delegatedipv6prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 44, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        framedinterfaceid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 44, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        framedipaddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        framedipv6address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 45, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        framedipv6prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 45, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        framedprotocol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nasipaddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nasportid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nasporttype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        radacctid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        realm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servicetype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 64, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/radacct.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity({ name: 'radacct' })\nexport class Radacct {\n  @PrimaryGeneratedColumn()\n  radacctid: number;\n\n  @Column({ type: 'varchar', length:64, unique: true })\n  acctsessionid: string; // Para el Ip\n\n\t@Column({ type: 'varchar', length: 32, unique: true })\n  acctuniqueid: string;\n\n\t@Column({ type: 'varchar', length: 64, unique: false })\n  username: string;\n\n  @Column({ type: 'varchar', length: 64, unique: false })\n  realm: string;\n\n  @Column({ type: 'varchar', length: 15, unique: false })\n  nasipaddress: string;\n\n  @Column({ type: 'varchar', length: 100, unique: false })\n  nasportid: string;\n\n  @Column({ type: 'varchar', length: 32, unique: false })\n  nasporttype: string;\n\n  @Column({ type: 'timestamp', nullable: true })\n  acctstarttime: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  acctstoptime: Date;\n\n  @Column({type: 'int', unique:false})\n  acctinterval: number;\n\n  @Column({type: 'int', unique: true})\n  acctsessiontime: number;\n\n  @Column({ type: 'varchar', length: 32, unique: false })\n  acctauthentic: string;\n\n  @Column({ type: 'varchar', length: 50, unique: false })\n  connectinfo_start: string;\n\n  @Column({ type: 'varchar', length: 50, unique: false })\n  connectinfo_stop: string;\n\n  @Column({ type: 'bigint'})\n  acctinputoctets: number\n\n  @Column({ type: 'bigint'})\n  acctoutputoctets: number\n\n  @Column({ type: 'varchar', length: 50, unique: false })\n  calledstationid: string;\n\n  @Column({ type: 'varchar', length: 50, unique: false })\n  callingstationid: string;\n\n  @Column({ type: 'varchar', length: 32, unique: false })\n  acctterminatecause: string;\n\n  @Column({ type: 'varchar', length: 32, unique: false })\n  servicetype: string;\n\n  @Column({ type: 'varchar', length: 32, unique: false })\n  framedprotocol: string;\n\n  @Column({ type: 'varchar', length: 15, unique: false })\n  framedipaddress: string;\n\n  @Column({ type: 'varchar', length: 45, unique: false })\n  framedipv6address: string;\n\n  @Column({ type: 'varchar', length: 45, unique: false })\n  framedipv6prefix: string;\n\n  @Column({ type: 'varchar', length: 44, unique: false })\n  framedinterfaceid: string;\n\n  @Column({ type: 'varchar', length: 44, unique: false })\n  delegatedipv6prefix: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RadcheckController.html":{"url":"controllers/RadcheckController.html","title":"controller - RadcheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RadcheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/radcheck/radcheck.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                radcheck\n            \n\n\n            \n                Description\n            \n            \n                Información de autenticación de los  servicios:\ncredenciales (serial) y tipo de tecnología (Framed-Protocol).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createRad\n                            \n                            \n                                    \n                                getAllRadCheck\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                updateradCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createRad\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRad(data: RadCheckDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/radcheck/radcheck.controller.ts:38\n                \n            \n\n\n            \n                \n                    Permite la creacion de una entrada a la tabla, se requiere \"username\" de manera obligatoria, los otros parametros pueden ser enviados, sino se aplican el resto por defecto.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Es un objeto con varios campos pero solo 1 es obligatorio.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRadCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/radcheck/radcheck.controller.ts:18\n                \n            \n\n\n            \n                \n                    Trae todos lo elementos que se encuentren en la tabla.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/radcheck/radcheck.controller.ts:28\n                \n            \n\n\n            \n                \n                    Retorna una sola entrada a partir del id ingresado.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateradCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateradCheck(id: number, data: RadCheckUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/radcheck/radcheck.controller.ts:49\n                \n            \n\n\n            \n                \n                    Permite la modificacion de una entrada en la tabla, se requiere \"username\" de manera obligatoria, los otros parametros pueden ser enviados, sino se aplican el resto por defecto.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                RadCheckUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\nimport { RadcheckService } from './radcheck.service';\nimport { RadCheckDto, RadCheckUpdateDto } from 'src/dto/radcheck.dto';\n\n/**\n * Información de autenticación de los  servicios: \n * credenciales (serial) y tipo de tecnología (Framed-Protocol).\n */\n@Controller('radcheck')\nexport class RadcheckController {\n  constructor(private readonly radCheckService: RadcheckService) {}\n\n  /**\n   * Trae todos lo elementos que se encuentren en la tabla.\n   * @returns { array }\n   */\n  @Get()\n  getAllRadCheck() {\n    return this.radCheckService.GetAllRadCheck();\n  }\n\n  /**\n   * Retorna una sola entrada a partir del id ingresado.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Get(':id')\n  getById(@Param('id') id: number) {\n    return this.radCheckService.GetById(id);\n  }\n\n  /**\n   * Permite la creacion de una entrada a la tabla, se requiere \"username\" de manera obligatoria, los otros parametros pueden ser enviados, sino se aplican el resto por defecto.\n   * @param data { RadCheckDto } Es un objeto con varios campos pero solo 1 es obligatorio.\n   * @returns { object }\n   */\n  @Post()\n  createRad(@Body() data: RadCheckDto) {\n    return this.radCheckService.CreateRadCheck(data);\n  }\n\n  /**\n   * Permite la modificacion de una entrada en la tabla, se requiere \"username\" de manera obligatoria, los otros parametros pueden ser enviados, sino se aplican el resto por defecto.\n   * @param id { number }\n   * @param data { RadCheckUpdateDto }\n   * @returns { object }\n   */\n  @Put(':id')\n  updateradCheck(@Param('id') id: number, @Body() data: RadCheckUpdateDto) {\n    return this.radCheckService.UpdateRadCheck(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RadcheckModule.html":{"url":"modules/RadcheckModule.html","title":"module - RadcheckModule","body":"\n                   \n\n\n\n\n    Modules\n    RadcheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RadcheckModule\n\n\n\ncluster_RadcheckModule_providers\n\n\n\n\nRadcheckService\n\nRadcheckService\n\n\n\nRadcheckModule\n\nRadcheckModule\n\nRadcheckModule -->\n\nRadcheckService->RadcheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/radcheck/radcheck.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            El modulo de la tabla \"radcheck\".\nInformación de autenticación de los  servicios:\ncredenciales (serial) y tipo de tecnología (Framed-Protocol).\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RadcheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RadcheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RadcheckController } from './radcheck.controller';\nimport { RadcheckService } from './radcheck.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RadCheck } from 'src/database/radcheck.entity';\n\n/**\n * El modulo de la tabla \"radcheck\".\n * Información de autenticación de los  servicios: \n * credenciales (serial) y tipo de tecnología (Framed-Protocol).\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([RadCheck])],\n  controllers: [RadcheckController],\n  providers: [RadcheckService],\n})\nexport class RadcheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RadcheckService.html":{"url":"injectables/RadcheckService.html","title":"injectable - RadcheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RadcheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/radcheck/radcheck.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Metodos para la manipulacion de la tabla \"radcheck\".\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateRadCheck\n                            \n                            \n                                    Async\n                                GetAllRadCheck\n                            \n                            \n                                    Async\n                                GetById\n                            \n                            \n                                    Async\n                                UpdateRadCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(radcheckRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/radcheck/radcheck.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        radcheckRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateRadCheck(data: RadCheckDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radcheck/radcheck.service.ts:118\n                \n            \n\n\n            \n                \n                    Permite crear una entrada en la tabla.\nEn general este proceso es realizado cuando se crea un nuevo usuario en \"userinfo\", pero puede ser util en casos donde se cree la entrada de \"userinfo\" pero falle en \"radcheck\".\nSe requiere \"username\" de manera obligatoria, los otros parametros pueden ser enviados, sino se aplican el resto por defecto.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllRadCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/radcheck/radcheck.service.ts:27\n                \n            \n\n\n            \n                \n                    Retorna toda las entradas de la tabla radcheck.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetById\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/radcheck/radcheck.service.ts:71\n                \n            \n\n\n            \n                \n                    Busca una entrada por medio del id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        debe ser int.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateRadCheck(id: number, data: RadCheckUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radcheck/radcheck.service.ts:195\n                \n            \n\n\n            \n                \n                    Metodo para update de la tabla \"radcheck\"\nSe necesita enviar el id y al menos un valor a modificar que no sea el \"username\", de lo contrario la operacion es abortada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                RadCheckUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RadCheck } from 'src/database/radcheck.entity';\nimport { RadCheckDto, RadCheckUpdateDto } from 'src/dto/radcheck.dto';\nimport { Repository } from 'typeorm';\n\n/**\n * Metodos para la manipulacion de la tabla \"radcheck\".\n */\n@Injectable()\nexport class RadcheckService {\n  constructor(\n    @InjectRepository(RadCheck)\n    private radcheckRepository: Repository,\n  ) {}\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Retorna toda las entradas de la tabla radcheck.\n   * @todo paginar\n   * @returns { array }\n   */\n  async GetAllRadCheck() {\n    try {\n      const date = new Date();\n      console.log(`Buscando entradas en la tabla \"radcheck\"'.\\nFecha: ${date}\\n`);\n      const allRadChecks = await this.radcheckRepository.find();\n\n      console.log(allRadChecks);\n      if (allRadChecks?.length  Desechado: no se debiera modificar el username.\n      rad.attribute = attribute ? attribute : rad.attribute;\n      rad.op = op ? op : rad.op;\n      rad.value = value ? value : rad.value;\n\n      const updateRad = await this.radcheckRepository.save(rad);\n\n      //* Verificando update *//\n      if (!updateRad) {\n        const str = `No se puedo realizar el update del rad: ${updateRad.username}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      console.log(\n        `El user ${updateRad.username} fue actualizado exitosamente.\\n------------------------------------------------\\n`,\n      );\n      return updateRad;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RadusergroupController.html":{"url":"controllers/RadusergroupController.html","title":"controller - RadusergroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RadusergroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/radusergroup/radusergroup.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                radusergroup\n            \n\n\n            \n                Description\n            \n            \n                Modulo para la tabla \"radusergroup\".\nControla el estado del servicio de un usuario.\nOriginalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\nEn general los ORM solicitan un campo unico para evitar colisiones, pero esta tabla no puede poseer un campo unico ya que un username puede tener un plan (groupname), y al mismo tiempo estar suspendido, lo que implica que el \"\"username debe aparecer al menos dos veces\"\".\nSe debe crear el campo id en la tabla manualmente y que sea llenado automaticamente.\nComando mysql: ALTER TABLE radius.radusergroup ADD COLUMN id INT AUTO_INC REMENT PRIMARY KEY\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUserGroup\n                            \n                            \n                                    \n                                getAllUserGroups\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                updateUserGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserGroup(data: RadUserGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/radusergroup/radusergroup.controller.ts:39\n                \n            \n\n\n            \n                \n                    Permite crear una nueva entrada en la tabla \"radusergroup\".\nEn general este endpoit no debiera ser necesario ya que en la creacion del usuario se debiera crear su entrada respectiva en la tabla.\nSin embargo puede ser util al momento de que pueda fallar el registro en la tabla desde la creacion del usuario.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver en radUserGroup.dto en la carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllUserGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUserGroups()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/radusergroup/radusergroup.controller.ts:27\n                \n            \n\n\n            \n                \n                    Trae todas la entradas de la tabla \"radusergroup\"\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(data: RadUserGroupUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('find')\n                \n            \n\n            \n                \n                    Defined in src/radusergroup/radusergroup.controller.ts:51\n                \n            \n\n\n            \n                \n                    Permite buscar una entrada en particular dentro de la tabla.\nLa busqueda se realiza con el \"username\" y el \"usergroup\", aunque no es necesario tener ambos campos, si es necesario que al menos uno de los dos este presente.\nOriginalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver detelles en el radUserGroup.dto en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserGroup(data: RadUserGroupUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/radusergroup/radusergroup.controller.ts:63\n                \n            \n\n\n            \n                \n                    Para hacer un update de una entrada se va a requerir todos los campos.\nEl dto no lo va a rechazar porque se usa el mismo \"RadUserGroupUpdateDto\", pero el metodo en custion si, ya que no tiene sentido de que falte alguno de los valores. Se necesita el \"username\" y el \"groupname\" para realizar la busqueda, por lo que el unico cambio posible es en \"op\".\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver detelles en el radUserGroup.dto en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Put } from '@nestjs/common';\nimport { RadusergroupService } from './radusergroup.service';\nimport {\n  RadUserGroupDto,\n  RadUserGroupUpdateDto,\n} from 'src/dto/radUserGroup.dto';\n\n/**\n * Modulo para la tabla \"radusergroup\".\n * Controla el estado del servicio de un usuario.\n * Originalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\n * \n * En general los ORM solicitan un campo unico para evitar colisiones, pero esta tabla no puede poseer un campo unico ya que un username puede tener un plan (groupname), y al mismo tiempo estar suspendido, lo que implica que el \"\"username debe aparecer al menos dos veces\"\".\n * \n * Se debe crear el campo id en la tabla manualmente y que sea llenado automaticamente.\n * Comando mysql: ALTER TABLE `radius`.`radusergroup` ADD COLUMN id INT AUTO_INC REMENT PRIMARY KEY\n */\n@Controller('radusergroup')\nexport class RadusergroupController {\n  constructor(private readonly radUserGroupService: RadusergroupService) {}\n\n  /**\n   * Trae todas la entradas de la tabla \"radusergroup\"\n   * @returns { Array }\n   */\n  @Get()\n  getAllUserGroups() {\n    return this.radUserGroupService.GetAllUserGroups();\n  }\n\n  /**\n   * Permite crear una nueva entrada en la tabla \"radusergroup\".\n   * En general este endpoit no debiera ser necesario ya que en la creacion del usuario se debiera crear su entrada respectiva en la tabla.\n   * Sin embargo puede ser util al momento de que pueda fallar el registro en la tabla desde la creacion del usuario.\n   * @param data { RadUserGroupDto } ver en radUserGroup.dto en la carpeta dto.\n   * @returns { object }\n   */\n  @Post()\n  createUserGroup(@Body() data: RadUserGroupDto) {\n    return this.radUserGroupService.CreateRadUserGroup(data);\n  }\n\n  /**\n   * Permite buscar una entrada en particular dentro de la tabla.\n   * La busqueda se realiza con el \"username\" y el \"usergroup\", aunque no es necesario tener ambos campos, si es necesario que al menos uno de los dos este presente.\n   * Originalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\n   * @param data { RadUserGroupUpdateDto } ver detelles en el radUserGroup.dto en carpeta dto.\n   * @returns { Array }\n   */\n  @Post('find')\n  getById(@Body() data: RadUserGroupUpdateDto) {\n    return this.radUserGroupService.GetUserGroupById(data);\n  }\n\n  /**\n   * Para hacer un update de una entrada se va a requerir todos los campos.\n   * El dto no lo va a rechazar porque se usa el mismo \"RadUserGroupUpdateDto\", pero el metodo en custion si, ya que no tiene sentido de que falte alguno de los valores. Se necesita el \"username\" y el \"groupname\" para realizar la busqueda, por lo que el unico cambio posible es en \"op\".\n   * @todo Buscar todos los \"op\" posibles y restringirlos. \n   * @param data { RadUserGroupUpdateDto } ver detelles en el radUserGroup.dto en carpeta dto.\n   * @returns { object }\n   */\n  @Put()\n  updateUserGroup(@Body() data: RadUserGroupUpdateDto) {\n    return this.radUserGroupService.UpdateUserGroup(data);\n  }\n\n  // @Put('delete')\n  // delete(@Body() data: RadUserGroupUpdateDto) {\n  //   return this.radUserGroupService.DeleteUserGroup(data);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RadusergroupModule.html":{"url":"modules/RadusergroupModule.html","title":"module - RadusergroupModule","body":"\n                   \n\n\n\n\n    Modules\n    RadusergroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RadusergroupModule\n\n\n\ncluster_RadusergroupModule_providers\n\n\n\n\nRadusergroupService\n\nRadusergroupService\n\n\n\nRadusergroupModule\n\nRadusergroupModule\n\nRadusergroupModule -->\n\nRadusergroupService->RadusergroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/radusergroup/radusergroup.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo para la tabla \"radusergroup\".\nControla el estado del servicio de un usuario.\nLa tabla necesita ser alterada, ver comentario en el controller.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RadusergroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RadusergroupController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RadusergroupController } from './radusergroup.controller';\nimport { RadusergroupService } from './radusergroup.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\n\n/**\n * Modulo para la tabla \"radusergroup\".\n * Controla el estado del servicio de un usuario.\n * La tabla necesita ser alterada, ver comentario en el controller.\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([RadUserGroup])],\n  controllers: [RadusergroupController],\n  providers: [RadusergroupService],\n})\nexport class RadusergroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RadusergroupService.html":{"url":"injectables/RadusergroupService.html","title":"injectable - RadusergroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RadusergroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/radusergroup/radusergroup.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Originalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateRadUserGroup\n                            \n                            \n                                    Async\n                                DeleteUserGroup\n                            \n                            \n                                    Async\n                                GetAllUserGroups\n                            \n                            \n                                    Async\n                                GetUserGroupById\n                            \n                            \n                                    Async\n                                UpdateUserGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(radUserGroup: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/radusergroup/radusergroup.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        radUserGroup\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateRadUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateRadUserGroup(data: RadUserGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radusergroup/radusergroup.service.ts:31\n                \n            \n\n\n            \n                \n                    Para crear una entrada el \"username\" y el \"groupname\" son obligatorios.\nEl \"priority\" se setea en 10 por default pero puede ser colocado en cualquier otro valor.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteUserGroup(data: RadUserGroupUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radusergroup/radusergroup.service.ts:335\n                \n            \n\n\n            \n                \n                    Metodo de uso interno, no debe cortar la ejecución en ningún momento.\nPor eso retorna boolean.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver detelles en el radUserGroup.dto en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllUserGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllUserGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/radusergroup/radusergroup.service.ts:111\n                \n            \n\n\n            \n                \n                    Trae todas las entradas que hay en la tabla.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetUserGroupById\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetUserGroupById(data: RadUserGroupUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radusergroup/radusergroup.service.ts:157\n                \n            \n\n\n            \n                \n                    Permite buscar una entrada en particular dentro de la tabla.\nLa busqueda se realiza con el \"username\" y el \"usergroup\", aunque no es necesario tener ambos campos, si es necesario que al menos uno de los dos este presente.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver detelles en el radUserGroup.dto en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateUserGroup(data: RadUserGroupUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/radusergroup/radusergroup.service.ts:252\n                \n            \n\n\n            \n                \n                    Para hacer un update de una entrada se va a requerir todos los campos.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RadUserGroupUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ver detelles en el radUserGroup.dto en carpeta dto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport {\n  RadUserGroupDto,\n  RadUserGroupUpdateDto,\n} from 'src/dto/radUserGroup.dto';\nimport { Not, Repository } from 'typeorm';\n\n/**\n * Originalmente la tabla no posee id y este metodo se creo teniendo en cuenta ese hecho, posteriormente fue agregado  para poder hacer uso del ORM.\n */\n@Injectable()\nexport class RadusergroupService {\n  constructor(\n    @InjectRepository(RadUserGroup)\n    private readonly radUserGroup: Repository,\n    ) {}\n    \n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  /**\n   * Para crear una entrada el \"username\" y el \"groupname\" son obligatorios.\n   * El \"priority\" se setea en 10 por default pero puede ser colocado en cualquier otro valor.\n   * @param data { RadUserGroupDto }\n   * @returns { object }\n   */\n  async CreateRadUserGroup(data: RadUserGroupDto) {\n    try {\n      const { username, groupname, priority } = data;\n\n      const date = new Date();\n      console.log(`Creando nuevo usergroup, con username ${username}, y groupname ${groupname}\\nFecha: ${date}\\n`);\n\n      //* VERIFICA LA EXISTENCIA DEL USUARIO *//\n      const isUserGroup = await this.radUserGroup.findOneBy({\n        username: username,\n        groupname: groupname,\n      });\n      if (isUserGroup) {\n        const str = `Ya existe un UserGroup con username ${username} y groupname ${groupname}.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      const newUserGroup = await this.radUserGroup.create({\n        username,\n        groupname,\n        priority: priority ? priority : 10,\n      });\n\n      const saveUserGroup = await this.radUserGroup.save(newUserGroup);\n\n      if (!saveUserGroup) {\n        const str = `Hubo un problema al salvar los datos de username ${username} y groupname ${groupname}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        \n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(saveUserGroup);\n      console.log(\"\")\n\n      console.log(\n        `usergroup para el username ${username} creado exitosamente.\\n------------------------------------------------\\n`,\n      );\n      return saveUserGroup;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Trae todas las entradas que hay en la tabla.\n   * @todo paginar\n   * @returns { Array }\n   */\n  async GetAllUserGroups() {\n    try {\n      const date = new Date();\n      console.log(`Buscando las entradas de radusergroup.\\nFecha: ${date}\\n`);\n      const allUserGroups = await this.radUserGroup.find();\n\n      if (allUserGroups?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Service.html":{"url":"entities/Service.html","title":"entity - Service","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/service.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clientId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                plan\n                            \n                            \n                                    \n                                radiusId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                sys\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Plan\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, plan => plan.id, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        radiusId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, sys => sys.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/service.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';\nimport { System } from 'src/database/system.entity'\nimport { Plan } from 'src/database/plan.entity'\n\n\n@Entity({ name: 'service' })\nexport class Service {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => System, (sys) => sys.id)\n  sys: System[];\n\n  @Column({ type: 'bigint' })\n  clientId: number;\n\n  @ManyToOne(() => Plan, (plan) => plan.id, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  plan: Plan;\n\n  @Column({ type: 'bigint', unique: true })\n  radiusId: number;\n\n  @Column({ type: 'int' })\n  status: number; //0: Instalacion, 1: Activo, 2: Suspendido, 3: Cancelado, 4: Gratis\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServicesController.html":{"url":"controllers/ServicesController.html","title":"controller - ServicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/services.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n            \n                Description\n            \n            \n                Modulo que reune los principales datos de los servicios prestados a un cliente.\nPrincipalmente trata con el id de Wisphub y Radius.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneOnSys\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    Async\n                                sync\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:30\n                \n            \n\n\n            \n                \n                    Permite crear una nueva entrada en la tabla services.\nRetorna la entrada creada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:39\n                \n            \n\n\n            \n                \n                    Trae todas la entradas encontradas en la tabla services.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:59\n                \n            \n\n\n            \n                \n                    Trae una entrada mendiante el id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOneOnSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneOnSys(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/sys')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:91\n                \n            \n\n\n            \n                \n                    Elimina una entyrada de la tabla service mediante el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        sync\n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(node: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sync/:node')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:81\n                \n            \n\n\n            \n                \n                    Modifica una entrada mediante el id.\nSi por alguna razón, como puede ser que el metodo sea llamado por otro metodo en otro modulo, los parametros de update llegan vacios, la peticion será rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ServicesService } from './services.service';\nimport { CreateServiceDto } from '../dto/create-service.dto';\nimport { UpdateServiceDto } from 'src/dto/update-service.dto';\n// import { UpdateServiceDto } from './dto/update-service.dto';\n\n/**\n * Modulo que reune los principales datos de los servicios prestados a un cliente.\n * Principalmente trata con el id de Wisphub y Radius.\n */\n@Controller('services')\nexport class ServicesController {\n  constructor(private servService: ServicesService) {}\n\n  /**\n   * Permite crear una nueva entrada en la tabla services.\n   * Retorna la entrada creada.\n   * @param createServtDto \n   * @returns { object }\n   */\n  @Post()\n  create(@Body() data: CreateServiceDto) {\n    return this.servService.CreateService(data);\n  }\n\n  /**\n   * Trae todas la entradas encontradas en la tabla services.\n   * @returns { Array }\n   */\n  @Get()\n  findAll() {\n    return this.servService.FindAllServices();\n  }\n\n  /**\n   * \n   * @param node \n   * @returns \n   */\n  @Get('sync/:node')\n  async sync(@Param('node') node: string) {\n    return await this.servService.SyncService(node);\n  }\n\n  /**\n   * Trae una entrada mendiante el id\n   * @param id { number }\n   * @returns { object }\n   */\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.servService.FindOnService(id);\n  }\n\n  /**\n   * \n   * @param id \n   * @returns \n   */\n  @Get(':id/sys')\n  findOneOnSys(@Param('id') id: number) {\n    return this.servService.FindOneOnSys(id);\n  }\n\n  /**\n   * Modifica una entrada mediante el id.\n   * Si por alguna razón, como puede ser que el metodo sea llamado por otro metodo en otro modulo, los parametros de update llegan vacios, la peticion será rechazada.\n   * @param id { number }\n   * @param data { UpdateServDto } \n   * @returns { object }\n   */\n  @Put(':id')\n  update(@Param('id') id: number, @Body() data: UpdateServiceDto) {\n    return this.servService.UpdateService(id, data);\n  }\n\n  /**\n   * Elimina una entyrada de la tabla service mediante el id.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.servService.RemoveService(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_imports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nCoaModule\n\nCoaModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nCoaModule->ServicesModule\n\n\n\n\n\nSystemsModule\n\nSystemsModule\n\nServicesModule -->\n\nSystemsModule->ServicesModule\n\n\n\n\n\nServicesService\n\nServicesService\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo que reuno los principales datos de los servicios prestados a un cliente.\nPrincipalmente el id de Wisphub y Radius.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServicesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServicesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoaModule\n                        \n                        \n                            SystemsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SystemsModule } from 'src/systems/systems.module';\nimport { ServicesController } from './services.controller';\nimport { ServicesService } from './services.service';\n//* ENTIDADES *//\nimport { Plan } from 'src/database/plan.entity';\nimport { Service } from '../database/service.entity';\nimport { ZonaCliente } from 'src/database/node.entity';\nimport { CoaModule } from 'src/coa/coa.module';\nimport { System } from 'src/database/system.entity';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport { UserInfo } from 'src/database/user.entity';\n\n/**\n * Modulo que reuno los principales datos de los servicios prestados a un cliente.\n * Principalmente el id de Wisphub y Radius.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      System,\n      Plan,\n      Service,\n      UserInfo,\n      RadUserGroup,\n      ZonaCliente,\n    ]),\n    SystemsModule,\n    CoaModule,\n  ],\n  controllers: [ServicesController],\n  providers: [ServicesService],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServicesService.html":{"url":"injectables/ServicesService.html","title":"injectable - ServicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/services.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateService\n                            \n                            \n                                    Async\n                                FindAllServices\n                            \n                            \n                                    Async\n                                FindOneOnSys\n                            \n                            \n                                    Async\n                                FindOnService\n                            \n                            \n                                    Async\n                                RemoveService\n                            \n                            \n                                    Async\n                                SyncService\n                            \n                            \n                                    Async\n                                UpdateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(servicesRepository: Repository, userinfoRepository: Repository, radUserGroupRepository: Repository, nodesRepository: Repository, systemsRepository: Repository, plansRepository: Repository, sysServices: SystemsService, coaServices: CoaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/services.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        servicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userinfoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radUserGroupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        systemsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plansRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sysServices\n                                                  \n                                                        \n                                                                        SystemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coaServices\n                                                  \n                                                        \n                                                                        CoaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateService\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateService(service: Service)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:47\n                \n            \n\n\n            \n                \n                    Crea una nueva entrada en la tabla, el id de Radius es opcional dado que es probable que exista en Wisphub pero no en Radius en un primer momento.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                                Service\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllServices\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllServices()\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:104\n                \n            \n\n\n            \n                \n                    Trae toda las entradas en la tabla services.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindOneOnSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindOneOnSys(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:178\n                \n            \n\n\n            \n                \n                    Buca el cliente  por id y se trae informacion del cliente en Wisphub.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindOnService\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindOnService(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:140\n                \n            \n\n\n            \n                \n                    Encuentra una entrada en services mediante el id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RemoveService\n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveService(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:356\n                \n            \n\n\n            \n                \n                    Elimina una entrada en service mendiante el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        SyncService\n                        \n                    \n                \n            \n            \n                \n                    \n                    SyncService(node: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:223\n                \n            \n\n\n            \n                \n                    Revisa la tabla de nodos para ver en que sistema se encuentra un nodo.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateService\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateService(id: number, updateServDto: UpdateServiceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:306\n                \n            \n\n\n            \n                \n                    Realiza update de una entrada mediante el id.\nSi no hay valores para realizar el update se rechaza la peticion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateServDto\n                                    \n                                                UpdateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UpdateServiceDto } from 'src/dto/update-service.dto';\nimport { CoaService } from 'src/coa/coa.service';\nimport { SystemsService } from 'src/systems/systems.service';\n// import { CreateServiceDto } from '../dto/create-service.dto';\n//* EMTIDADES *//\nimport { Service } from '../database/service.entity';\nimport { ZonaCliente } from 'src/database/node.entity';\nimport { System } from 'src/database/system.entity';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport { UserInfo } from 'src/database/user.entity';\nimport { Plan } from 'src/database/plan.entity';\n\n@Injectable()\nexport class ServicesService {\n  constructor(\n    @InjectRepository(Service)\n    private servicesRepository: Repository,\n    @InjectRepository(UserInfo)\n    private userinfoRepository: Repository,\n    @InjectRepository(RadUserGroup)\n    private radUserGroupRepository: Repository,\n    @InjectRepository(ZonaCliente)\n    private nodesRepository: Repository,\n    @InjectRepository(System)\n    private systemsRepository: Repository,\n    @InjectRepository(Plan)\n    private plansRepository: Repository,\n    private sysServices: SystemsService,\n    private coaServices: CoaService,\n  ) {}\n\n  //private readonly services: Service[] = [];\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Crea una nueva entrada en la tabla, el id de Radius es opcional dado que es probable que exista en Wisphub pero no en Radius en un primer momento.\n   * @param service { Service }\n   * @returns { object }\n   */\n  async CreateService(service: Service) {\n    const { sys, clientId, radiusId, plan, status } = service;\n\n    try {\n      //* Creando tabla *//\n      const date = new Date();\n      console.log(\n        `Creado nueva entrada en la tabla 'service' con los valores: sys: ${sys}, clientId: ${clientId}, radiusId: ${radiusId} y plan: ${plan}.\\nFecha: ${date}\\n`,\n      );\n      const serviceNew = this.servicesRepository.create({\n        sys,\n        clientId,\n        radiusId,\n        plan,\n        status: status ? status : 1,\n      });\n\n      //* Salvando tabla y verificación *//\n      const serviceSave = await this.servicesRepository.save(serviceNew);\n      if (!serviceSave) {\n        const str = `Hubo un problema para guardar el servicio`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n\n        const err = new Error(str);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          },\n        );\n      }\n\n      console.log(\n        `Servicio creado exitosamente.\\n------------------------------------------------\\n`,\n      );\n      return serviceSave;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Trae toda las entradas en la tabla services.\n   * @returns { Array }\n   */\n  async FindAllServices() {\n    try {\n      const date = new Date();\n      console.log(`Buscando entradas en 'services.\\nFecha: ${date}\\n`)\n      const services = await this.servicesRepository.find({\n        relations: ['sys', 'plan'],\n      });\n\n      if (services.length  {\n    try {\n      const date = new Date();\n      console.log(`Buscando información en service de la entrada ${id}.\\nFecha: ${date}\\n`);\n      const serv = await this.servicesRepository.findOne({\n        where: { id },\n        relations: ['sys', 'plan'],\n      });\n      const sys = serv.sys;\n      const ep = sys['endPoint'];\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const superagent = require('superagent');\n      const find = await superagent\n        .get(`${ep}${serv.clientId}`)\n        .set('authorization', `Api-Key ${sys['apiKey']}`)\n        .set('content-type', 'application/json')\n        .then((res) => res.body);\n\n      if (!find) {\n        const str = `No se encontro información relativa al servicio con el id: ${id}.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n      }\n\n      console.log(\n        `Servicio encontrado.\\n------------------------------------------------\\n`,\n      );\n      return find;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Revisa la tabla de nodos para ver en que sistema se encuentra un nodo.\n   * @param node\n   * @returns\n   */\n  async SyncService(node: string) {\n    const date = new Date();\n    console.log(`Buscando nodo ${node}}.\\nFecha: ${date}\\n`);\n    try {\n      const nodeSys = await this.nodesRepository.findOne({where:{name:node}, relations:['systems']})\n    const sys = nodeSys['systems']\n    const userinfoNodes = await this.userinfoRepository.find({where:{address:node}})\n    //Si existen clientes en la tabla userinfo\n    if (userinfoNodes.length > 0){\n      // Por cada sistema que aloje el nodo ${node}\n      sys.forEach(async i => {\n        const sysOnNode = await this.sysServices.SysNode(i.id,node)\n        // Para cada uno de los clientes de userinfo\n        userinfoNodes.forEach(async o => {\n          if (await this.radUserGroupRepository.find({where:{username:o.username,priority:0}})){\n          }\n          // Siempre que hayan grupos asociados con cada cliente\n          if (await this.radUserGroupRepository.find({where:{username:o.username}})){\n            // Encontrar en la lista de servicios el correspondiente al radiusId == userinfo.id\n            if (await this.servicesRepository.findOne({where:{radiusId:o.id},relations:['sys','plan']})) {\n          const userService = await this.servicesRepository.findOne({where:{radiusId:o.id},relations:['sys','plan']})\n          let found = false\n          sysOnNode.forEach(async u =>{\n            if (u['id_servicio'] == userService.clientId){\n              //Ubícalo en la lista de clientes del nodo\n              const compServ = u\n              found = true\n              //encuentra el/los grupo/s:\n              if (compServ['estado']=='Suspendido'){\n                if (await this.radUserGroupRepository.findOne({where:{username:o.username,priority:0}})){\n              } else{\n                await this.UpdateService(userService.id,{sys:userService.sys,status:2,clientId:userService.clientId,plan:userService.plan,radiusId:userService.radiusId})\n                this.coaServices.SuspendUser(o.username)\n              }\n              } else if(compServ['estado']=='Cancelado'){\n                if (await this.radUserGroupRepository.findOne({where:{username:o.username,groupname:'cancelado'}})){}\n                 else{\n                  await this.UpdateService(userService.id,{sys:userService.sys,status:3,clientId:userService.clientId,plan:userService.plan,radiusId:userService.radiusId})\n                  this.coaServices.ChangePlan({username:o.username,newgroupname:'cancelado'})\n                }\n                }\n              else {\n                //revisar si no estaba suspendido o cancelado en la tabla de servicios\n                if (userService.status != 1 && userService.status != 4 ){\n                  await this.UpdateService(userService.id,{sys:userService.sys,status:1,clientId:userService.clientId,plan:userService.plan,radiusId:userService.radiusId})\n                  this.coaServices.ActivateUser(o.username)\n                }\n                //encontrar listname del plan del servicio\n                const plan = await this.plansRepository.findOne({where:{name:compServ['plan_internet']['nombre']}})\n                if (plan){\n                if (userService['plan']['id'] != plan.id){\n                  await this.UpdateService(userService.id,{sys:userService.sys,clientId:userService.id,radiusId:userService.radiusId,status:userService.status,plan:{id:plan.id,name:plan.name,listName:plan.listName}})\n                  this.coaServices.ChangePlan({username:o.username,newgroupname:plan.listName})\n                }} else {console.log(`Plan ${compServ['plan_internet']['nombre']} no encontrado en la tabla de planes`)}\n              }\n            }\n          })\n          if (!found){\n            console.log(`ID ${userService.clientId} no encontrado en la lista de ${i.name}`)\n          }\n        } else {console.log(`No encontrado servicio con radiusId == ${o.id}`)}} else {console.log(`No hay grupos asociados a username == ${o.username}`)}\n        })\n      })\n      return `Nodo ${node} sincronizado`;\n    } else {return `Tabla userinfo sin address == ${node}`}\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Realiza update de una entrada mediante el id.\n   * Si no hay valores para realizar el update se rechaza la peticion.\n   * @param id\n   * @param updateServDto\n   * @returns\n   */\n  async UpdateService(id: number, updateServDto: UpdateServiceDto) {\n    const date = new Date();\n    console.log(`Actualizando el servicio con el id: ${id}.\\nFecha: ${date}\\n`);\n    const { radiusId,clientId,status,plan,sys } = updateServDto\n\n    //* Verificacion de valores para modificar *//\n    if (!radiusId || !clientId || !status || !plan || !sys) {\n      const str = `Los campos para acutalizar el servicio están vacios.\\n Se intentó actualizar el servicio con id: ${id}.`;\n      console.log(`${str}\\n------------------------------------------------\\n`);\n    }\n\n    //* Se incia la modificación *//\n    try {\n      console.log(`Realizando update del service ${id}`);\n      const serviceToUpdate = await this.servicesRepository.findOneBy({ id })\n\n      serviceToUpdate.radiusId = radiusId\n      serviceToUpdate.clientId = clientId\n      serviceToUpdate.status = status\n      serviceToUpdate.plan = plan\n      serviceToUpdate.sys = sys\n\n      const serviceUpdated = await this.servicesRepository.save(serviceToUpdate)\n      //* Verificación de update *//\n      if (!serviceUpdated) {\n        const str = `No se pudo realizar update al servicio con el id: ${id}.`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        return str;\n      }\n\n      console.log(`Servicio actualizado exitosamente.\n      \\n------------------------------------------------\\n`);\n      return serviceToUpdate;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Elimina una entrada en service mendiante el id.\n   * @param id\n   */\n  async RemoveService(id: number) {\n    try {\n      const date = new Date();\n      console.log(`Eliminando entrada en service con el id: ${id}.\\nFecha: ${date}\\n`);\n      const del = await this.servicesRepository.delete(id);\n\n      if (!del) {\n        const str = `Hubo un problema al eliminar la entrada`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        return str;\n      }\n\n      console.log(`Servicio eliminado exitosamente.\n      \\n------------------------------------------------\\n`);\n      return del;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/System.html":{"url":"entities/System.html","title":"entity - System","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  System\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/system.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiKey\n                            \n                            \n                                    \n                                endPoint\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                nodes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 250, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/system.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 250, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/system.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/system.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/system.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ZonaCliente[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, node => node.systems, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/system.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  OneToOne,\n  OneToMany,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  PrimaryColumn,\n  JoinColumn,\n} from 'typeorm';\nimport { ZonaCliente } from 'src/database/node.entity';\n\n@Entity({ name: 'system' })\nexport class System {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 200, unique: true })\n  name: string;\n\n  @Column({ type: 'varchar', length: 250, unique: true })\n  apiKey: string;\n\n  @Column({ type: 'varchar', length: 250, unique: true })\n  endPoint: string;\n\n  @ManyToMany(() => ZonaCliente, (node) => node.systems, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  nodes?: ZonaCliente[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SystemsController.html":{"url":"controllers/SystemsController.html","title":"controller - SystemsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SystemsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/systems/systems.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                systems\n            \n\n\n            \n                Description\n            \n            \n                Es la informacion relativa a los sistema de gestion de clientes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                allOnSys\n                            \n                            \n                                    \n                                    Async\n                                createSys\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    Async\n                                sysNode\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        allOnSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    allOnSys(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/all')\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:81\n                \n            \n\n\n            \n                \n                    Busca información de los nodos con un id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSys(data: CreateSystemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:28\n                \n            \n\n\n            \n                \n                    Creacion de entradas. Todos los campos son obligatorios (name, apiKey, endPoint).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSystemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:38\n                \n            \n\n\n            \n                \n                    Busca todas la entradas.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:48\n                \n            \n\n\n            \n                \n                    Busca una entrada en 'System' por Id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:91\n                \n            \n\n\n            \n                \n                    Permite eliminar una entrada de la tabla 'System'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        sysNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    sysNode(id: number, node: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/:node')\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:71\n                \n            \n\n\n            \n                \n                    Buscas todos los servicios en el sistema.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSysDto: UpdateSystemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/systems/systems.controller.ts:60\n                \n            \n\n\n            \n                \n                    Permite modificar una entrada mendiante us id.\nSi todos los parametros están vacíos, la operación es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSysDto\n                                    \n                                                UpdateSystemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SystemsService } from './systems.service';\nimport { CreateSystemDto } from '../dto/create-system.dto';\nimport { UpdateSystemDto } from 'src/dto/update-system.dto';\n\n/**\n * Es la informacion relativa a los sistema de gestion de clientes.\n */\n@Controller('systems')\nexport class SystemsController {\n  constructor(private readonly sysService: SystemsService) {}\n\n  /**\n   * Creacion de entradas. Todos los campos son obligatorios (name, apiKey, endPoint).\n   * @param data { createSysDto }\n   * @returns { object }\n   */\n  @Post()\n  async createSys(@Body() data: CreateSystemDto) {\n    return await this.sysService.CreateSys(data);\n  }\n\n  /**\n   * Busca todas la entradas.\n   * @todo paginar\n   * @returns { Array }\n   */\n  @Get()\n  findAll() {\n    return this.sysService.FindAllSys();\n  }\n\n  /**\n   * Busca una entrada en 'System' por Id.\n   * @param id { number } \n   * @returns { object }\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: number) {\n    return await this.sysService.FindOneSys(id);\n  }\n\n  /**\n   * Permite modificar una entrada mendiante us id.\n   * Si todos los parametros están vacíos, la operación es rechazada.\n   * @param id \n   * @param updateSysDto \n   * @returns { object }\n   */\n  @Put(':id')\n  update(@Param('id') id: number, @Body() updateSysDto: UpdateSystemDto) {\n    return this.sysService.UpdateSys(id, updateSysDto);\n  }\n\n  /**\n   * Buscas todos los servicios en el sistema.\n   * @param id { number }\n   * @param node { string }\n   * @returns { object }\n   */\n  @Get(':id/:node')\n  async sysNode(@Param('id') id: number, @Param('node') node: string) {\n    return await this.sysService.SysNode(id, node);\n  }\n\n  /**\n   * Busca información de los nodos con un id.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Get(':id/all')\n  allOnSys(@Param('id') id: number) {\n    return this.sysService.AllOnSys(id);\n  }\n\n  /**\n   * Permite eliminar una entrada de la tabla 'System'.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.sysService.RemoveSys(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SystemsModule.html":{"url":"modules/SystemsModule.html","title":"module - SystemsModule","body":"\n                   \n\n\n\n\n    Modules\n    SystemsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SystemsModule\n\n\n\ncluster_SystemsModule_providers\n\n\n\ncluster_SystemsModule_exports\n\n\n\n\nSystemsService \n\nSystemsService \n\n\n\nSystemsModule\n\nSystemsModule\n\nSystemsService  -->\n\nSystemsModule->SystemsService \n\n\n\n\n\nSystemsService\n\nSystemsService\n\nSystemsModule -->\n\nSystemsService->SystemsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/systems/systems.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Es la información relativa a los sistema de gestión de clientes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SystemsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SystemsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SystemsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SystemsService } from './systems.service';\nimport { SystemsController } from './systems.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ZonaCliente } from 'src/database/node.entity';\nimport { System } from '../database/system.entity';\n\n/**\n * Es la información relativa a los sistema de gestión de clientes.\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([ZonaCliente, System])],\n  controllers: [SystemsController],\n  providers: [SystemsService],\n  exports: [SystemsService],\n})\nexport class SystemsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SystemsService.html":{"url":"injectables/SystemsService.html","title":"injectable - SystemsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SystemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/systems/systems.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                systems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AllOnSys\n                            \n                            \n                                    Async\n                                CreateSys\n                            \n                            \n                                    Async\n                                FindAllSys\n                            \n                            \n                                    Async\n                                FindOneSys\n                            \n                            \n                                    Async\n                                RemoveSys\n                            \n                            \n                                    Public\n                                    Async\n                                SysNode\n                            \n                            \n                                    Async\n                                UpdateSys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sysRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/systems/systems.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sysRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AllOnSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    AllOnSys(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:183\n                \n            \n\n\n            \n                \n                    Busca todos los servicios en el sistema.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateSys(sys: System)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:27\n                \n            \n\n\n            \n                \n                    Permite crear una nueva entada en la tabla System.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sys\n                                    \n                                                System\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllSys()\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:99\n                \n            \n\n\n            \n                \n                    Devuelve un Array con todos las entradas encontradas.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindOneSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindOneSys(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RemoveSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    RemoveSys(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:347\n                \n            \n\n\n            \n                \n                    Elimina una entrada de ls tabla 'system'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        SysNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    SysNode(id: number, node: string)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:238\n                \n            \n\n\n            \n                \n                    Busca información de los noso con un id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateSys\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateSys(id: number, updateSysDto: UpdateSystemDto)\n                \n            \n\n\n            \n                \n                    Defined in src/systems/systems.service.ts:292\n                \n            \n\n\n            \n                \n                    Permite realizar un update de una entrada de la tabla 'system'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSysDto\n                                    \n                                                UpdateSystemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        systems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/systems/systems.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\n// import { CreateSystemDto } from '../dto/create-system.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { System } from '../database/system.entity';\nimport { UpdateSystemDto } from 'src/dto/update-system.dto';\n\n@Injectable()\nexport class SystemsService {\n  constructor(\n    @InjectRepository(System)\n    private sysRepository: Repository,\n  ) {}\n\n  private readonly systems: System[] = [];\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n  /** \n   * Permite crear una nueva entada en la tabla System.\n   * @param sys { system }\n   * @returns { object } \n   */\n  async CreateSys(sys: System): Promise {\n    const { name, apiKey, endPoint } = sys;\n    //this.systems.push(sys);\n    try {\n      const date = new Date();\n      console.log(`Creando entrada en 'system'.\\nFecha: ${date}\\n`);\n      const isSys = await this.sysRepository.find({\n        where: [{ name }, { apiKey }, { endPoint }]\n      });\n\n      if (isSys.length > 0) {\n        const str = `Ya hay una entrada en la tabla 'system' con alguno de lo valores enviados`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      const systNew = await this.sysRepository.create({\n        name,\n        apiKey,\n        endPoint,\n      });\n\n      const saveSys = await this.sysRepository.save(systNew);\n      if (!saveSys) {\n        const str = `Hubo un error al guardar la entrada en 'system' con los valores name: ${name} y endopoint: ${endPoint}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        \n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(`Guardado exitoso de entrada en 'system' con los valores name: ${name} y endopoint: ${endPoint}`);\n      return saveSys;\n    }\n    catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Devuelve un Array con todos las entradas encontradas.\n   * @returns { Array }\n   */\n  async FindAllSys(): Promise {\n    try {\n      const date = new Date();\n      console.log(`Buscando entradas en la tabla 'system'.\\nFecha: ${date}\\n`)\n      const systems = await this.sysRepository.find();\n\n      if (systems?.length  {\n    try {\n      const date = new Date();\n      console.log(`Buscando una entrada en 'system' con el id: ${id}.\\nFecha: ${date}\\n`)\n\n      const sys = await this.sysRepository.findOneBy({ id });\n\n      if (!sys) {\n        const str = `No se pudo encontrar una entrada en 'system' con el id: ${id}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        \n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(`Entrada encontrada.\\n------------------------------------------------\\n`);\n      return sys;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Busca todos los servicios en el sistema.\n   * @param id { number }\n   * @returns { Array }\n   */\n  async AllOnSys(id: number):  Promise {\n    try {\n      const date = new Date();\n      console.log(`Buscando los servicios en el sistema con el id: ${id}.\\nFecha: ${date}\\n`);\n      const sys = await this.sysRepository.findOneBy({ id });\n\n      if (!sys) {\n        const str = `No se pudo encontrar una entrada en 'system' con el id: ${id}`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        \n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n          {\n            cause: err,\n          }\n        );\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      //const ep = sys.endPoint;\n\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const superagent = require('superagent');\n      const find = await superagent\n        .get(`${sys.endPoint}`)\n        .set('authorization', `Api-Key ${sys.apiKey}`)\n        .set('content-type', 'application/json')\n        .then((res) => res.body['results']);\n\n      console.log(`Servicio(s) encontrados`);\n      return find;\n    }\n    catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Busca información de los noso con un id.\n   * @param id { number }\n   * @param node { string }\n   * @returns \n   */\n  public async SysNode(id: number, node: string) {\n    try {\n      const date = new Date();\n      console.log(`Buscando información de los nodos.\\nFecha: ${date}\\n`);\n\n      const all = await this.AllOnSys(id);\n      console.log(node);\n      const nodeList: any[] = [];\n      all.forEach(async (i) => {\n        if (i['router']['nombre'] == node) {\n          nodeList.push(i);\n        }\n      });\n      console.log(nodeList);\n      const nodos = await nodeList;\n\n      if (nodeList?.length  {\n    try {\n      const date = new Date();\n      console.log(`Eliminando entrada de 'system' con el id: ${id}\\nFecha: ${date}\\n`);\n\n      const del = await this.sysRepository.delete(id);\n\n      if (!del) {\n        const str = `Hubo un error al elminar la entrada`;\n        console.log(`${str}\\n------------------------------------------------\\n`);\n        \n        const err = new Error(str)\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          {\n            cause: err,\n          }\n        );\n      }\n\n      console.log(`Entrada eliminada exitosamente.`);\n      return del;\n    }\n    catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNodeDto.html":{"url":"classes/UpdateNodeDto.html","title":"class - UpdateNodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/update-node.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                systems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/database/update-node.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/update-node.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        systems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/update-node.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsIP,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { System } from 'src/database/system.entity';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { CreateNodeDto } from './create-node.dto';\n\nexport class UpdateNodeDto extends PartialType(CreateNodeDto) {\n  id: number;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  systems: System[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlanDto.html":{"url":"classes/UpdatePlanDto.html","title":"class - UpdatePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/plan.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class CreatePlanDto {\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  listName: string;\n}\n\n\nexport class UpdatePlanDto extends PartialType(CreatePlanDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto.html":{"url":"classes/UpdateServiceDto.html","title":"class - UpdateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/update-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                clientId\n                            \n                            \n                                    \n                                plan\n                            \n                            \n                                    \n                                    \n                                radiusId\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                sys\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/update-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Plan\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/update-service.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        radiusId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/update-service.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/update-service.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/update-service.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateServiceDto } from './create-service.dto';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { System } from 'src/database/system.entity';\nimport { Plan } from 'src/database/plan.entity';\n\nexport class UpdateServiceDto extends PartialType(CreateServiceDto) {\n  @IsOptional()\n  sys: System[];\n\n  @IsOptional()\n  @IsNumber()\n  clientId: number;\n\n  @IsOptional()\n  plan: Plan;\n\n  @IsOptional()\n  @IsNumber()\n  radiusId: number;\n\n  @IsOptional()\n  @IsNumber()\n  status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSystemDto.html":{"url":"classes/UpdateSystemDto.html","title":"class - UpdateSystemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSystemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/update-system.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSystemDto } from './create-system.dto';\n\nexport class UpdateSystemDto extends PartialType(CreateSystemDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                creationby\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                updateby\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:44\n                        \n                    \n\n            \n                \n                    Nodo/zona\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:37\n                        \n                    \n\n            \n                \n                    Usuario que crea el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:55\n                        \n                    \n\n            \n                \n                                                                                    *CAMPOS OPCIONALES                                                   *\nSe dejan estos campos para un posible uso futuro                    *\n                                                                    *\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Empresas\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Empresas)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:23\n                        \n                    \n\n            \n                \n                    Nombre de la empresa asociada (Netcom o NC)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:125\n                        \n                    \n\n            \n                \n                    Plan asignado al cliente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:30\n                        \n                    \n\n            \n                \n                    ID de Wisphub.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@Min(0)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:134\n                        \n                    \n\n            \n                \n                    Prioridad del cliente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:62\n                        \n                    \n\n            \n                \n                    Usuario que realiza el ultimo update\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:15\n                        \n                    \n\n            \n                \n                    Serial de la Onu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\n\nenum Empresas {\n  NPCA = \"NPCA\",\n  INYC = \"INYC\"\n}\n\nexport class UserDto {\n  /**\n   * Serial de la Onu.\n   */\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  /**\n   * Nombre de la empresa asociada (Netcom o NC)\n   */\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Empresas)\n  firstname: Empresas;\n\n  /**\n   * ID de Wisphub.\n   */\n  @IsNotEmpty()\n  @IsString()\n  lastname: string;\n\n  /**\n   * Usuario que crea el registro\n   */\n  @IsNotEmpty()\n  @IsString()\n  creationby: string;\n\n  /**\n   * Nodo/zona\n   */\n  @IsNotEmpty()\n  @IsString()\n  address: string;\n\n\n  /***********************************************************************\n   *                                                                     *\n   * CAMPOS OPCIONALES                                                   *\n   * Se dejan estos campos para un posible uso futuro                    *\n   *                                                                     *\n   ***********************************************************************/\n  @IsOptional()\n  @IsString()\n  email: string;\n\n    /**\n   * Usuario que realiza el ultimo update\n   */\n    @IsOptional()\n    @IsString()\n    updateby: string;\n  \n\n  @IsOptional()\n  @IsString()\n  department: string;\n\n  @IsOptional()\n  @IsString()\n  company: string;\n\n  @IsOptional()\n  @IsString()\n  workphone: string;\n\n  @IsOptional()\n  @IsString()\n  homephone: string\n  \n  @IsOptional()\n  @IsString()\n  mobilephone: string;\n\n\n  @IsOptional()\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state: string;\n\n  @IsOptional()\n  @IsString()\n  zip: string;\n\n  @IsOptional()\n  @IsString()\n  notes: string;\n\n  @IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n  @IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n  @IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n\n  // RADCHECK\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  // RADUSERGROUP\n    /**\n   * Plan asignado al cliente\n   */\n    @IsNotEmpty()\n    @IsString()\n    groupname: string;\n\n    /**\n     * Prioridad del cliente\n     */\n    @IsOptional()\n    @IsNumber()\n    @Min(0)\n    @Max(10)\n    priority: number;\n\n\n  @IsOptional()\n  name: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserInfo.html":{"url":"entities/UserInfo.html","title":"entity - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                creationby\n                            \n                            \n                                    \n                                creationdate\n                            \n                            \n                                    \n                                department\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                firstname\n                            \n                            \n                                    \n                                homephone\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastname\n                            \n                            \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                updateby\n                            \n                            \n                                    \n                                updatedate\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                workphone\n                            \n                            \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, default: 'Venezuela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creationdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'userinfo' })\nexport class UserInfo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 128, unique: true })\n  username: string;\n\n  @Column({ type: 'varchar', length: 200 })\n  firstname: string;\n\n  @Column({ type: 'varchar', length: 200 })\n  lastname: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  email: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  department: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  company: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  workphone: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  homephone: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  mobilephone: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  address: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  city: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  state: string;\n\n  @Column({ type: 'varchar', length: 100, default: 'Venezuela' })\n  country: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  zip: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: true })\n  notes: string;\n\n  @Column({ type: 'varchar', length: 128, nullable: true })\n  changeuserinfo: string;\n\n  @Column({ type: 'varchar', length: 128, default: '' })\n  portalloginpassword: string;\n\n  @Column({ type: 'int', default: 0 })\n  enableportallogin: number;\n\n  @Column({ type: 'timestamp'})\n  creationdate: Date;\n\n  @Column({ type: 'varchar', length: 128 })\n  creationby: string;\n\n  @Column({ type: 'timestamp', nullable: true })\n  updatedate: Date;\n\n  @Column({ type: 'varchar', length: 128 })\n  updateby: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserInfoController.html":{"url":"controllers/UserInfoController.html","title":"controller - UserInfoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserInfoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-info/user-info.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-info\n            \n\n\n            \n                Description\n            \n            \n                Controller principal relativo a los usuarios de los servicios de NetcomPlus.\nLos usuarios son manipulados para lograr efecto en 'Radius' y el router que este controla.\nLa ruta principal para este controller es http:///user-info/\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                deleteByUsername\n                            \n                            \n                                    \n                                findAllUser\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user-info/user-info.controller.ts:32\n                \n            \n\n\n            \n                \n                    Permite crear un nuevo usuario.\nLa tabla 'userinfo' de Radius contiene muchos campos, no todos son utilizados en este momento por Netcomplus,\nni todos son usados directamente como lo sugieren los campos. Remitase al UserDto o UserEntity\npara ver los campos necesarios y los opcionales.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        deleteByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')\n                \n            \n\n            \n                \n                    Defined in src/user-info/user-info.controller.ts:73\n                \n            \n\n\n            \n                \n                    Función opuesta a createUser.\nBirra a un usuario de las tres tablas dónde está reegistrado.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user-info/user-info.controller.ts:41\n                \n            \n\n\n            \n                \n                    Obtiene todos los servicios asociados a la tabla 'userinfo'\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user-info/user-info.controller.ts:51\n                \n            \n\n\n            \n                \n                    Permite buscar un usuario en base a su id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(id: number, data: UserUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/user-info/user-info.controller.ts:62\n                \n            \n\n\n            \n                \n                    Permite modificar un usuario.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { UserInfoService } from './user-info.service';\nimport { UserDto } from 'src/dto/user.dto';\nimport { UserUpdateDto } from 'src/dto/userUpdate.dto';\n\n/**\n * Controller principal relativo a los usuarios de los servicios de NetcomPlus.\n * Los usuarios son manipulados para lograr efecto en 'Radius' y el router que este controla.\n * La ruta principal para este controller es http:///user-info/ \n */\n@Controller('user-info')\nexport class UserInfoController {\n  constructor(private readonly userInfoService: UserInfoService) {}\n\n  /**\n   * Permite crear un nuevo usuario.\n   * La tabla 'userinfo' de Radius contiene muchos campos, no todos son utilizados en este momento por Netcomplus,\n   * ni todos son usados directamente como lo sugieren los campos. Remitase al UserDto o UserEntity\n   * para ver los campos necesarios y los opcionales.\n   * @param data { userDto }\n   * @returns { Userinfo }\n   */\n  @Post()\n  createUser(@Body() data: UserDto) {\n    return this.userInfoService.CreateUser(data);\n  }\n\n  /**\n   * Obtiene todos los servicios asociados a la tabla 'userinfo'\n   * @returns { UserInfo[] }\n   */\n  @Get()\n  findAllUser() {\n    return this.userInfoService.FindAllUsers();\n  }\n\n  /**\n   * Permite buscar un usuario en base a su id\n   * @param id { number }\n   * @returns { UserInfo }\n   */\n  @Get(':id')\n  findById(@Param('id') id: number) {\n    return this.userInfoService.FindById(id);\n  }\n\n  /**\n   * Permite modificar un usuario.\n   * @param id \n   * @param data \n   * @returns { Userinfo }\n   */\n  @Put(':id')\n  updateUserInfo(@Param('id') id: number, @Body() data: UserUpdateDto) {\n    return this.userInfoService.UpdateUserInfo(id, data);\n  }\n\n  /**\n   * Función opuesta a createUser.\n   * Birra a un usuario de las tres tablas dónde está reegistrado.\n   * @param username \n   * @returns { string }\n   */\n  @Delete(':username')\n  deleteByUsername(@Param('username') username: string) {\n    return this.userInfoService.DeleteByUsername(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInfoModule.html":{"url":"modules/UserInfoModule.html","title":"module - UserInfoModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInfoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserInfoModule\n\n\n\ncluster_UserInfoModule_providers\n\n\n\n\nUserInfoService\n\nUserInfoService\n\n\n\nUserInfoModule\n\nUserInfoModule\n\nUserInfoModule -->\n\nUserInfoService->UserInfoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-info/user-info.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo principal relativo a los usuarios de los servicios de NetcomPlus.\nLos usuarios son manipulados para lograr efecto en 'Radius' y el router que este controla.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserInfoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserInfoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserInfoService } from './user-info.service';\nimport { UserInfoController } from './user-info.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RadCheck } from 'src/database/radcheck.entity';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport { UserInfo } from 'src/database/user.entity';\nimport { RadGroupReply } from 'src/database/radgroupreply.entity';\n\n/**\n * Modulo principal relativo a los usuarios de los servicios de NetcomPlus.\n * Los usuarios son manipulados para lograr efecto en 'Radius' y el router que este controla.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserInfo, RadCheck, RadUserGroup, RadGroupReply]),\n  ],\n  providers: [UserInfoService],\n  controllers: [UserInfoController],\n})\nexport class UserInfoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserInfoService.html":{"url":"injectables/UserInfoService.html","title":"injectable - UserInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-info/user-info.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateUser\n                            \n                            \n                                    Async\n                                DeleteByUsername\n                            \n                            \n                                    Async\n                                FindAllUsers\n                            \n                            \n                                    Async\n                                FindById\n                            \n                            \n                                    Async\n                                UpdateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, radCheckRepository: Repository, radUserGroupRepository: Repository, radGroupReply: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user-info/user-info.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radCheckRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radUserGroupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radGroupReply\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUser(data: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user-info/user-info.service.ts:36\n                \n            \n\n\n            \n                \n                    Enpoint principal de la app.\nLa info puede ser enviada varias veces, en caso de que los datos ya se encuentren en la BD,\nse har´s un salto a la siguiente parte del proceso.\nEsto con motivo de que si por alguna razón, fallara el proceso de guardado, se pueda reintentar inmediatamente.\nRetorna el objeto creado más un campo 'msj' con todos los mensajes del proceso.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user-info/user-info.service.ts:490\n                \n            \n\n\n            \n                \n                    Permite eliminar a un usuario de la tres tablas usadas para ser creado.\nEn sintesis es el opuesto de CreateUser.\nusa el username para eliminar al usuario,, si por alguna razón la entrada no existe en alguna de las tablas no genera error y se pasa a la opercion siguiente.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/user-info/user-info.service.ts:295\n                \n            \n\n\n            \n                \n                    Devuelve un array/lista con todas las entradas encontradas.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindById\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user-info/user-info.service.ts:338\n                \n            \n\n\n            \n                \n                    Buscan una entrada en la tbla 'userinfo' a traves del id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateUserInfo(id: number, data: UserUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user-info/user-info.service.ts:384\n                \n            \n\n\n            \n                \n                    Permite modificar una entrada de la tabla 'userinfo'.\nSi la entrada no existe la operación es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Not, Repository } from 'typeorm';\nimport { UserDto } from 'src/dto/user.dto';\nimport { RadCheck } from 'src/database/radcheck.entity';\nimport { RadUserGroup } from 'src/database/radusergroup.entity';\nimport { UserInfo } from 'src/database/user.entity';\nimport { UserUpdateDto } from 'src/dto/userUpdate.dto';\nimport { RadGroupReply } from 'src/database/radgroupreply.entity';\n\n@Injectable()\nexport class UserInfoService {\n  constructor(\n    @InjectRepository(UserInfo)\n    private usersRepository: Repository,\n    @InjectRepository(RadCheck)\n    private radCheckRepository: Repository,\n    @InjectRepository(RadUserGroup)\n    private radUserGroupRepository: Repository,\n    @InjectRepository(RadGroupReply)\n    private radGroupReply: Repository,\n  ) {}\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Enpoint principal de la app.\n   * La info puede ser enviada varias veces, en caso de que los datos ya se encuentren en la BD,\n   * se har´s un salto a la siguiente parte del proceso. \n   * Esto con motivo de que si por alguna razón, fallara el proceso de guardado, se pueda reintentar inmediatamente.\n   * Retorna el objeto creado más un campo 'msj' con todos los mensajes del proceso.\n   * @param data { UserDto }\n   * @returns { object }\n   */\n  async CreateUser(data: UserDto) {\n    const date = new Date();\n    console.log(`Se inicia creación de usuario.\\nFecha: ${date}\\n`)\n    try {\n      const {\n        firstname,\n        lastname,\n        username,\n        creationby,\n        groupname,\n        priority,\n        address,\n        password,\n      } = data;\n\n      let msj = '';\n      /////////////////////////////////////////////////////////////////////////////\n      //      USERINFO                                                          //\n      /////////////////////////////////////////////////////////////////////////////\n\n      //* Si no existe el plan se aborta toda la operación *//\n      const isPlan = await this.radGroupReply.findOneBy({ groupname });\n      if(!isPlan) {\n        const err = new Error('El plan no existe en la base de datos.')\n        throw new HttpException(\n          {\n            status: HttpStatus.BAD_REQUEST,\n            error: 'El plan no existe en la base de datos.',\n          },\n          HttpStatus.BAD_REQUEST,\n          {\n            cause: err,\n          },\n        );\n      };\n\n      console.log(`Creando el usuario/onu: ${username}`);\n\n      //* Se verifica si ya hay un username en la BD *//\n      const ifUser = await this.usersRepository.findOneBy({\n        username: username,\n      });\n\n\n      let user;\n      if (ifUser) {\n        // Si exite se salta al siguiente paso.\n        const str = `El username/onu: ${username} ya esta registrada como usuario.\\n`;\n        msj += str;\n        console.log(`${str}`);\n        user = ifUser;\n      }\n      else {\n        const nowDate = new Date();\n\n        const newLocal = this.usersRepository.create({\n          firstname: firstname,\n          lastname: lastname,\n          username: username,\n          creationby: creationby,\n          address: address,\n          /* CAMPOS OPCIONALES */\n          // La idea es no dejar campos vacíos que pudioeran ser explotados por un Hacker.\n          // Por otro lado, siempre se hace una lectura de todos los campos en el 'dto' por si en algun momento futuro se llega a necesitar. \n          updateby: creationby, // se deja igual que creation by, lo que indica que nunca se le ha hecho update.\n          email: data?.email ? data.email : '0',\n          country: 'Venezuela',\n          department: data?.department ? data.department : '0',\n          company: data?.company ? data.company : '0',\n          workphone: data?.workphone ? data.workphone : '0',\n          homephone: data?.homephone ? data.homephone : '0',\n          mobilephone: data?.mobilephone ? data.mobilephone : '0',\n          city: data?.city ? data.city : '0',\n          state: data?.state ? data.state : '0',\n          zip: data?.zip ? data.zip : '0',\n          notes: data?.notes ? data.notes : 'Sin notas',\n          changeuserinfo: data?.changeuserinfo ? data.changeuserinfo : '0',\n          portalloginpassword: data?.portalloginpassword\n            ? data.portalloginpassword\n            : '0',\n          enableportallogin: data?.enableportallogin ? data.enableportallogin : 0,\n          creationdate: nowDate,\n          updatedate: nowDate,\n\n        });\n        const newUser = newLocal;\n        console.log(newUser);\n        user = await this.usersRepository.save(newUser);\n\n        //* Verifica que el usuario haya sido creado exitosamente *//\n        if (!user) {\n          // Si falla en este punto se corta la ejecución y se envia msj de error.\n          const str = `No se pudo crear el usuario/onu: ${username}`;\n          console.log(`------------------------------------------------\\n`);\n  \n          const err = new Error(str);\n          throw new HttpException(\n            {\n              status: HttpStatus.INTERNAL_SERVER_ERROR,\n              error: str,\n            },\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            {\n              cause: err,\n            },\n          );\n        }\n      }\n\n      /////////////////////////////////////////////////////////////////////////////\n      //       RADCHECK                                                          //\n      /////////////////////////////////////////////////////////////////////////////\n\n      console.log(`Registrando radcheck de ${username}`);\n\n      const isRadcheck = await this.radCheckRepository.findOneBy({username})\n      //* Se verifica si existe la entrada en la tabla para ese username *//\n      if (isRadcheck) {\n        // Evalua si el password es igual.\n        if(!(isRadcheck.value === password)) {\n          const str = `El password difiere, se procede a actualizar.\\n`;\n          isRadcheck.value = password;\n          console.log(`${str}`);\n          msj += str;\n          const actualizedRadcheck = await this.radCheckRepository.save(isRadcheck);\n          // Verifica si hubo error en la actualizacion del password\n          if(!actualizedRadcheck) {\n            const str = `Hubo un problema al actualizar el password de: ${username}.\\n`;\n            console.log(`${str}`);\n            msj += str;\n          }\n        }\n          // Si no hay necesidad de actualizar el password se añade este msj.\n        else {\n          const str = `Ya existe una entrada radcheck para el usuario: ${username}, y con el mismo password.\\n`;\n          console.log(`${str}`);\n          msj += str;\n        }\n      }\n      //* Si el usuario no existe en la tabla, se procede a ser creado *//\n      else {\n        \n      const radcheckCreate = this.radCheckRepository.create({\n        username: username,\n        attribute: 'Cleartext-Password',\n        op: ':=',\n        value: password,\n      });\n\n      const saveRadCheck = await this.radCheckRepository.save(radcheckCreate);\n      // Se verifica que la entrada haya sido creada exitosamente.\n      if (!saveRadCheck) {\n        const str = `Hubo un error al guardar los datos del usuario/onu: ${username} en la tabla \"radcheck\"\\n.`;\n        console.log(`${str}`);\n        msj += str\n\n        const err = new Error(str);\n          throw new HttpException(\n            {\n              status: HttpStatus.INTERNAL_SERVER_ERROR,\n              error: str,\n            },\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            {\n              cause: err,\n            },\n          );\n      }\n      console.log(`\\nExito al registrar el RADCHECK`);\n      }\n\n      /////////////////////////////////////////////////////////////////////////////\n      //       RADUSERGROUP                                                      //\n      /////////////////////////////////////////////////////////////////////////////\n\n      console.log(`Registrando usergroup de ${username}`);\n\n      //* Se realiza la busqueda de username con usergroup *//\n      const isRadduser = await this.radUserGroupRepository.findBy({ username, groupname: Not(\"suspendido\") });\n\n      if( isRadduser?.length > 0 ){\n        // Solo debe haber una entrada, si hay mas se envia un msj de alerta.\n        if (isRadduser?.length > 1) {\n          const alerta = `ALERTA: Existen múltiples entradas para el username: ${username}, donde el ‘groupname‘ no es ‘suspendido’. Posiblemente suscrito a más de un plan \\nPOR FAVOR ALERTAR A INGIENERIA.\\n`;\n          console.log(alerta);\n          msj += alerta;\n        }// Se verifica que los planes coincidan.\n        else if (!(isRadduser[0].groupname === groupname)) {\n          const str = `Ya existe una entrada en 'radusergroup' pero los planes no coinciden, se procede a actualizar`;\n          console.log(str);\n          msj += str\n          isRadduser[0].groupname = groupname;\n          const userGrooupActulized = await this.radUserGroupRepository.save(isRadduser);\n          // Verifica la actualización.\n          if (!userGrooupActulized) {\n            const str = `Actualizacion de 'radusergroup' para username:${username} fallida.\\n`;\n            msj += str\n            console.log(str);\n          }\n          else {\n            const str = `Actualizacion de 'radusergroup' para username:${username} exitosa.\\n`;\n            msj += str\n            console.log(str);\n          }\n        }// Si lo planes coinciden no se realiza ninguna operación.\n        else {\n          const str = `Ya existía una entrada en 'radusergroup' para username:${username}. Los planes coinciden.\\n`;\n          msj += str\n          console.log(str);\n        }\n      }//* Si no existe la entrada en la tabla. *//\n      else {\n        const usergroup = await this.radUserGroupRepository.create({\n          username: username,\n          groupname: groupname,\n          priority: priority ? priority : 10,\n        });\n  \n        const saveUserGroup = await this.radUserGroupRepository.save(usergroup);\n  \n        //* Verifica que la entrada se haya guardado exitosamente *//\n        if (!saveUserGroup) {\n          const str = `Hubo un error al guardar los datos del usuario/onu ${username} en la tabla \"radusergroup\".`;\n          console.log(`------------------------------------------------\\n`);\n  \n          const err = new Error(str);\n          throw new HttpException(\n            {\n              status: HttpStatus.INTERNAL_SERVER_ERROR,\n              error: str,\n            },\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            {\n              cause: err,\n            },\n          );\n        }\n      }\n\n      console.log(`Usuario/onu ${username} registrado exitosamente`);\n      console.log(`------------------------------------------------\\n`);\n\n      user.message = msj;\n      return user;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Devuelve un array/lista con todas las entradas encontradas.\n   * @returns { Array }\n   */\n  async FindAllUsers(): Promise {\n    const date = new Date();\n    console.log(`Se inicia busqueda de usuarios.\\nFecha: ${date}\\n`)\n    try {\n      const users = await this.usersRepository.find();\n\n      if (users?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateDto.html":{"url":"classes/UserUpdateDto.html","title":"class - UserUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/userUpdate.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                creationby\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                updateby\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:39\n                        \n                    \n\n            \n                \n                    Usuario que crea el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:18\n                        \n                    \n\n            \n                \n                    Nombre de la empresa asociada (Netcom o NC)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:25\n                        \n                    \n\n            \n                \n                    ID de Wisphub.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:32\n                        \n                    \n\n            \n                \n                    Usuario que realiza el ultimo update\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:11\n                        \n                    \n\n            \n                \n                    Serial de la Onu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/userUpdate.dto.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class UserUpdateDto {\n\n  /**\n   * Serial de la Onu.\n   */\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  /**\n   * Nombre de la empresa asociada (Netcom o NC)\n   */\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  /**\n   * ID de Wisphub.\n   */\n  @IsOptional()\n  @IsString()\n  lastname: string;\n\n  /**\n   * Usuario que realiza el ultimo update\n   */\n  @IsOptional()\n  @IsString()\n  updateby: string;\n\n  /**\n   * Usuario que crea el registro\n   */\n  @IsOptional()\n  @IsString()\n  creationby: string;\n\n  @IsOptional()\n  @IsString()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  department: string;\n\n  @IsOptional()\n  @IsString()\n  company: string;\n\n  @IsOptional()\n  @IsString()\n  workphone: string;\n\n  @IsOptional()\n  @IsString()\n  homephone: string\n  \n  @IsOptional()\n  @IsString()\n  mobilephone: string;\n\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  @IsOptional()\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state: string;\n\n  @IsOptional()\n  @IsString()\n  zip: string;\n\n  @IsOptional()\n  @IsString()\n  notes: string;\n\n  @IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n  @IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n  @IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ZonaCliente.html":{"url":"entities/ZonaCliente.html","title":"entity - ZonaCliente","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ZonaCliente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/node.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                systems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/node.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/node.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        systems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         System[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinTable()@ManyToMany(undefined, system => system.nodes, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/node.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n} from 'typeorm';\nimport { System } from 'src/database/system.entity'\n\n@Entity()\nexport class ZonaCliente {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 100, unique: true })\n  name: string;\n\n  @JoinTable()\n  @ManyToMany(\n    () => System, \n    system => system.nodes,\n    {onDelete: 'CASCADE',\n      onUpdate:'CASCADE'})\n  systems?: System[]\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Zone.html":{"url":"entities/Zone.html","title":"entity - Zone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Zone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/zone.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codigo_zona\n                            \n                            \n                                    \n                                coord\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                Nas\n                            \n                            \n                                    \n                                tlf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigo_zona\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 30, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 60, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Nas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tlf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/zone.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'zone' })\nexport class Zone {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 128, unique: true })\n  name: string;\n\n\t@Column({ type: 'varchar', length: 32, unique: false })\n  tlf: string;\n\n\t@Column({ type: 'varchar', length: 30, unique: false })\n  codigo_zona: string;\n\n\t@Column({ type: 'int', unique: false })\n  Nas: number;\n\n\t@Column({ type: 'varchar', length: 60, unique: false })\n  coord: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ZoneController.html":{"url":"controllers/ZoneController.html","title":"controller - ZoneController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ZoneController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/zone/zone.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                zone\n            \n\n\n            \n                Description\n            \n            \n                Esta tabla guarda todo lo reltaivo a las zonas que se relacionan a los servicios.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createZone\n                            \n                            \n                                    \n                                findAllZone\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                updateZone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    createZone(data: ZoneDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/zone/zone.controller.ts:18\n                \n            \n\n\n            \n                \n                    Crea una nueva entrada en en la tabla. Todos los campos son obligatorios.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ZoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAllZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllZone()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/zone/zone.controller.ts:27\n                \n            \n\n\n            \n                \n                    Obtiene todas las entradas de la tabla \"zone\".\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/zone/zone.controller.ts:37\n                \n            \n\n\n            \n                \n                    Permite obtener una entrada mediante el uso del id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZone(id: number, data: ZoneDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/zone/zone.controller.ts:48\n                \n            \n\n\n            \n                \n                    Permite modificar unaentrada mediante su id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ZoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\nimport { ZoneService } from './zone.service';\nimport { ZoneDto } from 'src/dto/zone.dto';\n\n/**\n * Esta tabla guarda todo lo reltaivo a las zonas que se relacionan a los servicios.\n */\n@Controller('zone')\nexport class ZoneController {\n  constructor(private readonly zoneService: ZoneService) {}\n\n  /**\n   * Crea una nueva entrada en en la tabla. Todos los campos son obligatorios.\n   * @param data { ZoneDto }\n   * @returns { object }\n   */\n  @Post()\n  createZone(@Body() data: ZoneDto) {\n    return this.zoneService.CreateZone(data);\n  }\n\n  /**\n   * Obtiene todas las entradas de la tabla \"zone\".\n   * @returns { Array }\n   */\n  @Get()\n  findAllZone() {\n    return this.zoneService.FindAllZones();\n  }\n\n  /**\n   * Permite obtener una entrada mediante el uso del id.\n   * @param id { number }\n   * @returns { object }\n   */\n  @Get(':id')\n  findById(@Param('id') id: number) {\n    return this.zoneService.FindById(id);\n  }\n\n  /**\n   * Permite modificar unaentrada mediante su id.\n   * @param id { number }\n   * @param data { ZoneDto }\n   * @returns { object }\n   */\n  @Put(':id')\n  updateZone(@Param('id') id: number, @Body() data: ZoneDto) {\n    return this.zoneService.UpdateZone(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ZoneDto.html":{"url":"classes/ZoneDto.html","title":"class - ZoneDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ZoneDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/zone.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                codigo_zona\n                            \n                            \n                                    \n                                    \n                                coord\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                Nas\n                            \n                            \n                                    \n                                    \n                                tlf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codigo_zona\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Nas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tlf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ZoneDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  tlf: string;\n\n  @IsNotEmpty()\n  @IsString()\n  codigo_zona: string;\n\n\t@IsNotEmpty()\n  @IsNumber()\n  Nas: number;\n\n\t@IsNotEmpty()\n  @IsString()\n  coord: string;\n}\n\nexport class ZoneUpadateDto {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  tlf: string;\n\n  @IsOptional()\n  @IsString()\n  codigo_zona: string;\n\n  @IsOptional()\n  @IsNumber()\n  Nas: number;\n\n  @IsOptional()\n  @IsString()\n  coord: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZoneModule.html":{"url":"modules/ZoneModule.html","title":"module - ZoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ZoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZoneModule\n\n\n\ncluster_ZoneModule_providers\n\n\n\n\nNasService\n\nNasService\n\n\n\nZoneModule\n\nZoneModule\n\nZoneModule -->\n\nNasService->ZoneModule\n\n\n\n\n\nZoneService\n\nZoneService\n\nZoneModule -->\n\nZoneService->ZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/zone/zone.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Esta tabla guarda todo lo reltaivo a las zonas que se relacionan a los servicios.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NasService\n                        \n                        \n                            ZoneService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ZoneController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ZoneController } from './zone.controller';\nimport { ZoneService } from './zone.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Zone } from 'src/database/zone.entity';\nimport { NasService } from 'src/nas/nas.service';\nimport { Nas } from 'src/database/nas.entity';\n\n/**\n * Esta tabla guarda todo lo reltaivo a las zonas que se relacionan a los servicios.\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Zone, Nas])],\n  controllers: [ZoneController],\n  providers: [ZoneService, NasService],\n})\nexport class ZoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoneService.html":{"url":"injectables/ZoneService.html","title":"injectable - ZoneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/zone/zone.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Metodos para manipular la tabla zone.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateZone\n                            \n                            \n                                    Async\n                                FindAllZones\n                            \n                            \n                                    Async\n                                FindById\n                            \n                            \n                                    Async\n                                UpdateZone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(zoneRepository: Repository, nasRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/zone/zone.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zoneRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nasRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateZone(data: ZoneDto)\n                \n            \n\n\n            \n                \n                    Defined in src/zone/zone.service.ts:30\n                \n            \n\n\n            \n                \n                    Crea una nueva entrada en la tabla.\nTodos los parametros de la desestructuracion son necesarios para crear una zona,\n{ name, tlf, codigo_zona, Nas, coord }, si falta alguno el dto rechazara la peticion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ZoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindAllZones\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindAllZones()\n                \n            \n\n\n            \n                \n                    Defined in src/zone/zone.service.ts:108\n                \n            \n\n\n            \n                \n                    Permite traer todas las entradas que posee la tabla.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindById\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/zone/zone.service.ts:141\n                \n            \n\n\n            \n                \n                    Encuentra una entrada haciendo uso del id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateZone(id: number, data: ZoneDto)\n                \n            \n\n\n            \n                \n                    Defined in src/zone/zone.service.ts:178\n                \n            \n\n\n            \n                \n                    Permite realizar un update de una entrada usando el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ZoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Nas } from 'src/database/nas.entity';\nimport { Zone } from 'src/database/zone.entity';\nimport { ZoneDto } from 'src/dto/zone.dto';\nimport { Repository } from 'typeorm';\n\n/**\n * Metodos para manipular la tabla zone.\n */\n@Injectable()\nexport class ZoneService {\n  constructor(\n    @InjectRepository(Zone)\n    private zoneRepository: Repository,\n    @InjectRepository(Nas)\n    private nasRepository: Repository,\n  ) {}\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Crea una nueva entrada en la tabla.\n   * Todos los parametros de la desestructuracion son necesarios para crear una zona,\n   * { name, tlf, codigo_zona, Nas, coord }, si falta alguno el dto rechazara la peticion.\n   * @param data { ZoneDto }\n   * @returns { object }\n   */\n  async CreateZone(data: ZoneDto) {\n    const { name, tlf, codigo_zona, Nas, coord } = data;\n\n    console.log(\n      `Creando nueva zona con los valores name: ${name}, tlg: ${tlf}, codigo_zona: ${codigo_zona}, Nas: ${Nas} y coord: ${coord}`,\n    );\n\n    try {\n      //* Verifica que el NAS sea valido *//\n      const isNas = await this.nasRepository.findOneBy({ id: Nas });\n      if (!isNas) {\n        const str = `El id del NAS: ${Nas}, no existe en la Base de Datos`;\n        console.log(\n          `${str}\\n------------------------------------------------\\n`,\n        );\n        throw new HttpException(\n          {\n            status: HttpStatus.NOT_FOUND,\n            error: str,\n          },\n          HttpStatus.NOT_FOUND,\n        );\n      }\n\n      //* Verifica que no haya un nas con el mismo nombre *//\n      const isZone = await this.zoneRepository.findBy({ name: name });\n      if (isZone?.length > 0) {\n        const str = `Ya hay una zona con el nombre: ${name}`;\n        console.log(`${str}------------------------------------------------\\n`);\n        throw new HttpException(\n          {\n            status: HttpStatus.CONFLICT,\n            error: str,\n          },\n          HttpStatus.CONFLICT,\n        );\n      }\n\n      //* Crea la nueva zona *//\n      const newZone = await this.zoneRepository.create({\n        name,\n        tlf,\n        codigo_zona,\n        Nas,\n        coord,\n      });\n\n      console.log(`Guardando datos de la nueva zona`);\n      const saveZone = await this.zoneRepository.save(newZone);\n      if (!saveZone) {\n        const str = `Hubo un problema al guardar la zona`;\n        console.log(`${str}------------------------------------------------\\n`);\n        throw new HttpException(\n          {\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\n            error: str,\n          },\n          HttpStatus.INTERNAL_SERVER_ERROR,\n        );\n      }\n\n      console.log(`Zona creada exitosamente`);\n      console.log(`------------------------------------------------\\n`);\n      return saveZone;\n    } catch (error) {\n      console.error(error);\n      console.log(`------------------------------------------------\\n`);\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Permite traer todas las entradas que posee la tabla.\n   * @todo paginar\n   * @returns { Array }\n   */\n  async FindAllZones() {\n    try {\n      const zones = await this.zoneRepository.find();\n      console.log(`Buscando zonas`);\n      if (zones?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ZoneUpadateDto.html":{"url":"classes/ZoneUpadateDto.html","title":"class - ZoneUpadateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ZoneUpadateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/zone.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                codigo_zona\n                            \n                            \n                                    \n                                    \n                                coord\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                Nas\n                            \n                            \n                                    \n                                    \n                                tlf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codigo_zona\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        Nas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tlf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/zone.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ZoneDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  tlf: string;\n\n  @IsNotEmpty()\n  @IsString()\n  codigo_zona: string;\n\n\t@IsNotEmpty()\n  @IsNumber()\n  Nas: number;\n\n\t@IsNotEmpty()\n  @IsString()\n  coord: string;\n}\n\nexport class ZoneUpadateDto {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  tlf: string;\n\n  @IsOptional()\n  @IsString()\n  codigo_zona: string;\n\n  @IsOptional()\n  @IsNumber()\n  Nas: number;\n\n  @IsOptional()\n  @IsString()\n  coord: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/coa/coa.controller.ts\n            \n            controller\n            CoaController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/coa/coa.service.ts\n            \n            injectable\n            CoaService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/database/create-node.dto.ts\n            \n            class\n            CreateNodeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/nas.entity.ts\n            \n            entity\n            Nas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/node.entity.ts\n            \n            entity\n            ZonaCliente\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/plan.entity.ts\n            \n            entity\n            Plan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/radacct.entity.ts\n            \n            entity\n            Radacct\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/radcheck.entity.ts\n            \n            entity\n            RadCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/radgroupreply.entity.ts\n            \n            entity\n            RadGroupReply\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/radusergroup.entity.ts\n            \n            entity\n            RadUserGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/service.entity.ts\n            \n            entity\n            Service\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/system.entity.ts\n            \n            entity\n            System\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/update-node.dto.ts\n            \n            class\n            UpdateNodeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/user.entity.ts\n            \n            entity\n            UserInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/zone.entity.ts\n            \n            entity\n            Zone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/coa.dto.ts\n            \n            class\n            ChangePlanDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/dto/coa.dto.ts\n            \n            class\n            CoaDto\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/dto/create-system.dto.ts\n            \n            class\n            CreateSystemDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/nas.dto.ts\n            \n            class\n            NasDto\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/dto/nas.dto.ts\n            \n            class\n            NasDtoUpdate\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/dto/plan.dto.ts\n            \n            class\n            CreatePlanDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/plan.dto.ts\n            \n            class\n            UpdatePlanDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/radUserGroup.dto.ts\n            \n            class\n            RadUserGroupDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/radUserGroup.dto.ts\n            \n            class\n            RadUserGroupUpdateDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/radcheck.dto.ts\n            \n            class\n            RadCheckDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/radcheck.dto.ts\n            \n            class\n            RadCheckUpdateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dto/update-system.dto.ts\n            \n            class\n            UpdateSystemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                src/dto/userUpdate.dto.ts\n            \n            class\n            UserUpdateDto\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                src/dto/zone.dto.ts\n            \n            class\n            ZoneDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dto/zone.dto.ts\n            \n            class\n            ZoneUpadateDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/nas/nas.controller.ts\n            \n            controller\n            NasController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/nas/nas.service.ts\n            \n            injectable\n            NasService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/nodes/nodes.controller.ts\n            \n            controller\n            NodesController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/nodes/nodes.service.ts\n            \n            injectable\n            NodesService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/plan/plan.controller.ts\n            \n            controller\n            PlanController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/plan/plan.service.ts\n            \n            injectable\n            PlanService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/radcheck/radcheck.controller.ts\n            \n            controller\n            RadcheckController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/radcheck/radcheck.service.ts\n            \n            injectable\n            RadcheckService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/radusergroup/radusergroup.controller.ts\n            \n            controller\n            RadusergroupController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/radusergroup/radusergroup.service.ts\n            \n            injectable\n            RadusergroupService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/services/services.controller.ts\n            \n            controller\n            ServicesController\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/services/services.service.ts\n            \n            injectable\n            ServicesService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/systems/systems.controller.ts\n            \n            controller\n            SystemsController\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/systems/systems.service.ts\n            \n            injectable\n            SystemsService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/user-info/user-info.controller.ts\n            \n            controller\n            UserInfoController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/user-info/user-info.service.ts\n            \n            injectable\n            UserInfoService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/zone/zone.controller.ts\n            \n            controller\n            ZoneController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/zone/zone.service.ts\n            \n            injectable\n            ZoneService\n            \n                83 %\n                (5/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mariadb : ^3.2.0\n        \n            mysql2 : ^3.5.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Empresas   (src/.../user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/user.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Empresas\n                    \n                \n                        \n                            \n                                 NPCA\n                            \n                        \n                        \n                            \n                                Value : NPCA\n                            \n                        \n                        \n                            \n                                 INYC\n                            \n                        \n                        \n                            \n                                Value : INYC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NodesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RadcheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RadusergroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SystemsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInfoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoaModule\n\n\n\ncluster_CoaModule_exports\n\n\n\ncluster_CoaModule_providers\n\n\n\ncluster_NasModule\n\n\n\ncluster_NasModule_providers\n\n\n\ncluster_NodesModule\n\n\n\ncluster_NodesModule_providers\n\n\n\ncluster_PlanModule\n\n\n\ncluster_PlanModule_exports\n\n\n\ncluster_PlanModule_providers\n\n\n\ncluster_RadcheckModule\n\n\n\ncluster_RadcheckModule_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SystemsModule\n\n\n\ncluster_SystemsModule_exports\n\n\n\ncluster_SystemsModule_providers\n\n\n\ncluster_UserInfoModule\n\n\n\ncluster_UserInfoModule_providers\n\n\n\ncluster_ZoneModule\n\n\n\ncluster_ZoneModule_providers\n\n\n\n\nCoaModule\n\nCoaModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nCoaModule->ServicesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoaModule->AppModule\n\n\n\n\n\nCoaService \n\nCoaService \n\nCoaService  -->\n\nCoaModule->CoaService \n\n\n\n\n\nNasModule\n\nNasModule\n\nAppModule -->\n\nNasModule->AppModule\n\n\n\n\n\nNodesModule\n\nNodesModule\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\n\n\nPlanModule\n\nPlanModule\n\nAppModule -->\n\nPlanModule->AppModule\n\n\n\n\n\nPlanService \n\nPlanService \n\nPlanService  -->\n\nPlanModule->PlanService \n\n\n\n\n\nRadcheckModule\n\nRadcheckModule\n\nAppModule -->\n\nRadcheckModule->AppModule\n\n\n\n\n\nRadusergroupModule\n\nRadusergroupModule\n\nAppModule -->\n\nRadusergroupModule->AppModule\n\n\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nSystemsModule\n\nSystemsModule\n\nServicesModule -->\n\nSystemsModule->ServicesModule\n\n\n\nAppModule -->\n\nSystemsModule->AppModule\n\n\n\n\n\nSystemsService \n\nSystemsService \n\nSystemsService  -->\n\nSystemsModule->SystemsService \n\n\n\n\n\nUserInfoModule\n\nUserInfoModule\n\nAppModule -->\n\nUserInfoModule->AppModule\n\n\n\n\n\nZoneModule\n\nZoneModule\n\nAppModule -->\n\nZoneModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCoaService\n\nCoaService\n\nCoaModule -->\n\nCoaService->CoaModule\n\n\n\n\n\nRadusergroupService\n\nRadusergroupService\n\nCoaModule -->\n\nRadusergroupService->CoaModule\n\n\n\nRadusergroupModule -->\n\nRadusergroupService->RadusergroupModule\n\n\n\n\n\nNasService\n\nNasService\n\nNasModule -->\n\nNasService->NasModule\n\n\n\nZoneModule -->\n\nNasService->ZoneModule\n\n\n\n\n\nNodesService\n\nNodesService\n\nNodesModule -->\n\nNodesService->NodesModule\n\n\n\n\n\nPlanService\n\nPlanService\n\nPlanModule -->\n\nPlanService->PlanModule\n\n\n\n\n\nRadcheckService\n\nRadcheckService\n\nRadcheckModule -->\n\nRadcheckService->RadcheckModule\n\n\n\n\n\nServicesService\n\nServicesService\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\nSystemsService\n\nSystemsService\n\nSystemsModule -->\n\nSystemsService->SystemsModule\n\n\n\n\n\nUserInfoService\n\nUserInfoService\n\nUserInfoModule -->\n\nUserInfoService->UserInfoModule\n\n\n\n\n\nZoneService\n\nZoneService\n\nZoneModule -->\n\nZoneService->ZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PORT   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.PORT || 3000\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
