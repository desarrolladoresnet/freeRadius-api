var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.744,1,1.535]],["body/controllers/AppController.html",[0,1.684,1,0.961,2,0.866,3,0.573,4,0.167,5,0.143,6,0.866,7,0.316,8,1.49,9,2.275,10,1.091,11,2.777,12,2.364,13,2.658,14,2.041,15,1.808,16,2.105,17,1.808,18,2.087,19,1.808,20,1.255,21,1.475,22,1.677,23,1.808,24,1.475,25,0.961,26,1.808,27,1.482,28,2.199,29,2.872,30,2.789,31,2.777,32,0.852,33,0.961,34,2.572,35,1.808,36,1.255,37,1.808,38,2.034,39,1.808,40,2.976,41,2.034,42,1.808,43,3.035,44,1.255,45,1.808,46,0.193,47,1.091,48,1.808,49,1.475,50,1.475,51,1.475,52,1.475,53,1.808,54,1.255,55,1.808,56,1.475,57,1.475,58,1.475,59,1.061,60,1.455,61,1.548,62,0.045,63,1.808,64,0.973,65,1.061,66,4.37,67,3.405,68,3.405,69,2.311,70,1.044,71,2.777,72,1.128,73,3.405,74,2.198,75,1.845,76,1.809,77,4.704,78,2.706,79,3.405,80,2.198,81,2.198,82,0.752,83,2.198,84,2.976,85,2.872,86,0.866,87,1.808,88,1.061,89,2.777,90,2.034,91,1.19,92,2.777,93,3.405,94,2.777,95,2.777,96,3.405,97,3.405,98,2.364,99,3.405,100,3.405,101,2.198,102,2.658,103,3.405,104,3.122,105,2.658,106,3.122,107,2.364,108,2.777,109,3.405,110,3.405,111,3.257,112,0.866,113,1.808,114,1.061,115,0.866,116,1.808,117,1.061,118,1.808,119,1.428,120,0.866,121,0.704,122,1.808,123,1.061,124,2.056,125,0.829,126,2.275,127,3.634,128,1.808,129,1.808,130,1.808,131,2.789,132,2.789,133,2.275,134,1.808,135,1.482,136,1.808,137,0.677,138,1.061,139,1.808,140,1.061,141,1.808,142,1.061,143,1.482,144,1.061,145,2.056,146,1.64,147,2.497,148,1.808,149,1.926,150,1.662,151,1.255,152,1.808,153,2.364,154,2.777,155,1.255,156,1.255,157,1.255,158,1.255,159,2.658,160,1.255,161,1.433,162,1.475,163,2.275,164,1.475,165,1.936,166,1.475,167,1.475,168,1.475,169,2.497,170,1.255,171,1.255,172,1.475,173,1.475,174,1.475,175,1.255,176,1.091,177,1.255,178,1.255,179,1.475,180,1.475,181,1.64,182,0.641,183,0.866,184,1.662,185,1.808,186,1.061,187,1.808,188,1.255,189,1.808,190,1.808,191,2.275,192,3.257,193,2.364,194,3.565,195,2.777,196,3.122,197,1.604,198,2.777,199,0.866,200,1.662,201,1.808,202,1.061,203,1.808,204,1.808,205,1.808,206,1.475,207,2.777,208,1.475,209,1.808,210,0.866,211,1.662,212,1.061,213,0.961,214,1.808,215,1.808,216,1.808,217,0.852,218,1.808,219,0.604,220,0.866,221,2.572,222,2.789,223,0.355,224,1.113,225,0.866,226,1.113,227,0.866,228,1.113,229,0.866,230,0.866,231,0.866,232,0.866,233,0.866,234,0.167,235,0.008,236,0.564,237,1.426,238,2.361,239,1.061,240,2.497,241,1.061,242,1.061,243,1.061,244,1.061,245,1.061,246,1.808,247,1.061,248,1.061,249,1.061,250,1.061,251,1.061,252,1.061,253,0.397,254,1.061,255,1.061,256,1.061,257,1.061,258,1.061,259,1.061,260,1.061,261,1.061,262,1.061,263,1.061,264,1.061,265,0.014,266,0.014]],["title/injectables/AppGetService.html",[226,1.361,267,0.965]],["body/injectables/AppGetService.html",[3,0.475,4,0.315,5,0.27,7,1.08,8,1.468,10,2.186,12,2.384,14,1.991,16,2.036,18,2.036,21,2.455,22,1.819,27,1.599,28,2.036,29,2.799,32,1.899,33,1.599,38,1.924,41,2.142,46,0.363,47,1.817,49,2.455,50,2.455,51,2.455,52,2.455,54,2.799,60,1.533,62,0.045,64,1.11,69,2.61,70,1.619,71,2.455,72,1.007,74,1.924,75,1.894,76,2.142,78,1.599,80,2.506,81,2.506,82,0.826,83,2.506,84,2.847,85,3.617,86,1.629,91,1.355,94,3.288,95,3.527,101,2.142,105,2.09,107,2.799,108,3.288,111,3.707,112,1.629,115,1.629,119,1.814,120,1.629,121,1.08,124,2.186,125,0.624,135,2.142,145,1.817,150,2.142,157,1.387,161,1.509,182,2.744,197,1.418,207,2.455,208,2.455,219,0.636,221,2.433,223,0.668,226,1.418,234,0.315,235,0.015,236,1.599,237,2.186,253,1.127,265,0.023,266,0.023,267,1.006,268,1.061,269,1.629,270,1.817,271,3.009,272,2.09,273,3.009,274,4.324,275,2.222,276,3.009,277,2.455,278,2.09,279,2.799,280,2.455,281,3.009,282,3.009,283,3.009,284,3.009,285,4.03,286,3.009,287,3.009,288,3.009,289,3.009,290,2.455,291,2.455,292,3.288,293,3.009,294,3.009,295,2.455,296,3.009,297,3.009,298,3.009,299,3.009,300,1.387,301,3.155,302,2.799,303,1.997,304,2.09,305,2.09,306,2.09,307,2.09,308,2.09,309,2.09,310,1.817,311,2.09,312,2.09,313,2.09,314,1.817,315,2.09,316,2.514,317,1.997,318,4.03,319,2.799,320,3.621,321,1.997,322,3.621,323,3.621,324,1.997,325,1.997,326,1.997,327,1.997,328,3.009,329,1.997,330,1.387,331,1.387,332,1.387,333,1.387,334,1.387,335,2.514,336,1.387,337,1.387,338,1.997,339,1.387,340,1.206,341,1.997,342,1.206,343,1.997,344,1.997,345,1.997,346,1.997,347,1.997,348,1.997]],["title/modules/AppModule.html",[349,1.212,350,1.744]],["body/modules/AppModule.html",[1,2.519,2,3.479,3,0.517,4,0.517,5,0.443,7,0.977,8,1.132,14,1.596,16,1.789,20,2.961,32,2.009,62,0.045,72,0.885,219,0.892,223,1.096,224,2.513,225,2.674,226,2.513,227,2.674,228,2.513,229,2.674,234,0.517,235,0.024,265,0.032,266,0.032,272,2.961,349,1.988,350,3.469,351,1.544,352,1.742,353,2.276,354,2.276,355,1.742,356,2.862,357,1.979,358,2.674,359,2.674,360,2.674,361,2.835,362,2.835,363,2.961,364,2.276,365,2.276,366,3.278,367,2.961,368,4.264,369,3.479,370,4.264,371,4.264,372,4.264,373,4.264,374,4.264,375,3.278,376,3.278,377,3.278,378,2.276,379,3.278,380,2.961,381,3.278,382,2.961,383,3.278,384,2.961,385,3.278,386,3.278,387,3.278,388,1.979]],["title/injectables/AppPutService.html",[228,1.361,267,0.965]],["body/injectables/AppPutService.html",[3,0.297,4,0.297,5,0.254,7,0.561,8,1.499,12,2.245,14,2.003,16,1.863,18,1.207,22,1.758,25,2.36,28,2.206,32,1.355,33,1.529,34,1.737,38,1.529,40,3.009,44,1.307,46,0.342,47,1.737,54,2.595,56,3.189,57,3.189,58,3.436,62,0.045,64,0.92,69,1.737,70,1.464,72,1.091,75,1.866,76,2.077,78,2.077,80,2.077,81,2.077,82,0.635,83,2.077,84,2.681,89,1.535,91,1.324,107,2.715,119,1.207,125,0.874,135,2.36,145,1.737,146,1.997,150,2.36,153,3.084,161,1.784,169,2.543,182,2.108,183,2.347,184,2.238,192,4.065,193,3.208,194,3.887,195,3.189,196,3.189,197,1.984,198,3.189,199,2.347,200,2.238,210,1.535,211,2.238,213,1.529,219,0.729,221,2.681,223,0.629,228,1.355,231,1.535,232,1.535,233,1.535,234,0.297,235,0.014,236,1.529,237,2.108,240,2.108,253,1.077,265,0.022,266,0.022,267,0.962,268,1,272,1.997,275,1.842,300,1.307,301,3.084,302,2.715,304,1.997,305,1.997,306,1.997,307,1.997,308,1.997,309,1.997,310,1.737,311,1.997,312,1.997,313,1.997,314,1.737,315,1.997,316,2.425,330,1.307,331,1.307,332,1.307,333,1.307,334,1.307,335,2.425,336,1.307,337,1.307,339,2.425,340,2.681,342,2.108,389,1.535,390,2.347,391,2.347,392,2.347,393,2.877,394,1.882,395,1.882,396,4.441,397,3.769,398,4.441,399,4.441,400,4.441,401,4.441,402,4.441,403,1.882,404,2.877,405,1.882,406,3.492,407,1.882,408,2.877,409,2.877,410,2.877,411,2.848,412,3.492,413,3.492,414,2.108,415,3.492,416,1.882,417,1.882,418,1.882,419,1.882,420,1.882]],["title/injectables/AppService.html",[224,1.361,267,0.965]],["body/injectables/AppService.html",[3,0.557,4,0.303,5,0.259,7,0.572,8,1.329,10,2.384,12,1.375,13,2.027,14,1.956,16,1.877,18,2.101,22,1.746,27,1.878,28,2.101,32,2.108,33,1.878,34,1.763,38,2.098,40,2.702,41,1.878,43,2.027,46,0.349,47,1.763,54,1.878,62,0.045,64,0.687,70,1.906,72,0.882,74,2.098,76,2.098,78,2.547,80,1.551,81,1.551,82,0.349,83,1.551,84,1.763,91,1.539,101,1.551,104,2.382,119,1.877,124,1.763,125,0.733,143,2.258,145,2.384,147,2.702,150,2.547,151,2.742,153,2.742,154,3.221,155,2.027,156,2.027,157,2.027,158,2.027,159,3.107,160,2.027,161,1.478,162,2.382,163,2.382,164,2.382,165,2.742,166,2.382,167,2.382,168,2.382,169,1.763,170,2.027,171,2.027,172,2.382,173,2.382,174,2.382,175,2.027,176,1.763,177,2.027,178,2.027,179,2.382,180,2.382,181,2.027,182,1.159,197,1.375,213,1.551,217,0.904,219,0.67,221,2.384,223,0.641,224,1.375,230,1.565,234,0.303,235,0.014,236,1.551,237,2.133,240,2.565,253,1.675,265,0.022,266,0.022,267,0.976,268,1.02,270,2.384,275,1.86,300,1.333,301,3.107,302,2.742,304,2.027,305,2.027,306,2.027,307,2.027,308,2.027,309,2.027,310,1.763,311,2.027,312,2.027,313,2.027,314,1.763,315,2.027,316,2.454,319,1.333,330,1.333,331,1.333,332,1.333,333,1.333,334,1.333,335,2.454,336,1.333,337,1.333,339,1.333,340,2.384,342,2.133,397,1.565,411,1.565,414,1.159,421,1.565,422,2.382,423,2.919,424,2.382,425,2.919,426,2.919,427,2.919,428,2.382,429,2.919,430,2.382,431,2.919,432,1.919,433,2.919,434,1.919,435,2.919,436,2.919,437,1.565,438,1.919,439,1.565,440,1.919,441,1.919,442,1.919,443,1.919,444,3.221,445,1.919,446,3.534,447,1.02,448,1.919,449,1.02,450,1.919,451,1.919,452,1.551,453,2.919,454,1.551,455,2.919,456,3.534,457,1.02,458,2.919,459,1.919,460,1.02,461,2.919,462,1.919,463,1.02,464,1.919,465,1.551,466,2.919,467,1.551,468,2.919,469,1.551,470,2.919,471,1.02,472,2.919,473,1.565,474,1.02,475,2.919,476,1.919,477,1.02,478,2.919,479,1.02,480,2.919,481,1.02,482,2.919,483,1.02,484,2.919,485,1.565,486,1.565,487,1.159,488,1.919,489,1.159,490,3.534,491,1.02,492,1.919,493,1.02,494,1.919,495,1.02,496,1.919,497,0.904,498,1.919,499,1.919,500,1.919,501,1.02,502,1.919,503,1.02,504,1.919,505,1.919,506,2.919]],["title/modules/DatabaseModule.html",[349,1.212,361,1.535]],["body/modules/DatabaseModule.html",[3,0.631,4,0.631,5,0.541,7,1.193,8,1.431,22,1.615,25,2.568,28,2.027,62,0.045,72,1.119,90,2.568,102,3.356,137,1.809,213,2.568,219,0.762,223,1.338,234,0.631,235,0.029,265,0.037,266,0.037,349,2.027,351,1.885,356,2.416,357,2.416,361,2.568,367,3.356,507,4.002,508,4.833,509,3.942,510,4.833,511,4.002,512,4.002,513,4.002,514,3.605,515,4.002]],["title/modules/PrismaModule.html",[349,1.212,362,1.535]],["body/modules/PrismaModule.html",[3,0.639,4,0.639,5,0.547,62,0.044,219,0.768,223,1.354,234,0.639,235,0.03,265,0.037,266,0.037,349,2.19,351,1.909,352,2.153,353,2.813,354,2.813,355,2.153,356,3.152,357,3.152,362,3.023,363,3.381,364,2.813,365,2.813,516,3.305,517,3.305,518,3.305,519,3.11,520,4.051,521,4.869,522,4.051]],["title/injectables/PrismaService.html",[267,0.965,519,1.535]],["body/injectables/PrismaService.html",[3,0.643,4,0.643,5,0.551,62,0.045,64,0.959,80,2.166,81,2.166,82,0.741,83,2.166,219,0.825,223,1.363,234,0.643,235,0.03,236,2.166,265,0.037,266,0.037,267,1.634,268,2.166,378,2.831,519,2.597,523,3.325,524,2.951,525,5.234,526,4.887,527,5.426,528,4.077,529,4.077,530,3.325,531,4.077,532,4.077,533,4.077,534,4.077,535,4.077]],["title/classes/RadCheck.html",[91,0.861,235,0.021]],["body/classes/RadCheck.html",[3,0.496,4,0.496,5,0.425,7,0.938,8,1.102,18,1.742,46,0.572,60,1.238,61,1.923,62,0.045,64,1.208,72,0.861,75,1.923,82,1.013,90,2.206,91,1.531,121,1.628,125,0.964,137,1.178,161,1.554,219,0.496,234,0.496,235,0.023,265,0.032,266,0.032,275,1.956,388,2.983,491,2.206,493,2.469,495,2.469,497,2.189,524,2.506,536,1.178,537,2.567,538,2.206,539,3.226,540,1.388,541,3.566,542,3.566,543,5.459,544,3.836,545,3.146,546,2.883,547,3.386,548,3.146,549,3.386,550,3.386,551,3.386,552,3.386,553,3.146,554,3.146,555,3.386,556,3.146,557,2.506,558,3.663,559,2.185,560,1.672,561,2.185,562,2.185,563,2.185,564,4.151,565,3.146,566,3.146]],["title/classes/UpdateRadCheckDto.html",[184,1.535,235,0.021]],["body/classes/UpdateRadCheckDto.html",[3,0.598,4,0.598,5,0.512,46,0.689,60,1.394,61,2.036,62,0.045,64,1.279,75,1.899,82,0.988,121,1.69,125,1.052,184,2.485,219,0.598,234,0.598,235,0.034,265,0.036,266,0.036,493,2.695,495,2.695,497,2.389,536,1.42,540,1.563,567,3.094,568,3.197,569,3.792,570,3.094,571,3.792,572,3.792,573,3.792,574,3.792,575,2.824,576,3.283,577,3.283,578,3.815,579,2.015]],["title/classes/UpdateUserGroupDto.html",[200,1.535,235,0.021]],["body/classes/UpdateUserGroupDto.html",[3,0.632,4,0.632,5,0.542,46,0.729,60,1.443,61,1.946,62,0.044,64,1.223,82,0.944,121,1.609,125,1.078,200,2.571,219,0.632,234,0.632,235,0.035,265,0.037,266,0.037,501,2.762,503,2.762,536,1.501,540,1.617,568,2.421,575,2.921,576,3.138,577,3.138,579,2.131,580,3.271,581,4.01,582,2.784,583,4.01,584,2.784,585,4.01,586,3.36]],["title/classes/UpdateUserInfoDto.html",[211,1.535,235,0.021]],["body/classes/UpdateUserInfoDto.html",[3,0.415,4,0.415,5,0.355,46,0.478,60,1.368,61,2.149,62,0.045,64,1.35,75,1.586,82,1.043,121,1.758,125,0.879,211,1.953,217,1.996,219,0.415,234,0.415,235,0.027,265,0.028,266,0.028,447,2.252,449,2.252,452,2.252,454,2.252,457,2.252,460,2.252,463,2.252,465,2.252,467,2.252,469,2.252,471,2.252,474,2.252,477,2.252,479,2.252,481,2.252,483,2.252,489,2.558,536,0.985,540,1.229,568,3.288,570,2.146,575,2.77,576,3.418,577,3.455,578,2.999,579,1.398,582,2.553,584,1.827,586,2.942,587,2.146,588,2.558,589,2.631,590,2.631,591,2.631,592,3.742,593,2.631,594,2.631,595,2.631,596,2.631,597,2.631,598,2.631,599,2.631,600,2.631,601,2.631,602,2.631,603,2.631,604,2.631,605,2.631,606,2.631,607,2.631,608,2.631,609,2.631,610,2.631,611,2.631,612,2.631,613,2.999,614,1.827]],["title/classes/UserDto.html",[143,1.535,235,0.021]],["body/classes/UserDto.html",[3,0.381,4,0.381,5,0.327,46,0.44,60,1.318,61,2.153,62,0.045,64,1.353,72,0.502,82,1.045,91,0.721,119,1.015,121,1.76,125,0.84,143,1.841,161,0.906,217,1.907,219,0.381,234,0.381,235,0.025,265,0.026,266,0.026,447,2.151,449,2.151,452,2.151,454,2.151,457,2.151,460,2.151,463,2.151,465,2.151,467,2.151,469,2.151,471,2.151,474,2.151,477,2.151,479,2.151,481,2.151,483,2.151,487,2.444,493,2.151,495,2.151,497,1.907,501,2.151,503,2.151,536,0.906,540,1.158,568,3.025,575,3.297,576,3.445,577,3.322,579,1.286,582,2.406,584,3.623,586,3.069,588,2.444,592,3.605,613,2.826,614,1.68,615,1.974,616,2.419,617,2.419,618,2.419,619,2.419,620,2.419,621,2.419,622,2.419,623,2.419,624,2.419,625,2.419,626,2.419,627,2.419,628,2.419,629,2.419,630,2.419,631,2.419,632,2.419,633,2.419,634,2.419,635,2.419,636,2.419,637,2.419,638,2.419,639,2.419,640,2.419,641,2.419,642,2.419,643,2.419,644,2.419,645,1.974]],["title/classes/UserGroup.html",[235,0.021,253,1.081]],["body/classes/UserGroup.html",[3,0.543,4,0.543,5,0.466,7,1.027,8,1.357,27,2.34,36,3.058,46,0.626,60,1.313,61,1.817,62,0.045,64,1.142,72,0.914,82,0.982,90,2.34,119,2.036,121,1.525,125,1.097,137,1.29,161,1.649,219,0.543,234,0.543,235,0.025,253,1.649,265,0.033,266,0.033,275,2.075,388,2.659,491,2.34,501,2.809,503,2.809,524,2.659,536,1.29,538,2.34,539,3.37,540,1.472,541,3.37,542,3.37,544,2.392,546,3.058,555,4.172,557,2.659,558,3.552,559,2.392,560,1.831,561,2.392,562,2.392,563,2.392,646,2.811,647,4.41,648,3.445,649,4.403,650,4.403,651,3.445,652,3.445,653,2.811,654,2.811]],["title/classes/UserInfo.html",[70,1.081,235,0.021]],["body/classes/UserInfo.html",[3,0.319,4,0.319,5,0.273,7,0.602,8,1.153,12,1.43,14,1.517,18,1.273,22,1.355,25,2.154,46,0.367,60,1.087,61,1.9,62,0.046,64,1.194,70,1.627,72,0.756,74,1.613,75,1.772,82,1.045,101,1.937,121,1.7,125,0.902,135,1.073,137,0.756,147,1.22,161,1.136,170,2.107,176,1.832,188,1.403,197,0.952,217,2.047,219,0.319,234,0.319,235,0.015,265,0.023,266,0.023,270,1.832,275,1.91,388,2.447,444,2.974,447,2.309,449,2.309,452,1.613,454,1.613,457,1.613,460,1.613,463,1.613,465,1.613,467,1.613,469,1.613,471,2.309,473,2.476,474,1.613,477,2.309,479,1.613,481,1.613,483,1.613,485,2.476,486,3.544,487,2.623,489,2.623,491,1.613,524,1.832,536,0.756,538,1.613,539,2.531,540,1.014,541,3.524,542,3.579,544,1.403,546,2.107,547,2.476,549,2.476,550,2.476,551,2.476,552,3.544,557,1.832,558,3.907,559,1.403,560,1.073,561,1.403,562,1.403,563,2.107,647,4.689,653,3.544,654,4.307,655,1.648,656,2.02,657,3.035,658,3.035,659,2.02,660,3.035,661,4.563,662,2.02,663,3.035,664,3.035,665,2.02,666,3.035,667,2.02,668,2.02,669,3.035,670,2.02,671,2.02,672,3.306,673,4.053,674,2.02,675,2.02,676,2.02,677,2.02,678,2.02,679,2.02,680,5.279,681,2.02,682,3.035,683,3.035]],["title/coverage.html",[684,2.722]],["body/coverage.html",[0,2.212,1,1.947,5,0.495,6,2.989,62,0.045,70,1.372,82,0.666,91,1.093,143,1.947,184,1.947,197,2.587,200,1.947,211,1.947,224,1.726,226,1.726,228,1.726,235,0.041,253,1.372,265,0.035,266,0.035,267,1.748,269,2.989,355,1.947,380,2.545,382,2.545,384,2.545,389,2.989,414,2.212,421,2.989,514,2.545,519,1.947,523,2.989,537,2.989,557,2.212,567,2.989,580,2.989,587,2.989,615,2.989,646,2.989,655,2.989,684,2.545,685,3.665,686,3.665,687,3.665,688,5.752,689,4.578,690,3.665,691,3.665,692,3.665,693,3.665,694,3.665,695,3.665,696,3.665,697,2.989,698,3.665,699,5.231,700,3.665,701,2.989,702,5.231,703,3.665,704,2.989,705,3.665,706,2.989,707,2.989,708,3.665,709,3.665]],["title/dependencies.html",[352,1.843,710,1.976]],["body/dependencies.html",[62,0.045,137,1.848,223,1.386,235,0.03,265,0.037,266,0.037,352,2.203,378,2.879,530,3.382,560,2.203,579,2.203,711,4.146,712,4.146,713,5.271,714,4.146,715,4.146,716,4.936,717,3.382,718,4.027,719,4.146,720,4.146,721,4.146,722,3.382,723,4.146,724,2.879,725,4.146,726,4.146,727,4.146,728,4.146,729,4.146,730,4.146,731,4.146,732,4.146]],["title/miscellaneous/functions.html",[733,1.463,734,2.829]],["body/miscellaneous/functions.html",[8,1.172,16,1.853,22,1.476,46,0.803,62,0.039,72,0.917,265,0.039,266,0.039,278,3.067,279,3.067,355,2.876,369,3.603,697,3.603,733,2.667,734,3.603,735,4.417,736,3.603,737,4.417,738,4.417,739,4.417,740,4.417]],["title/index.html",[46,0.44,741,2.423,742,2.423]],["body/index.html",[1,0.855,8,1.496,9,3.396,10,0.971,11,1.312,12,2.193,13,2.194,14,1.904,16,1.953,18,2,20,1.768,22,1.736,24,1.312,25,2.08,27,0.855,28,1.953,29,1.768,31,2.077,32,2.331,33,0.855,34,1.907,36,2.494,38,2.317,40,2.169,41,2.784,43,1.768,44,1.117,60,1.071,62,0.043,69,0.971,70,0.602,72,1.167,74,2.403,75,0.602,76,1.353,78,2.474,85,1.117,90,1.353,91,0.48,92,1.312,98,1.768,101,2.08,102,3.14,105,1.117,106,1.312,119,0.675,121,1.708,124,1.907,125,0.528,126,2.077,133,2.077,135,1.909,137,0.602,146,1.117,147,1.537,149,1.312,150,0.855,151,3.028,155,1.117,156,1.768,158,1.117,159,1.768,160,1.117,165,1.117,169,0.971,171,1.117,175,1.117,176,0.971,177,1.117,178,1.117,181,2.494,188,1.117,191,1.312,206,1.312,213,1.353,217,1.199,220,2.077,265,0.019,266,0.019,270,1.907,277,3.193,278,2.494,279,2.194,280,1.312,290,1.312,291,1.312,292,1.312,295,2.577,310,0.971,314,0.971,319,1.768,367,2.194,390,1.312,391,1.312,392,2.077,422,1.312,424,2.077,428,1.312,430,1.312,437,1.312,439,2.077,447,1.353,449,1.353,452,1.353,454,1.353,457,1.353,460,1.353,463,1.353,465,1.353,467,1.353,469,1.353,471,1.353,474,1.353,477,1.353,479,1.353,481,0.855,483,1.353,487,0.971,489,0.971,491,0.855,493,0.855,495,0.855,497,0.758,501,0.855,503,0.855,509,1.312,538,0.855,560,0.855,588,1.907,614,1.117,645,1.312,672,1.312,684,1.117,717,1.312,718,3.193,722,1.312,724,1.117,736,1.312,743,1.608,744,1.608,745,1.608,746,1.608,747,3.159,748,1.608,749,2.546,750,1.608,751,1.608,752,4.162,753,3.159,754,1.608,755,1.608,756,3.159,757,1.608,758,1.608,759,3.159,760,1.608,761,1.608,762,3.159,763,1.608,764,1.608,765,1.608,766,1.608,767,1.608,768,1.608,769,1.608,770,1.608,771,2.546,772,1.608,773,1.608,774,1.608,775,1.608,776,1.608,777,1.608,778,1.312,779,1.608,780,1.608,781,1.608,782,4.521,783,1.608,784,3.592,785,1.608,786,1.608,787,3.159,788,1.608,789,1.608,790,1.608,791,1.608,792,1.608,793,2.546,794,1.608,795,1.608,796,1.608,797,1.608,798,1.608,799,1.608,800,1.608,801,1.608,802,1.608,803,1.608,804,1.608,805,2.546,806,1.608,807,2.546,808,1.608,809,1.608,810,1.608,811,1.608,812,1.608,813,1.608,814,1.608,815,1.608,816,1.608,817,1.608,818,1.608,819,2.546,820,1.608,821,1.608,822,2.546,823,1.608,824,1.608,825,2.546,826,2.546,827,1.608,828,1.608,829,1.608,830,2.546,831,1.608,832,2.546,833,1.608,834,1.608,835,1.608,836,1.608,837,1.608,838,1.608,839,1.608,840,1.608,841,1.608,842,1.608,843,1.608,844,1.608,845,2.546,846,2.546,847,1.608,848,2.546,849,2.577,850,1.608,851,1.608,852,1.608,853,1.312,854,2.546,855,1.608,856,1.608,857,1.608,858,1.608,859,1.608,860,2.546,861,2.546,862,1.608,863,1.608,864,1.608,865,1.608,866,1.608,867,1.608,868,1.608,869,2.546,870,1.608,871,1.608,872,1.608,873,1.608,874,1.608,875,1.608,876,1.608,877,2.546,878,1.608,879,1.608,880,1.608,881,1.608,882,1.608,883,1.608,884,1.608,885,1.608,886,1.608,887,1.608,888,1.608,889,1.608,890,1.608,891,2.546,892,1.608,893,1.608,894,1.608,895,1.608,896,1.608,897,4.36,898,1.608,899,1.608,900,1.608,901,4.162,902,1.608,903,3.159,904,1.608,905,1.608,906,1.608,907,1.608,908,1.608,909,1.608,910,1.608,911,1.608,912,1.608,913,1.608,914,3.914,915,1.608,916,1.608,917,1.608,918,1.312,919,1.608,920,2.546,921,1.608,922,1.608,923,1.608,924,2.546,925,1.608,926,3.159,927,3.159,928,1.608,929,1.608,930,1.608,931,1.608,932,1.608,933,1.608,934,1.608,935,1.608,936,1.608,937,1.608,938,1.608,939,1.608,940,1.608,941,1.608,942,1.608,943,1.608,944,1.608,945,1.608,946,1.608,947,1.608,948,1.608,949,1.608,950,1.608,951,1.608,952,1.608,953,1.608,954,1.608,955,1.608,956,1.608,957,1.608,958,1.608,959,1.608,960,1.312,961,1.608,962,1.608,963,1.608,964,1.608,965,1.608,966,1.608,967,1.312,968,1.608,969,1.608]],["title/modules.html",[351,1.847]],["body/modules.html",[62,0.039,265,0.039,266,0.039,350,2.697,351,2.105,361,2.374,362,2.374,778,3.644,970,5.157,971,5.157,972,5.157,973,5.437,974,4.467]],["title/overview.html",[975,3.198]],["body/overview.html",[0,2.396,62,0.044,193,2.756,224,2.438,226,2.438,228,2.438,265,0.037,266,0.037,268,2.109,349,1.665,350,3.525,351,1.87,352,2.109,353,2.756,354,2.756,355,2.109,356,2.396,357,2.396,358,3.238,359,3.238,360,3.238,361,2.749,362,2.975,363,3.339,364,2.756,365,2.756,516,3.238,517,3.238,518,3.238,519,3.01,536,1.486,975,3.238,976,3.969,977,3.969,978,3.969]],["title/properties.html",[540,1.159,710,1.976]],["body/properties.html",[7,1.344,62,0.044,265,0.039,266,0.039,540,1.507,960,3.678,967,3.678,979,4.508,980,4.508,981,4.508]],["title/miscellaneous/variables.html",[733,1.463,982,2.829]],["body/miscellaneous/variables.html",[14,1.675,22,1.495,28,1.877,41,2.377,46,0.642,54,1.877,62,0.045,72,0.733,82,0.938,91,1.334,98,2.453,125,0.928,137,1.932,240,2.133,253,1.322,265,0.034,266,0.034,340,2.133,342,2.133,380,3.107,382,3.107,384,3.107,414,2.133,497,2.432,514,3.107,538,2.377,588,2.133,701,2.882,704,2.882,706,2.882,707,2.882,724,2.453,733,2.133,849,2.882,853,2.882,918,4.211,982,2.882,983,3.532,984,3.532,985,3.532,986,3.532,987,5.162,988,3.532,989,3.532,990,4.474,991,3.532,992,3.532,993,3.532,994,3.532,995,3.532,996,3.532,997,3.532,998,4.474,999,3.532,1000,3.532,1001,3.532,1002,3.532,1003,3.532,1004,4.474,1005,4.474,1006,4.474,1007,3.532,1008,3.532,1009,3.532,1010,3.532]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["0.0.1",{"_index":980,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["0000",{"_index":476,"title":{},"body":{"injectables/AppService.html":{}}}],["1",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"overview.html":{}}}],["1/1",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["10.1.1",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["10.2.73.20",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":216,"title":{},"body":{"controllers/AppController.html":{}}}],["2",{"_index":939,"title":{},"body":{"index.html":{}}}],["2.1.5",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":976,"title":{},"body":{"overview.html":{}}}],["3.1.2",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":977,"title":{},"body":{"overview.html":{}}}],["4.15.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["6.1.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["6.32.0",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":978,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["7448280",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/8",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["9.4.2",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["a[main",{"_index":780,"title":{},"body":{"index.html":{}}}],["accesible",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aconseja",{"_index":313,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["acorto",{"_index":308,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["actualizar",{"_index":393,"title":{},"body":{"injectables/AppPutService.html":{}}}],["acuerdo",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":465,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["ademas",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["ahi",{"_index":283,"title":{},"body":{"injectables/AppGetService.html":{}}}],["al",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["ala",{"_index":118,"title":{},"body":{"controllers/AppController.html":{}}}],["alguna",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["algunos",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["alimentan",{"_index":799,"title":{},"body":{"index.html":{}}}],["allownull",{"_index":543,"title":{},"body":{"classes/RadCheck.html":{}}}],["altamente",{"_index":863,"title":{},"body":{"index.html":{}}}],["apellido",{"_index":669,"title":{},"body":{"classes/UserInfo.html":{}}}],["api",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["aplicacion",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["aplicación",{"_index":752,"title":{},"body":{"index.html":{}}}],["app",{"_index":782,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":225,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["appget.service",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appgetservice",{"_index":226,"title":{"injectables/AppGetService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":350,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appput.service",{"_index":229,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appputservice",{"_index":228,"title":{"injectables/AppPutService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice",{"_index":224,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apra",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["aprametros",{"_index":678,"title":{},"body":{"classes/UserInfo.html":{}}}],["aprender",{"_index":873,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["archivos",{"_index":909,"title":{},"body":{"index.html":{}}}],["arquitectura",{"_index":762,"title":{},"body":{"index.html":{}}}],["asc",{"_index":346,"title":{},"body":{"injectables/AppGetService.html":{}}}],["ascendente",{"_index":347,"title":{},"body":{"injectables/AppGetService.html":{}}}],["asi",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["asociado",{"_index":555,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{}}}],["async",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["attribute",{"_index":493,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["attribute\":\"string",{"_index":935,"title":{},"body":{"index.html":{}}}],["aun",{"_index":946,"title":{},"body":{"index.html":{}}}],["author",{"_index":960,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoincrement",{"_index":547,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["autoincremental",{"_index":551,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["automaticamente",{"_index":673,"title":{},"body":{"classes/UserInfo.html":{}}}],["available",{"_index":974,"title":{},"body":{"modules.html":{}}}],["await",{"_index":342,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":784,"title":{},"body":{"index.html":{}}}],["b(appmodule",{"_index":783,"title":{},"body":{"index.html":{}}}],["base",{"_index":509,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["bd",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bien",{"_index":837,"title":{},"body":{"index.html":{}}}],["body",{"_index":220,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["bootstrap",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borrar",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":973,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":970,"title":{},"body":{"modules.html":{}}}],["busca",{"_index":322,"title":{},"body":{"injectables/AppGetService.html":{}}}],["busqueda",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["busquedas",{"_index":297,"title":{},"body":{"injectables/AppGetService.html":{}}}],["básico",{"_index":767,"title":{},"body":{"index.html":{}}}],["c(appcontroller",{"_index":785,"title":{},"body":{"index.html":{}}}],["cada",{"_index":816,"title":{},"body":{"index.html":{}}}],["cambios",{"_index":907,"title":{},"body":{"index.html":{}}}],["campo",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["campos",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["capa",{"_index":845,"title":{},"body":{"index.html":{}}}],["cargar",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["carpeta",{"_index":825,"title":{},"body":{"index.html":{}}}],["carpetas",{"_index":777,"title":{},"body":{"index.html":{}}}],["caso",{"_index":885,"title":{},"body":{"index.html":{}}}],["catch",{"_index":411,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["changeuserinfo",{"_index":479,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["city",{"_index":467,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["clase",{"_index":430,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["clases",{"_index":826,"title":{},"body":{"index.html":{}}}],["class",{"_index":235,"title":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":536,"title":{},"body":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":516,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":517,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":518,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["coloca",{"_index":658,"title":{},"body":{"classes/UserInfo.html":{}}}],["colocado",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["colocando",{"_index":950,"title":{},"body":{"index.html":{}}}],["colocar",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["column",{"_index":558,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["column({type",{"_index":541,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["como",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["company",{"_index":454,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["completa",{"_index":947,"title":{},"body":{"index.html":{}}}],["completo",{"_index":315,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["completos",{"_index":948,"title":{},"body":{"index.html":{}}}],["componente",{"_index":285,"title":{},"body":{"injectables/AppGetService.html":{}}}],["componentes",{"_index":776,"title":{},"body":{"index.html":{}}}],["comunicar",{"_index":774,"title":{},"body":{"index.html":{}}}],["con",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["conexion",{"_index":853,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["conexión",{"_index":851,"title":{},"body":{"index.html":{}}}],["config",{"_index":529,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configmodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":527,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(!radcheck",{"_index":499,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":340,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["constantemente",{"_index":905,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":236,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(userinforepository",{"_index":300,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["construir",{"_index":879,"title":{},"body":{"index.html":{}}}],["consulte",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["consumo",{"_index":870,"title":{},"body":{"index.html":{}}}],["contenidos",{"_index":815,"title":{},"body":{"index.html":{}}}],["contiene",{"_index":295,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["contrario",{"_index":401,"title":{},"body":{"injectables/AppPutService.html":{}}}],["contratado",{"_index":650,"title":{},"body":{"classes/UserGroup.html":{}}}],["controlador",{"_index":768,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["correo",{"_index":663,"title":{},"body":{"classes/UserInfo.html":{}}}],["corriendo",{"_index":899,"title":{},"body":{"index.html":{}}}],["cors",{"_index":722,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["country",{"_index":471,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["coverage",{"_index":684,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":645,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["creacion",{"_index":260,"title":{},"body":{"controllers/AppController.html":{}}}],["creado",{"_index":672,"title":{},"body":{"classes/UserInfo.html":{},"index.html":{}}}],["crear",{"_index":424,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["createby",{"_index":943,"title":{},"body":{"index.html":{}}}],["creationby",{"_index":487,"title":{},"body":{"injectables/AppService.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["creationdate",{"_index":485,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["crecer",{"_index":806,"title":{},"body":{"index.html":{}}}],["creo",{"_index":490,"title":{},"body":{"injectables/AppService.html":{}}}],["cumplen",{"_index":835,"title":{},"body":{"index.html":{}}}],["código",{"_index":761,"title":{},"body":{"index.html":{}}}],["d",{"_index":787,"title":{},"body":{"index.html":{}}}],["d(appservices",{"_index":786,"title":{},"body":{"index.html":{}}}],["dado",{"_index":800,"title":{},"body":{"index.html":{}}}],["daloradius",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["dando",{"_index":894,"title":{},"body":{"index.html":{}}}],["data",{"_index":827,"title":{},"body":{"index.html":{}}}],["database",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":515,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":361,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":514,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["datatype",{"_index":559,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.char(2",{"_index":565,"title":{},"body":{"classes/RadCheck.html":{}}}],["datatype.date",{"_index":682,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.integer",{"_index":563,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.now",{"_index":683,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.string(100",{"_index":681,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.string(128",{"_index":653,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.string(200",{"_index":654,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.string(253",{"_index":566,"title":{},"body":{"classes/RadCheck.html":{}}}],["datatype.string(64",{"_index":564,"title":{},"body":{"classes/RadCheck.html":{}}}],["date",{"_index":444,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["datos",{"_index":213,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["db",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["de",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["debe",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["deben",{"_index":880,"title":{},"body":{"index.html":{}}}],["debiera",{"_index":892,"title":{},"body":{"index.html":{}}}],["decir",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["decorators",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["default",{"_index":918,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":552,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["defecto",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["defined",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["deicidio",{"_index":802,"title":{},"body":{"index.html":{}}}],["dejamos",{"_index":953,"title":{},"body":{"index.html":{}}}],["dejar",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["dejarlo",{"_index":803,"title":{},"body":{"index.html":{}}}],["del",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["delete",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["demasiado",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["deno.js",{"_index":891,"title":{},"body":{"index.html":{}}}],["department",{"_index":452,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["depedencias",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["dependencies",{"_index":352,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desarrollo",{"_index":900,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":749,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"properties.html":{}}}],["desde",{"_index":284,"title":{},"body":{"injectables/AppGetService.html":{}}}],["desechadas",{"_index":843,"title":{},"body":{"index.html":{}}}],["desplegada",{"_index":852,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diferencia",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["diferente",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["disable",{"_index":512,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["diseñado",{"_index":862,"title":{},"body":{"index.html":{}}}],["distintas",{"_index":771,"title":{},"body":{"index.html":{}}}],["distintos",{"_index":775,"title":{},"body":{"index.html":{}}}],["divide",{"_index":797,"title":{},"body":{"index.html":{}}}],["documentación",{"_index":848,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":924,"title":{},"body":{"index.html":{}}}],["donde",{"_index":281,"title":{},"body":{"injectables/AppGetService.html":{}}}],["dto",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["dto.address",{"_index":466,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.attribute",{"_index":494,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.changeuserinfo",{"_index":480,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.city",{"_index":468,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.company",{"_index":455,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.country",{"_index":472,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.creationby",{"_index":488,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.department",{"_index":453,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.email",{"_index":451,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.enableportallogin",{"_index":484,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.firstname",{"_index":448,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.groupname",{"_index":502,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.homephone",{"_index":461,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.lastname",{"_index":450,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.mobilephone",{"_index":464,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.notes",{"_index":478,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.op",{"_index":496,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.portalloginpassword",{"_index":482,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.priority",{"_index":504,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.state",{"_index":470,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.username",{"_index":446,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.value",{"_index":498,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.workphone",{"_index":458,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.zip",{"_index":475,"title":{},"body":{"injectables/AppService.html":{}}}],["dto/updateradcheck.dto",{"_index":233,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/updateuergroup.dto",{"_index":232,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/updateuserinfo.dto",{"_index":231,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/user.dto",{"_index":230,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["durante",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["dónde",{"_index":766,"title":{},"body":{"index.html":{}}}],["e(appgetservice",{"_index":788,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":921,"title":{},"body":{"index.html":{}}}],["editables",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["editar",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["eficiente",{"_index":859,"title":{},"body":{"index.html":{}}}],["el",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electronico",{"_index":664,"title":{},"body":{"classes/UserInfo.html":{}}}],["email",{"_index":217,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["email\":\"string",{"_index":931,"title":{},"body":{"index.html":{}}}],["embargo",{"_index":877,"title":{},"body":{"index.html":{}}}],["en",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["enableportallogin",{"_index":483,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["encarga",{"_index":390,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["encargado",{"_index":769,"title":{},"body":{"index.html":{}}}],["encesita",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["encontrara",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["encuentra",{"_index":428,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["encuentran",{"_index":271,"title":{},"body":{"injectables/AppGetService.html":{}}}],["ende",{"_index":427,"title":{},"body":{"injectables/AppService.html":{}}}],["endpoints",{"_index":812,"title":{},"body":{"index.html":{}}}],["enteros",{"_index":550,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["entrada",{"_index":795,"title":{},"body":{"index.html":{}}}],["entran",{"_index":770,"title":{},"body":{"index.html":{}}}],["entrante",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["enviando",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["enviar",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["envie",{"_index":280,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["err",{"_index":506,"title":{},"body":{"injectables/AppService.html":{}}}],["error",{"_index":412,"title":{},"body":{"injectables/AppPutService.html":{}}}],["error(error",{"_index":415,"title":{},"body":{"injectables/AppPutService.html":{}}}],["es",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"modules/DatabaseModule.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["escalable",{"_index":864,"title":{},"body":{"index.html":{}}}],["escrito",{"_index":916,"title":{},"body":{"index.html":{}}}],["escuchando",{"_index":906,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":511,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["eso",{"_index":847,"title":{},"body":{"index.html":{}}}],["espacios",{"_index":952,"title":{},"body":{"index.html":{}}}],["específicos",{"_index":881,"title":{},"body":{"index.html":{}}}],["est",{"_index":861,"title":{},"body":{"index.html":{}}}],["esta",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["estas",{"_index":841,"title":{},"body":{"index.html":{}}}],["este",{"_index":270,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["evaluado",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["evitando",{"_index":951,"title":{},"body":{"index.html":{}}}],["example",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["excepcion",{"_index":293,"title":{},"body":{"injectables/AppGetService.html":{}}}],["existe",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["export",{"_index":234,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["exporta",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exports",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":717,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["extra",{"_index":895,"title":{},"body":{"index.html":{}}}],["f(appputservice",{"_index":789,"title":{},"body":{"index.html":{}}}],["facilidad",{"_index":820,"title":{},"body":{"index.html":{}}}],["facilitar",{"_index":309,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["falla",{"_index":417,"title":{},"body":{"injectables/AppPutService.html":{}}}],["false",{"_index":544,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["fastify",{"_index":718,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastify/helmet",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":647,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["fila",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["filas",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["filtro",{"_index":410,"title":{},"body":{"injectables/AppPutService.html":{}}}],["finalmente",{"_index":850,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":447,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["firstname\":\"string",{"_index":929,"title":{},"body":{"index.html":{}}}],["formato",{"_index":932,"title":{},"body":{"index.html":{}}}],["framework",{"_index":759,"title":{},"body":{"index.html":{}}}],["fran",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freeradius",{"_index":743,"title":{},"body":{"index.html":{}}}],["front",{"_index":286,"title":{},"body":{"injectables/AppGetService.html":{}}}],["fue",{"_index":418,"title":{},"body":{"injectables/AppPutService.html":{}}}],["funciona",{"_index":750,"title":{},"body":{"index.html":{}}}],["funcionar",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["funciones",{"_index":439,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["function",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g(apppostservice",{"_index":790,"title":{},"body":{"index.html":{}}}],["general",{"_index":277,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["get('/:id",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["get('page/:offset",{"_index":139,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radcheck/:id",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radcheck/page/:offset",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radusergroup/:username",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radusergroup/page/:offset",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid(@param('id",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid(id",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecks",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecks(@param('offset",{"_index":247,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecks(offset",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecksbyid",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecksbyid(@param('id",{"_index":249,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecksbyid(id",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroup",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroup(@param('offset",{"_index":254,"title":{},"body":{"controllers/AppController.html":{}}}],["getradusergroup(offset",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroupbyid",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroupbyid(@param('username",{"_index":256,"title":{},"body":{"controllers/AppController.html":{}}}],["getradusergroupbyid(username",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getting",{"_index":741,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":298,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserbyid(id",{"_index":326,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserinfo",{"_index":299,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserinfo(offset",{"_index":328,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getusersinfo",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["getusersinfo(@param('offset",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["getusersinfo(offset",{"_index":138,"title":{},"body":{"controllers/AppController.html":{}}}],["global",{"_index":521,"title":{},"body":{"modules/PrismaModule.html":{}}}],["graph",{"_index":778,"title":{},"body":{"index.html":{},"modules.html":{}}}],["groupname",{"_index":501,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["groupname\":\"grupo1",{"_index":941,"title":{},"body":{"index.html":{}}}],["grupo",{"_index":276,"title":{},"body":{"injectables/AppGetService.html":{}}}],["grupos",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["h(sequelize",{"_index":791,"title":{},"body":{"index.html":{}}}],["ha",{"_index":889,"title":{},"body":{"index.html":{}}}],["habría",{"_index":818,"title":{},"body":{"index.html":{}}}],["hace",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["haga",{"_index":442,"title":{},"body":{"injectables/AppService.html":{}}}],["han",{"_index":915,"title":{},"body":{"index.html":{}}}],["hasta",{"_index":854,"title":{},"body":{"index.html":{}}}],["hay",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["helmet",{"_index":883,"title":{},"body":{"index.html":{}}}],["home",{"_index":462,"title":{},"body":{"injectables/AppService.html":{}}}],["homephone",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["host",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":964,"title":{},"body":{"index.html":{}}}],["i(dto)aqu",{"_index":792,"title":{},"body":{"index.html":{}}}],["id",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["identifier",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["ifo",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ignore",{"_index":680,"title":{},"body":{"classes/UserInfo.html":{}}}],["import",{"_index":219,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["imports",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["incrementando",{"_index":288,"title":{},"body":{"injectables/AppGetService.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":273,"title":{},"body":{"injectables/AppGetService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["informacion",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["inicia",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["inject",{"_index":330,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('radcheck_repository",{"_index":337,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('user_repository",{"_index":334,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('usergroup_repository",{"_index":336,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":268,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["injectan",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["insertar",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["instalación",{"_index":886,"title":{},"body":{"index.html":{}}}],["install",{"_index":898,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":840,"title":{},"body":{"index.html":{}}}],["interfaz",{"_index":830,"title":{},"body":{"index.html":{}}}],["inyecta",{"_index":304,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["ir",{"_index":287,"title":{},"body":{"injectables/AppGetService.html":{}}}],["isemail",{"_index":613,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":578,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{}}}],["isint()@isnotempty",{"_index":570,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{}}}],["isnotempty",{"_index":575,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isnotempty()@isemail",{"_index":624,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty()@isnumber",{"_index":637,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty()@isstring",{"_index":584,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isnumber",{"_index":586,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional",{"_index":577,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isemail",{"_index":596,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["isoptional()@isnotempty",{"_index":603,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["isoptional()@isnumber",{"_index":582,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isstring",{"_index":568,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isstring",{"_index":576,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isstring()@isnotempty",{"_index":631,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isoptional",{"_index":592,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["javascript",{"_index":839,"title":{},"body":{"index.html":{}}}],["json",{"_index":927,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":961,"title":{},"body":{"index.html":{}}}],["key",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["la",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["lastname",{"_index":449,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["lastname\":\"string",{"_index":930,"title":{},"body":{"index.html":{}}}],["legarl",{"_index":666,"title":{},"body":{"classes/UserInfo.html":{}}}],["legend",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["length",{"_index":938,"title":{},"body":{"index.html":{}}}],["license",{"_index":967,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed](licens",{"_index":969,"title":{},"body":{"index.html":{}}}],["ligera",{"_index":754,"title":{},"body":{"index.html":{}}}],["limit",{"_index":344,"title":{},"body":{"injectables/AppGetService.html":{}}}],["llama",{"_index":813,"title":{},"body":{"index.html":{}}}],["llega",{"_index":805,"title":{},"body":{"index.html":{}}}],["llena",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["llenadas",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["llenados",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["llenar",{"_index":426,"title":{},"body":{"injectables/AppService.html":{}}}],["llenara",{"_index":436,"title":{},"body":{"injectables/AppService.html":{}}}],["lo",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["localhost",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logica",{"_index":289,"title":{},"body":{"injectables/AppGetService.html":{}}}],["lograr",{"_index":751,"title":{},"body":{"index.html":{}}}],["los",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["lr",{"_index":779,"title":{},"body":{"index.html":{}}}],["luego",{"_index":796,"title":{},"body":{"index.html":{}}}],["lógicas",{"_index":772,"title":{},"body":{"index.html":{}}}],["main",{"_index":781,"title":{},"body":{"index.html":{}}}],["manejable",{"_index":443,"title":{},"body":{"injectables/AppService.html":{}}}],["manejada",{"_index":290,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["manejadas",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["manejar",{"_index":391,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["manejo",{"_index":310,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["manera",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["mariadb",{"_index":724,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mas",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["matching",{"_index":266,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matoria",{"_index":676,"title":{},"body":{"classes/UserInfo.html":{}}}],["max",{"_index":937,"title":{},"body":{"index.html":{}}}],["mayor",{"_index":819,"title":{},"body":{"index.html":{}}}],["mediante",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["menos",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["metadata",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["metodo",{"_index":435,"title":{},"body":{"injectables/AppService.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":968,"title":{},"body":{"index.html":{}}}],["mobilephone",{"_index":463,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["mobilephone\":\"string",{"_index":934,"title":{},"body":{"index.html":{}}}],["model",{"_index":539,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["modelo",{"_index":538,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modelos",{"_index":306,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["modificado",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modificar",{"_index":314,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["modo",{"_index":903,"title":{},"body":{"index.html":{}}}],["module",{"_index":349,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["modules",{"_index":351,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["modulos",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["momento",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["mover",{"_index":438,"title":{},"body":{"injectables/AppService.html":{}}}],["muchas",{"_index":312,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["mucho",{"_index":756,"title":{},"body":{"index.html":{}}}],["muchos",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["mysql",{"_index":856,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":962,"title":{},"body":{"index.html":{}}}],["más",{"_index":753,"title":{},"body":{"index.html":{}}}],["máximo",{"_index":866,"title":{},"body":{"index.html":{}}}],["métodos",{"_index":814,"title":{},"body":{"index.html":{}}}],["mínimos",{"_index":925,"title":{},"body":{"index.html":{}}}],["módulos",{"_index":809,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["necesario",{"_index":419,"title":{},"body":{"injectables/AppPutService.html":{}}}],["necesarios",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["necesidades",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["necesite",{"_index":956,"title":{},"body":{"index.html":{}}}],["nest",{"_index":849,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nest.js",{"_index":747,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":966,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["netcom",{"_index":744,"title":{},"body":{"index.html":{}}}],["new",{"_index":414,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":804,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":860,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":275,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["normalmente",{"_index":793,"title":{},"body":{"index.html":{}}}],["notes",{"_index":477,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["npm",{"_index":897,"title":{},"body":{"index.html":{}}}],["nuevas",{"_index":261,"title":{},"body":{"controllers/AppController.html":{}}}],["nuevo",{"_index":425,"title":{},"body":{"injectables/AppService.html":{}}}],["num",{"_index":320,"title":{},"body":{"injectables/AppGetService.html":{}}}],["number",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["numero",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{}}}],["numeros",{"_index":549,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["o",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["obejct",{"_index":262,"title":{},"body":{"controllers/AppController.html":{}}}],["object",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["objetivo",{"_index":423,"title":{},"body":{"injectables/AppService.html":{}}}],["objeto",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["objetos",{"_index":319,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["obligatoriamente",{"_index":399,"title":{},"body":{"injectables/AppPutService.html":{}}}],["obligatorio",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["obligatorios",{"_index":614,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["obtener",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["obtiene",{"_index":307,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["obviamente",{"_index":887,"title":{},"body":{"index.html":{}}}],["offset",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["oop",{"_index":765,"title":{},"body":{"index.html":{}}}],["op",{"_index":495,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["op\":\"string",{"_index":936,"title":{},"body":{"index.html":{}}}],["opcionales",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["operacion",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["operaciones",{"_index":246,"title":{},"body":{"controllers/AppController.html":{}}}],["operacviones",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["operar",{"_index":400,"title":{},"body":{"injectables/AppPutService.html":{}}}],["optimizando",{"_index":867,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["optro",{"_index":441,"title":{},"body":{"injectables/AppService.html":{}}}],["orden",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{}}}],["order",{"_index":345,"title":{},"body":{"injectables/AppGetService.html":{}}}],["orientada",{"_index":764,"title":{},"body":{"index.html":{}}}],["orm",{"_index":510,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["otras",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["otro",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["out",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["overview",{"_index":975,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":710,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagina",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["paginada",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["paquetes",{"_index":878,"title":{},"body":{"index.html":{}}}],["para",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["parametors",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["parametro",{"_index":657,"title":{},"body":{"classes/UserInfo.html":{}}}],["parametros",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["parseintpipe",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["particular",{"_index":291,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["partir",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["password",{"_index":588,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pequeños",{"_index":810,"title":{},"body":{"index.html":{}}}],["perdiendo",{"_index":844,"title":{},"body":{"index.html":{}}}],["permite",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["pero",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["pertinente",{"_index":884,"title":{},"body":{"index.html":{}}}],["peticion",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["peticiones",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["petición",{"_index":824,"title":{},"body":{"index.html":{}}}],["phone",{"_index":456,"title":{},"body":{"injectables/AppService.html":{}}}],["pide",{"_index":660,"title":{},"body":{"classes/UserInfo.html":{}}}],["plan",{"_index":649,"title":{},"body":{"classes/UserGroup.html":{}}}],["plano",{"_index":409,"title":{},"body":{"injectables/AppPutService.html":{}}}],["plus",{"_index":745,"title":{},"body":{"index.html":{}}}],["pocas",{"_index":801,"title":{},"body":{"index.html":{}}}],["poder",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["por",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["porque",{"_index":294,"title":{},"body":{"injectables/AppGetService.html":{}}}],["port",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portalloginpassword",{"_index":481,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["portalloginpassword:string",{"_index":957,"title":{},"body":{"index.html":{}}}],["posee",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["post",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["posttest",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["posttest(@body",{"_index":263,"title":{},"body":{"controllers/AppController.html":{}}}],["posttest(dto",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["postuser",{"_index":431,"title":{},"body":{"injectables/AppService.html":{}}}],["postuser(dto",{"_index":433,"title":{},"body":{"injectables/AppService.html":{}}}],["preocuparse",{"_index":872,"title":{},"body":{"index.html":{}}}],["prettier/prettier",{"_index":513,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["primary",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["primarykey",{"_index":546,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["primera",{"_index":282,"title":{},"body":{"injectables/AppGetService.html":{}}}],["principal",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["priority",{"_index":503,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["priority\":number",{"_index":942,"title":{},"body":{"index.html":{}}}],["prisma.service",{"_index":522,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":530,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":362,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":519,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":237,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["probado",{"_index":890,"title":{},"body":{"index.html":{}}}],["procesar",{"_index":758,"title":{},"body":{"index.html":{}}}],["producción",{"_index":912,"title":{},"body":{"index.html":{}}}],["programación",{"_index":763,"title":{},"body":{"index.html":{}}}],["properties",{"_index":540,"title":{"properties.html":{}},"body":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"properties.html":{}}}],["proveedor",{"_index":508,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["provide",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["puede",{"_index":278,"title":{},"body":{"injectables/AppGetService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["puerto",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["put",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["put('radcheck",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["put('radusergroup",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["que",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["quien",{"_index":644,"title":{},"body":{"classes/UserDto.html":{}}}],["quién",{"_index":811,"title":{},"body":{"index.html":{}}}],["radcheck",{"_index":91,"title":{"classes/RadCheck.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UserDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["radcheck_repository",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radcheckprovider",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["radcheckrepository",{"_index":302,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["radius",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radusergroup",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["readonly",{"_index":238,"title":{},"body":{"controllers/AppController.html":{}}}],["realiza",{"_index":396,"title":{},"body":{"injectables/AppPutService.html":{}}}],["realizan",{"_index":908,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["realizo",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["rechaza",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["rechazada",{"_index":402,"title":{},"body":{"injectables/AppPutService.html":{}}}],["rechazo",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["recomienda",{"_index":807,"title":{},"body":{"index.html":{}}}],["recursos",{"_index":871,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":954,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["reinicia",{"_index":910,"title":{},"body":{"index.html":{}}}],["rendir",{"_index":865,"title":{},"body":{"index.html":{}}}],["requeire",{"_index":398,"title":{},"body":{"injectables/AppPutService.html":{}}}],["requerido",{"_index":926,"title":{},"body":{"index.html":{}}}],["requerimos",{"_index":888,"title":{},"body":{"index.html":{}}}],["requerirán",{"_index":882,"title":{},"body":{"index.html":{}}}],["reques",{"_index":836,"title":{},"body":{"index.html":{}}}],["requests",{"_index":834,"title":{},"body":{"index.html":{}}}],["requiere",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["reset",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["respositorios",{"_index":305,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["respuesta",{"_index":869,"title":{},"body":{"index.html":{}}}],["resto",{"_index":955,"title":{},"body":{"index.html":{}}}],["results",{"_index":265,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["return",{"_index":240,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["root",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":901,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["rutas",{"_index":392,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["rxjs",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["rápida",{"_index":757,"title":{},"body":{"index.html":{}}}],["rápido",{"_index":858,"title":{},"body":{"index.html":{}}}],["se",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segun",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["seguridad",{"_index":846,"title":{},"body":{"index.html":{}}}],["según",{"_index":822,"title":{},"body":{"index.html":{}}}],["separarlo",{"_index":808,"title":{},"body":{"index.html":{}}}],["separaron",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["separo",{"_index":821,"title":{},"body":{"index.html":{}}}],["sequeelize/databse.module",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/radusergroup/usergroup.entity",{"_index":332,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/radusergroup/usergroup.providers",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/rasdusercheck/radcheck.entity",{"_index":333,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/rasdusercheck/radusercheck.provider",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/user/user.entity",{"_index":331,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/user/user.providers",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["sequelize",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sequelize.addmodels([userinfo",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.sync",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ser",{"_index":279,"title":{},"body":{"injectables/AppGetService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["servicio",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["servicios",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["si",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["siguientes",{"_index":677,"title":{},"body":{"classes/UserInfo.html":{}}}],["sim",{"_index":945,"title":{},"body":{"index.html":{}}}],["sin",{"_index":876,"title":{},"body":{"index.html":{}}}],["sino",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["sintaxis",{"_index":875,"title":{},"body":{"index.html":{}}}],["sirve",{"_index":794,"title":{},"body":{"index.html":{}}}],["sirven",{"_index":829,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":748,"title":{},"body":{"index.html":{}}}],["sola",{"_index":152,"title":{},"body":{"controllers/AppController.html":{}}}],["solicita",{"_index":318,"title":{},"body":{"injectables/AppGetService.html":{}}}],["solo",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["solocados",{"_index":679,"title":{},"body":{"classes/UserInfo.html":{}}}],["son",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["soportan",{"_index":773,"title":{},"body":{"index.html":{}}}],["soportar",{"_index":893,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["src/.../database.providers.ts",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../radusercheck.provider.ts",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.providers.ts",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usergroup.providers.ts",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:106",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:117",{"_index":123,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:127",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:142",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:38",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:49",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:60",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:73",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:84",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:94",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":421,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":432,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:35",{"_index":434,"title":{},"body":{"injectables/AppService.html":{}}}],["src/appget.service.ts",{"_index":269,"title":{},"body":{"injectables/AppGetService.html":{},"coverage.html":{}}}],["src/appget.service.ts:119",{"_index":324,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:14",{"_index":303,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:140",{"_index":325,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:37",{"_index":329,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:58",{"_index":327,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:77",{"_index":317,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:98",{"_index":321,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appput.service.ts",{"_index":389,"title":{},"body":{"injectables/AppPutService.html":{},"coverage.html":{}}}],["src/appput.service.ts:14",{"_index":394,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:36",{"_index":405,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:57",{"_index":395,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:78",{"_index":403,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/dto",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["src/dto/updateradcheck.dto.ts",{"_index":567,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"coverage.html":{}}}],["src/dto/updateradcheck.dto.ts:13",{"_index":571,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:17",{"_index":573,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:21",{"_index":569,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:25",{"_index":572,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:29",{"_index":574,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateuergroup.dto.ts",{"_index":580,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"coverage.html":{}}}],["src/dto/updateuergroup.dto.ts:12",{"_index":585,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuergroup.dto.ts:16",{"_index":581,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuergroup.dto.ts:20",{"_index":583,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuserinfo.dto.ts",{"_index":587,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"coverage.html":{}}}],["src/dto/updateuserinfo.dto.ts:14",{"_index":609,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:18",{"_index":601,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:22",{"_index":610,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:26",{"_index":606,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:30",{"_index":599,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:34",{"_index":602,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:38",{"_index":597,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:42",{"_index":604,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:48",{"_index":595,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:52",{"_index":593,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:56",{"_index":611,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:60",{"_index":600,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:64",{"_index":589,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:68",{"_index":591,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:72",{"_index":608,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:76",{"_index":594,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:80",{"_index":612,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:84",{"_index":605,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:88",{"_index":590,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:92",{"_index":607,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:96",{"_index":598,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/user.dto.ts",{"_index":615,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/dto/user.dto.ts:101",{"_index":617,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:105",{"_index":634,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:109",{"_index":641,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:115",{"_index":628,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:119",{"_index":638,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:15",{"_index":622,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:19",{"_index":640,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:23",{"_index":635,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:27",{"_index":627,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:31",{"_index":630,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:35",{"_index":625,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:39",{"_index":632,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:47",{"_index":623,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:51",{"_index":620,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:55",{"_index":642,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:59",{"_index":629,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:63",{"_index":616,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:67",{"_index":619,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:71",{"_index":639,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:75",{"_index":621,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:79",{"_index":643,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:83",{"_index":633,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:87",{"_index":618,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:91",{"_index":636,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:95",{"_index":626,"title":{},"body":{"classes/UserDto.html":{}}}],["src/main.ts",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":520,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":528,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/sequeelize/database.providers.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/databse.module.ts",{"_index":507,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts",{"_index":646,"title":{},"body":{"classes/UserGroup.html":{},"coverage.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:12",{"_index":652,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:17",{"_index":648,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:25",{"_index":651,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.providers.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts",{"_index":537,"title":{},"body":{"classes/RadCheck.html":{},"coverage.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:13",{"_index":548,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:18",{"_index":554,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:23",{"_index":545,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:28",{"_index":553,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:33",{"_index":556,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radusercheck.provider.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/user/user.entity.ts",{"_index":655,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["src/sequeelize/user/user.entity.ts:103",{"_index":670,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:145",{"_index":659,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:155",{"_index":674,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:161",{"_index":671,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:17",{"_index":667,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:22",{"_index":675,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:27",{"_index":665,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:32",{"_index":668,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:37",{"_index":662,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:91",{"_index":656,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.providers.ts",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":902,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":911,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":913,"title":{},"body":{"index.html":{}}}],["started",{"_index":742,"title":{"index.html":{}},"body":{}}],["state",{"_index":469,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["statements",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":958,"title":{},"body":{"index.html":{}}}],["string",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["su",{"_index":274,"title":{},"body":{"injectables/AppGetService.html":{}}}],["submódulos",{"_index":798,"title":{},"body":{"index.html":{}}}],["super",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":971,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":972,"title":{},"body":{"modules.html":{}}}],["tabla",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["tablas",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["table",{"_index":557,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["tablename",{"_index":561,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["tal",{"_index":838,"title":{},"body":{"index.html":{}}}],["tendría",{"_index":755,"title":{},"body":{"index.html":{}}}],["test",{"_index":914,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":923,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":922,"title":{},"body":{"index.html":{}}}],["tests",{"_index":920,"title":{},"body":{"index.html":{}}}],["this.appgetservice.getradchecks(offset",{"_index":248,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradchecksbyid(id",{"_index":250,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradusergroup(offset",{"_index":255,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradusergroupbyid(username",{"_index":257,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getuserbyid(id",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getuserinfo(offset",{"_index":241,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateradcheck(query",{"_index":252,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateusergroup(query",{"_index":259,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateuserinfo(query",{"_index":245,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.postuser(dto",{"_index":264,"title":{},"body":{"controllers/AppController.html":{}}}],["this.radcheckrepository.create",{"_index":492,"title":{},"body":{"injectables/AppService.html":{}}}],["this.radcheckrepository.update(updatedata",{"_index":416,"title":{},"body":{"injectables/AppPutService.html":{}}}],["this.usergrouprepository.create",{"_index":500,"title":{},"body":{"injectables/AppService.html":{}}}],["this.usergrouprepository.update(updatedata",{"_index":420,"title":{},"body":{"injectables/AppPutService.html":{}}}],["this.userinforepository.create",{"_index":445,"title":{},"body":{"injectables/AppService.html":{}}}],["this.userinforepository.findall",{"_index":343,"title":{},"body":{"injectables/AppGetService.html":{}}}],["this.userinforepository.update(updatedata",{"_index":407,"title":{},"body":{"injectables/AppPutService.html":{}}}],["throw",{"_index":413,"title":{},"body":{"injectables/AppPutService.html":{}}}],["tiempo",{"_index":868,"title":{},"body":{"index.html":{}}}],["tiene",{"_index":422,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["timestamps",{"_index":562,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["tipo",{"_index":823,"title":{},"body":{"index.html":{}}}],["tipos",{"_index":833,"title":{},"body":{"index.html":{}}}],["todas",{"_index":272,"title":{},"body":{"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{}}}],["todo",{"_index":437,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["todos",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["touch",{"_index":959,"title":{},"body":{"index.html":{}}}],["trabajado",{"_index":855,"title":{},"body":{"index.html":{}}}],["trabajo",{"_index":760,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":828,"title":{},"body":{"index.html":{}}}],["transpilación",{"_index":842,"title":{},"body":{"index.html":{}}}],["traves",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["travez",{"_index":136,"title":{},"body":{"controllers/AppController.html":{}}}],["través",{"_index":832,"title":{},"body":{"index.html":{}}}],["tres",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["true",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["try",{"_index":339,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["tuvo",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["twitter",{"_index":965,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":335,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["typescript",{"_index":560,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"index.html":{}}}],["u",{"_index":440,"title":{},"body":{"injectables/AppService.html":{}}}],["un",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["una",{"_index":151,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["undefined",{"_index":542,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["unemail@email.com",{"_index":218,"title":{},"body":{"controllers/AppController.html":{}}}],["unica",{"_index":429,"title":{},"body":{"injectables/AppService.html":{}}}],["unico",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":919,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["unlicensed",{"_index":981,"title":{},"body":{"properties.html":{}}}],["uno",{"_index":817,"title":{},"body":{"index.html":{}}}],["unstring",{"_index":404,"title":{},"body":{"injectables/AppPutService.html":{}}}],["update",{"_index":397,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["updateby",{"_index":489,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["updatedata",{"_index":406,"title":{},"body":{"injectables/AppPutService.html":{}}}],["updatedate",{"_index":486,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["updateradcheck",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateradcheck(@body",{"_index":251,"title":{},"body":{"controllers/AppController.html":{}}}],["updateradcheck(query",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateradcheckdto",{"_index":184,"title":{"classes/UpdateRadCheckDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateRadCheckDto.html":{},"coverage.html":{}}}],["updateusergroup",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateusergroup(@body",{"_index":258,"title":{},"body":{"controllers/AppController.html":{}}}],["updateusergroup(query",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateusergroupdto",{"_index":200,"title":{"classes/UpdateUserGroupDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateUserGroupDto.html":{},"coverage.html":{}}}],["updateuserinfo",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateuserinfo(@body",{"_index":244,"title":{},"body":{"controllers/AppController.html":{}}}],["updateuserinfo(query",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateuserinfodto",{"_index":211,"title":{"classes/UpdateUserInfoDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateUserInfoDto.html":{},"coverage.html":{}}}],["url",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{}}}],["usa",{"_index":292,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["usado",{"_index":746,"title":{},"body":{"index.html":{}}}],["usaername",{"_index":296,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usando",{"_index":323,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usar",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["usara",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["usarse",{"_index":311,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["usefactory",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":338,"title":{},"body":{"injectables/AppGetService.html":{}}}],["user.dto.ts",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["user_repository",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdto",{"_index":143,"title":{"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["usergoup",{"_index":505,"title":{},"body":{"injectables/AppService.html":{}}}],["usergroup",{"_index":253,"title":{"classes/UserGroup.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserGroup.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergroup_repository",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usergroupproviders",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergrouprepository",{"_index":301,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["userinfo",{"_index":70,"title":{"classes/UserInfo.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"coverage.html":{},"index.html":{}}}],["userinforepository",{"_index":316,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["username",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["username\":\"string",{"_index":928,"title":{},"body":{"index.html":{}}}],["userproviders",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersinfo",{"_index":341,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usersinfo?.length",{"_index":348,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usevalue",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue:usergroup",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue:userinfo",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uso",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["usted",{"_index":949,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":491,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["usuarios",{"_index":141,"title":{},"body":{"controllers/AppController.html":{}}}],["utilizar",{"_index":408,"title":{},"body":{"injectables/AppPutService.html":{}}}],["va",{"_index":944,"title":{},"body":{"index.html":{}}}],["vacio",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["vacios",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["validator",{"_index":579,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["valor",{"_index":661,"title":{},"body":{"classes/UserInfo.html":{}}}],["valores",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["value",{"_index":497,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value\":\"araujo",{"_index":940,"title":{},"body":{"index.html":{}}}],["variable",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":982,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velocidad",{"_index":896,"title":{},"body":{"index.html":{}}}],["venezuela",{"_index":473,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["ver",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["verbo",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["verificar",{"_index":831,"title":{},"body":{"index.html":{}}}],["version",{"_index":979,"title":{},"body":{"properties.html":{}}}],["viene",{"_index":917,"title":{},"body":{"index.html":{}}}],["válido",{"_index":933,"title":{},"body":{"index.html":{}}}],["watch",{"_index":904,"title":{},"body":{"index.html":{}}}],["web",{"_index":857,"title":{},"body":{"index.html":{}}}],["website",{"_index":963,"title":{},"body":{"index.html":{}}}],["work",{"_index":459,"title":{},"body":{"injectables/AppService.html":{}}}],["workphone",{"_index":457,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["y",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["ya",{"_index":874,"title":{},"body":{"index.html":{}}}],["zip",{"_index":474,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["zoom",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                De momento solo hay un 'Controller', pero se separaron las operacviones en diferente Servicios segun el verbo HTTP.\nEs decir hay un servicio para las peticiones GET, otro para POST y otro mas para las PUT.\nNo se usara (al menos de momento) un servicio con peticiones Delete, si hay que borrar valores se hace en DaloRadius.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                getRadChecks\n                            \n                            \n                                    \n                                getRadChecksById\n                            \n                            \n                                    \n                                getRadUserGroup\n                            \n                            \n                                    \n                                getRadUserGroupByID\n                            \n                            \n                                    \n                                getUsersInfo\n                            \n                            \n                                    \n                                    Async\n                                postTest\n                            \n                            \n                                    \n                                updateRadCheck\n                            \n                            \n                                    \n                                updateUserGroup\n                            \n                            \n                                    \n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:49\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto UserInfo a partir de la busqueda por 'id'.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadChecks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecks(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radcheck/page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:73\n                \n            \n\n\n            \n                \n                    Retorna a la info del 'radcheck' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [{Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadChecksById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecksById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radcheck/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:84\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto Radcheck a partir de la busqueda por 'id'.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroup(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radusergroup/page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:106\n                \n            \n\n\n            \n                \n                    Retorna ala info del 'radusergroup' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        []\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadUserGroupByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroupByID(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radusergroup/:username')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:117\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto Radcheck a partir de la busqueda por el campo 'username'. radusergroup no posee id para las filas, ademas se tuvo que colocar el username como Primary Key para poder insertar lo valores a travez de Sequelize.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getUsersInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersInfo(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:38\n                \n            \n\n\n            \n                \n                    Retorna a los usuarios de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [{Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        postTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    postTest(dto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:142\n                \n            \n\n\n            \n                \n                    Con esta ruta son llenadas las tres tablas en una sola peticion.\nNo todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\nConsulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRadCheck(query: UpdateRadCheckDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('radcheck')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:94\n                \n            \n\n\n            \n                \n                    Permite editar las filas del la tabla 'radcheck'. Muchos de los parametors son opcionales pero se encesita el 'id' de la fila a editar o se rechaza la peticion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateRadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserGroup(query: UpdateUserGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('radusergroup')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:127\n                \n            \n\n\n            \n                \n                    Permite editar las filas del la tabla 'radusergroup'. A diferencia de las otras tablas manejadas en la API, esta tabla no posee un campo 'id', se uso el 'username' como primary key por lo que se requiere para poder realizar la peticion, sino, se rechaza la operacion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(query: UpdateUserInfoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:60\n                \n            \n\n\n            \n                \n                    Permite editar la info de un objeto UserInfo. Se debe enviar los datos a editar, no requiere todos los campos editables pero requiere el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserInfoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            { id: 14, email: unemail@email.com}\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  ParseIntPipe,\n  Put,\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AppGetService } from './appGet.service';\nimport { AppPutService } from './appPut.service';\nimport { UserDto } from './dto/user.dto';\nimport { UpdateUserInfoDto } from './dto/updateUserInfo.dto';\nimport { UpdateUserGroupDto } from './dto/updateUerGroup.dto';\nimport { UpdateRadCheckDto } from './dto/updateRadCheck.dto';\n\n/**\n * De momento solo hay un 'Controller', pero se separaron las operacviones en diferente Servicios segun el verbo HTTP.\n * Es decir hay un servicio para las peticiones GET, otro para POST y otro mas para las PUT.\n * No se usara (al menos de momento) un servicio con peticiones Delete, si hay que borrar valores se hace en DaloRadius.\n */\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly appGetService: AppGetService,\n    private readonly appPutService: AppPutService,\n  ) {}\n\n  /**\n   * Retorna a los usuarios de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param { number } offset\n   * @returns [{Object}, {Object}, ....]\n   */\n  @Get('page/:offset')\n  getUsersInfo(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getUserInfo(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto UserInfo a partir de la busqueda por 'id'.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param { number } id\n   * @returns Object\n   */\n  @Get('/:id')\n  getById(@Param('id') id: number) {\n    return this.appGetService.getUserById(id);\n  }\n\n  /**\n   * Permite editar la info de un objeto UserInfo. Se debe enviar los datos a editar, no requiere todos los campos editables pero requiere el id.\n   * @example { id: 14, email: unemail@email.com}\n   * @param  {  UpdateUserInfoDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put()\n  updateUserInfo(@Body() query: UpdateUserInfoDto) {\n    return this.appPutService.updateUserInfo(query);\n  }\n\n  //* OPERACIONES DE RADCHECK *//\n\n  /**\n   * Retorna a la info del 'radcheck' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param { number } offset\n   * @returns [{Object}, {Object}, ....]\n   */\n  @Get('radcheck/page/:offset')\n  getRadChecks(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getRadChecks(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto Radcheck a partir de la busqueda por 'id'.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param { number } id\n   * @returns\n   */\n  @Get('radcheck/:id')\n  getRadChecksById(@Param('id') id: number) {\n    return this.appGetService.getRadChecksById(id);\n  }\n\n  /**\n   * Permite editar las filas del la tabla 'radcheck'. Muchos de los parametors son opcionales pero se encesita el 'id' de la fila a editar o se rechaza la peticion.\n   * @param { UpdateRadCheckDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put('radcheck')\n  updateRadCheck(@Body() query: UpdateRadCheckDto) {\n    return this.appPutService.updateRadCheck(query);\n  }\n\n  //* OPERACIONES DE USERGROUP *//\n  /**\n   * Retorna ala info del 'radusergroup' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param offset\n   * @returns []\n   */\n  @Get('radusergroup/page/:offset')\n  getRadUserGroup(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getRadUserGroup(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto Radcheck a partir de la busqueda por el campo 'username'. radusergroup no posee id para las filas, ademas se tuvo que colocar el username como Primary Key para poder insertar lo valores a travez de Sequelize.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param username\n   * @returns\n   */\n  @Get('radusergroup/:username')\n  getRadUserGroupByID(@Param('username') username: string) {\n    return this.appGetService.getRadUserGroupById(username);\n  }\n\n  /**\n   * Permite editar las filas del la tabla 'radusergroup'. A diferencia de las otras tablas manejadas en la API, esta tabla no posee un campo 'id', se uso el 'username' como primary key por lo que se requiere para poder realizar la peticion, sino, se rechaza la operacion.\n   * @param { UpdateUserGroupDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put('radusergroup')\n  updateUserGroup(@Body() query: UpdateUserGroupDto) {\n    return this.appPutService.updateUserGroup(query);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //* RUTA POST PARA CREACION DE NUEVAS FILAS EN LA TRES TABLAS *//\n  /**\n   * Con esta ruta son llenadas las tres tablas en una sola peticion.\n   * No todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\n   * Consulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n   * @param dto\n   * @returns {Obejct}\n   */\n  @Post()\n  async postTest(@Body() dto: UserDto) {\n    return this.appService.postUser(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppGetService.html":{"url":"injectables/AppGetService.html","title":"injectable - AppGetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppGetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appGet.service.ts\n        \n\n\n            \n                Description\n            \n            \n                En este servicio se encuentran todas las peticiones GET como lo indica su nombre.\nLas peticiones de un grupo general como puede ser 'radcheck' requiere que se envie un numero de pagina, donde la primera pagina debe ser 0, y a partir de ahi, desde el componente en el front ir incrementando segun la logica manejada en el componente.\nPara un objeto en particular se usa el 'id' con excepcion de la tabla 'radusergroup' porque esta no contiene campo 'id' por lo que se usa el 'usaername' para realizar las busquedas.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRadChecks\n                            \n                            \n                                    Async\n                                getRadChecksById\n                            \n                            \n                                    Async\n                                getRadUserGroup\n                            \n                            \n                                    Async\n                                getRadUserGroupById\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/appGet.service.ts:14\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadChecks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecks(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:77\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'radcheck'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        num\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadChecksById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecksById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:98\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'radcheck' usando su numero de id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroup(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:119\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'radusergroup'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        num\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadUserGroupById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroupById(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:140\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'username' usando un string con su nombre.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:58\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'userinfo' usando su numero de id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInfo(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:37\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'userinfo'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\n\n/**\n * En este servicio se encuentran todas las peticiones GET como lo indica su nombre.\n * Las peticiones de un grupo general como puede ser 'radcheck' requiere que se envie un numero de pagina, donde la primera pagina debe ser 0, y a partir de ahi, desde el componente en el front ir incrementando segun la logica manejada en el componente.\n * \n * Para un objeto en particular se usa el 'id' con excepcion de la tabla 'radusergroup' porque esta no contiene campo 'id' por lo que se usa el 'usaername' para realizar las busquedas.\n */\n@Injectable()\nexport class AppGetService {\n    /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository \n   * @param userGroupRepository \n   * @param radcheckRepository \n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n\n  //* USER INFO *//\n  /**\n   * Solicita a grupos de 50 objetos 'userinfo'.\n   * @param { num } offset\n   * @returns [{Object}, {Object}, {Object}....]\n   */\n  async getUserInfo(offset: number) {\n    try {\n      const usersInfo = await this.userInfoRepository.findAll({\n        limit: 50,\n        offset: offset,\n        order: [['id', 'ASC']], // Orden ascendente por el campo 'id'\n      });\n\n      if (usersInfo?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nAppGetService\n\nAppGetService\n\nAppModule -->\n\nAppGetService->AppModule\n\n\n\n\n\nAppPutService\n\nAppPutService\n\nAppModule -->\n\nAppPutService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo principal de la aplicacion. Se injectan todas las depedencias, servicios y modulos necesarios.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppGetService\n                        \n                        \n                            AppPutService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './sequeelize/databse.module';\nimport { userProviders } from './sequeelize/user/user.providers';\nimport { radcheckProvider } from './sequeelize/rasdusercheck/radusercheck.provider';\nimport { userGroupProviders } from './sequeelize/radusergroup/usergroup.providers';\nimport { AppGetService } from './appGet.service';\nimport { AppPutService } from './appPut.service';\n\n/**\n * Modulo principal de la aplicacion. Se injectan todas las depedencias, servicios y modulos necesarios.\n */\n@Module({\n  imports: [\n    PrismaModule,\n    ConfigModule.forRoot({ isGlobal: true }),\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    AppGetService,\n    AppPutService,\n    ...userProviders,\n    ...radcheckProvider,\n    ...userGroupProviders,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppPutService.html":{"url":"injectables/AppPutService.html","title":"injectable - AppPutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppPutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appPut.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Esta ruta se encarga de manejar todas las rutas PUT para actualizar los datos en las tablas.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateRadCheck\n                            \n                            \n                                    Async\n                                updateUserGroup\n                            \n                            \n                                    Async\n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/appPut.service.ts:14\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRadCheck(query: UpdateRadCheckDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:57\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'radcheck', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateRadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserGroup(query: UpdateUserGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:78\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'radcheck', requeire unstring con un 'username' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(query: UpdateUserInfoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:36\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'userinfo', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserInfoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\nimport { UpdateUserInfoDto } from './dto/updateUserInfo.dto';\nimport { UpdateRadCheckDto } from './dto/updateRadCheck.dto';\nimport { UpdateUserGroupDto } from './dto/updateUerGroup.dto';\n\n/**\n * Esta ruta se encarga de manejar todas las rutas PUT para actualizar los datos en las tablas.\n */\n@Injectable()\nexport class AppPutService {\n    /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository \n   * @param userGroupRepository \n   * @param radcheckRepository \n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n\n  /**\n   * Realiza el update de la tabla 'userinfo', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateUserInfoDto } query\n   * @returns 1\n   */\n  async updateUserInfo( query: UpdateUserInfoDto ) {\n    try {\n      const { id, ...updateData } = query;\n\n      const updateUserInfo = await this.userInfoRepository.update(updateData, {\n        where: { id: id }, // Utilizar un objeto plano para el filtro 'where'\n      });\n\n      return updateUserInfo;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Realiza el update de la tabla 'radcheck', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateRadCheckDto } query \n   * @returns  1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  async updateRadCheck(query: UpdateRadCheckDto) {\n    try {\n      const { id, ...updateData } = query;\n      \n      const updateRadCheck = await this.radcheckRepository.update(updateData, {\n        where: { id: id }, // Utilizar un objeto plano para el filtro 'where'\n      });\n\n      return updateRadCheck;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n    /**\n   * Realiza el update de la tabla 'radcheck', requeire unstring con un 'username' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateUserGroupDto } query \n   * @returns  1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  async updateUserGroup(query: UpdateUserGroupDto) {\n    try {\n      const { username, ...updateData } = query;\n\n      //* Retorna 1 si hace update, 0 si falla o no fue necesario.\n      const updateUserGroup = await this.userGroupRepository.update(updateData, {\n        where: { username: username },\n      });\n\n      return updateUserGroup;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Este servicio tiene como objetivo crear un nuevo userinfo, radcheck y radusergroup en una solo peticion para llenar los datos de las tablas. Por ende, solo se encuentra una unica peticion PUT en esta clase.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                postUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        postUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    postUser(dto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:35\n                \n            \n\n\n            \n                \n                    este metodo llenara las tablas userinfo, radcheck y radusergroup.\nNo todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\nConsulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        , userinfo, radcheck }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserDto } from './dto/user.dto';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\n\n/**\n * Este servicio tiene como objetivo crear un nuevo userinfo, radcheck y radusergroup en una solo peticion para llenar los datos de las tablas. Por ende, solo se encuentra una unica peticion PUT en esta clase.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository\n   * @param userGroupRepository\n   * @param radcheckRepository\n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n  /**\n   * este metodo llenara las tablas userinfo, radcheck y radusergroup.\n   * No todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\n   * Consulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n   * @param { UserDto } dto\n   * @returns { usergroup, userinfo, radcheck }\n   * @todo Mover objetos a funciones u optro servicio que haga mas manejable la info.\n   */\n  async postUser(dto: UserDto) {\n    try {\n      const date = new Date();\n\n      const userinfo = await this.userInfoRepository.create({\n        username: dto.username,\n        firstname: dto.firstname,\n        lastname: dto.lastname,\n        email: dto.email,\n        department: dto.department ? dto.department : 'No department info',\n        company: dto.company ? dto.company : 'No company phone',\n        workphone: dto.workphone ? dto.workphone : 'No work phone',\n        homephone: dto.homephone ? dto.homephone : 'No home phone',\n        mobilephone: dto.mobilephone,\n        address: dto.address ? dto.address : 'No address',\n        city: dto.city ? dto.city : 'No city',\n        state: dto.state ? dto.state : 'No state',\n        country: dto.country ? dto.country : 'Venezuela',\n        zip: dto.zip ? dto.zip : '0000',\n        notes: dto.notes ? dto.notes : '',\n        changeuserinfo: dto.changeuserinfo ? dto.changeuserinfo : '0',\n        portalloginpassword: dto.portalloginpassword\n          ? dto.portalloginpassword\n          : '',\n        enableportallogin: dto.enableportallogin ? dto.enableportallogin : '0',\n        creationdate: date,\n        updatedate: date,\n        creationby: dto.creationby,\n        updateby: 'No update',\n      });\n\n      if (!userinfo) return 'No se creo el usuario';\n\n      const radcheck = await this.radcheckRepository.create({\n        username: dto.username,\n        attribute: dto.attribute,\n        op: dto.op,\n        value: dto.value,\n      });\n\n      console.log(!radcheck);\n\n      if (!radcheck) return 'No se creo el radcheck';\n\n      const usergroup = await this.userGroupRepository.create({\n        username: dto.username,\n        groupname: dto.groupname,\n        priority: dto.priority,\n      });\n\n      if (!usergroup) return 'No se creo el usergoup';\n\n      return { usergroup, userinfo, radcheck };\n    } catch (err) {\n      return err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sequeelize/databse.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo del proveedor de la base de datos para la API.\nEl ORM es Sequelize.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n/**\n * Modulo del proveedor de la base de datos para la API.\n * El ORM es Sequelize.\n */\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadCheck.html":{"url":"classes/RadCheck.html","title":"class - RadCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/rasdusercheck/radcheck.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'radcheck'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attribute\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                op\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:23\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:13\n                        \n                    \n\n            \n                \n                    id en numeros enteros, autoincremental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, defaultValue: '=='})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:28\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:18\n                        \n                    \n\n            \n                \n                    Nombre del usuario asociado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:33\n                        \n                    \n\n            \n                \n                    ???\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'radcheck'.\n */\n@Table({ tableName: 'radcheck',  timestamps: false  })\nexport class RadCheck extends Model {\n  /**\n   * id en numeros enteros, autoincremental.\n   */\n  @Column({ type: DataType.INTEGER, primaryKey: true, autoIncrement: true, })\n  id: number;\n  /**\n   * Nombre del usuario asociado.\n   */\n  @Column({ type: DataType.STRING(64), allowNull: false })\n  username: string;\n  /**\n   * ????\n   */\n  @Column({ type: DataType.STRING(64), allowNull: false })\n  attribute: string;\n  /**\n  * ???? \n  */\n  @Column({ type: DataType.CHAR(2), allowNull: false, defaultValue: '==' })\n  op: string;\n  /**\n   * ???\n   */\n  @Column({ type: DataType.STRING(253), allowNull: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRadCheckDto.html":{"url":"classes/UpdateRadCheckDto.html","title":"class - UpdateRadCheckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRadCheckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateRadCheck.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsOptional,\n\tIsInt,\n} from 'class-validator';\n\nexport class UpdateRadCheckDto {\n\n\t@IsInt()\n\t@IsNotEmpty()\n\tid: number;\n\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  attribute: string;\n\n  @IsOptional()\n  @IsString()\n  op: string;\n\n  @IsOptional()\n  @IsString()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserGroupDto.html":{"url":"classes/UpdateUserGroupDto.html","title":"class - UpdateUserGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateUerGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsNumber,\n  IsOptional,\n} from 'class-validator';\n\nexport class UpdateUserGroupDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  groupname: string;\n\n  @IsOptional()\n  @IsNumber()\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInfoDto.html":{"url":"classes/UpdateUserInfoDto.html","title":"class - UpdateUserInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateUserInfo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                updateby\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsEmail,\n  IsNumber,\n  IsOptional,\n  IsInt,\n} from 'class-validator';\n\nexport class UpdateUserInfoDto {\n  @IsNotEmpty()\n  @IsString()\n  updateby: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  @IsOptional()\n  @IsString()\n  password: string;\n\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @IsOptional()\n  @IsString()\n  lastname: string;\n\n  @IsOptional()\n  @IsEmail()\n  email: string;\n\n  @IsOptional()\n  @IsNotEmpty()\n  mobilephone: string;\n\n  // No obligatorios\n\n  @IsString()\n  @IsOptional()\n  department: string;\n\n  @IsString()\n  @IsOptional()\n  company: string;\n\n  @IsString()\n  @IsOptional()\n  workphone: string;\n\n  @IsString()\n  @IsOptional()\n  homephone: string;\n\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  @IsOptional()\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state: string;\n\n  @IsOptional()\n  @IsString()\n  country: string;\n\n  @IsOptional()\n  @IsNumber()\n  zip: string;\n\n  @IsOptional()\n  @IsString()\n  notes: string;\n\n  @IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n  @IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n  @IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                creationby\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsEmail,\n  IsNumber,\n  IsOptional,\n} from 'class-validator';\n\nexport class UserDto {\n  //Quien crea la tabla\n  @IsNotEmpty()\n  @IsString()\n  creationby: string;\n\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  @IsNotEmpty()\n  @IsString()\n  lastname: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  mobilephone: string;\n\n  \n  // No obligatorios\n\n\n  @IsString()\n  @IsOptional()\n  department: string;\n\n  @IsString()\n  @IsOptional()\n  company: string;\n\n  @IsString()\n  @IsOptional()\n  workphone: string;\n\n  @IsString()\n  @IsOptional()\n  homephone: string;\n\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  @IsOptional()\n  @IsString()\n  city: string;\n\n@IsOptional()\n  @IsString()\n  state: string;\n\n@IsOptional()\n  @IsString()\n  country: string;\n\n@IsOptional()\n  @IsNumber()\n  zip: string;\n\n@IsOptional()\n  @IsString()\n  notes: string;\n\n@IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n@IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n@IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n\n  //* RADCHECK *//\n\n  @IsNotEmpty()\n  @IsString()\n  attribute: string;\n\n  @IsNotEmpty()\n  @IsString()\n  op: string;\n\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n\n  //* RADUSERGROUP *//\n\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  priority: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserGroup.html":{"url":"classes/UserGroup.html","title":"class - UserGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/radusergroup/usergroup.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'radusergroup'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                groupname\n                            \n                            \n                                    \n                                priority\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'groupname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:17\n                        \n                    \n\n            \n                \n                    Asociado al plan de servicio contratado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'priority'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:25\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'username', primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:12\n                        \n                    \n\n            \n                \n                    Nombre del usuario asociado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'radusergroup'.\n */\n@Table({ tableName: 'radusergroup', timestamps: false })\nexport class UserGroup extends Model {\n  /**\n   * Nombre del usuario asociado.\n   */\n  @Column({ type: DataType.STRING(128), field: 'username', primaryKey: true })\n  username: string;\n  /**\n   * Asociado al plan de servicio contratado.\n   */\n  @Column({ type: DataType.STRING(200), field: 'groupname' })\n  groupname: string;\n  /**\n   * ????\n   */\n  @Column({\n    type: DataType.INTEGER,\n    field: 'priority',\n  })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/user/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'userinfo'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                creationby\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstname\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastname\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                updateby\n                            \n                            \n                                    \n                                updatedate\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'country'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:91\n                        \n                    \n\n            \n                \n                    Este parametro se coloca por defecto como Venezuela.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'creationby'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:145\n                        \n                    \n\n            \n                \n                    Se pide un valor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:37\n                        \n                    \n\n            \n                \n                    Correo electronico/\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:27\n                        \n                    \n\n            \n                \n                    Nombre legarl\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:17\n                        \n                    \n\n            \n                \n                    id en numeros enteros, autoincremental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:32\n                        \n                    \n\n            \n                \n                    Apellido\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'notes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:103\n                        \n                    \n\n            \n                \n                    String vacio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'updateby'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:161\n                        \n                    \n\n            \n                \n                    El valor es creado automaticamente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'updatedate', defaultValue: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:155\n                        \n                    \n\n            \n                \n                    El valor es creado automaticamente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:22\n                        \n                    \n\n            \n                \n                    Nombre de usuario.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'userinfo'.\n */\n@Table({ tableName: 'userinfo', timestamps: false })\nexport class UserInfo extends Model {\n  /**\n   * id en numeros enteros, autoincremental.\n   */\n  @Column({\n    type: DataType.INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n    field: 'id',\n  })\n  id: number;\n  /**\n   * Nombre de usuario.\n   */\n  @Column({ type: DataType.STRING(128), field: 'username' })\n  username: string;\n  /**\n   * Nombre legarl\n   */\n  @Column({ type: DataType.STRING(200), field: 'firstname' })\n  firstname: string;\n  /**\n   * Apellido\n   */\n  @Column({ type: DataType.STRING(200), field: 'lastname' })\n  lastname: string;\n  /**\n   * Correo electronico/\n   */\n  @Column({ type: DataType.STRING(200), field: 'email' })\n  email: string;\n  //* La matoria de lo siguientes aprametros son solocados como opcionales.\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'department' })\n  department: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'company' })\n  company: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'workphone' })\n  workphone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'homephone' })\n  homephone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'mobilephone' })\n  mobilephone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'address' })\n  address: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'city' })\n  city: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'state' })\n  state: string;\n  /**\n   * Este parametro se coloca por defecto como Venezuela.\n   */\n  @Column({ type: DataType.STRING(100), field: 'country' })\n  country: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'zip' })\n  zip: string;\n\n  /**\n   * String vacio.\n   */\n  @Column({ type: DataType.STRING(200), field: 'notes' })\n  notes: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(128), field: 'changeuserinfo' })\n  changeuserinfo: string;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.STRING(128),\n    field: 'portalloginpassword',\n    defaultValue: '',\n  })\n  portalloginpassword: string;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.INTEGER,\n    field: 'enableportallogin',\n    defaultValue: 0,\n  })\n  enableportallogin: number;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.DATE,\n    field: 'creationdate',\n    defaultValue: DataType.NOW,\n  })\n  creationdate: Date;\n\n  /**\n   * Se pide un valor.\n   */\n  @Column({ type: DataType.STRING(128), field: 'creationby' })\n  creationby: string;\n\n  /**\n   * El valor es creado automaticamente.\n   */\n  @Column({\n    type: DataType.DATE,\n    field: 'updatedate',\n    defaultValue: DataType.NOW,\n  })\n  updatedate: Date;\n\n  /**\n   * El valor es creado automaticamente.\n   */\n  @Column({ type: DataType.STRING(128), field: 'updateby' })\n  updateby: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/appGet.service.ts\n            \n            injectable\n            AppGetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/appPut.service.ts\n            \n            injectable\n            AppPutService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dto/updateRadCheck.dto.ts\n            \n            class\n            UpdateRadCheckDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dto/updateUerGroup.dto.ts\n            \n            class\n            UpdateUserGroupDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/updateUserInfo.dto.ts\n            \n            class\n            UpdateUserInfoDto\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sequeelize/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/radusergroup/usergroup.entity.ts\n            \n            class\n            UserGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/sequeelize/radusergroup/usergroup.providers.ts\n            \n            variable\n            userGroupProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/rasdusercheck/radcheck.entity.ts\n            \n            class\n            RadCheck\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/sequeelize/rasdusercheck/radusercheck.provider.ts\n            \n            variable\n            radcheckProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/user/user.entity.ts\n            \n            class\n            UserInfo\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/sequeelize/user/user.providers.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/helmet : ^10.1.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.4.2\n        \n            @prisma/client : ^4.15.0\n        \n            class-validator : ^0.14.0\n        \n            fastify-cors : ^6.1.0\n        \n            mariadb : ^3.1.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.32.0\n        \n            sequelize-typescript : ^2.1.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Inicia la aplicacion, el puerto puede ser modificado de acuerdo a las necesidades.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI para freeRadius de Netcom Plus\n\n\nCreado usado Nest.JS y sobre Fastify\n\n\n\n\n  \n\nDescripción\nDescripción General\nLa API funciona con Fastify para lograr una aplicación más ligera que la que se tendría con Express y mucho más rápida al momento de procesar las peticiones.\nComo el Framework de trabajo es Nest.Js , todo el código usa TypeScript, con una arquitectura de programación orientada a objetos (OOP) dónde el modelo básico es:\nUn controlador: Encargado de manera las peticiones que entran a la API.\nUn servicio: Que contiene las distintas lógicas que soportan las funciones de la API.\nUn modulo:  Que se encarga de comunicar los distintos componentes de la API. \n\n\nCarpetas y Arquitectura general\ngraph LR\nA[Main] --Main inicia la App --> B(AppModule) \nB --> C(AppController)\nB --> D(AppServices)\nD --> E(appGetService)\nD --> F(appPutService)\nD --> G(appPostService)\nB --> H(Sequelize)\nB --> I(dto)Aquí se puede ver la arquitectura general de la app.  Normalmente el modulo App sirve como ruta general de entrada y luego se divide en submódulos que alimentan a la app, pero dado que la aplicación tiene pocas funciones de momento, se deicidio dejarlo en un único modulo. \n\n Si la aplicación llega a crecer mucho se recomienda separarlo en módulos más pequeños.\n\nLa clase AppController es quién posee las rutas (endpoints) de la app y llama a los métodos contenidos en cada uno de los servicios. Normalmente habría un solo archivo de servicios pero para mayor facilidad se separo según el tipo de petición HTTP.\nLa carpeta dto contiene las clases DTO  (Data Transfer Object), que sirven de interfaz al momento de verificar que llega a través del Body y los tipos de datos, de las distintas requests, si no cumplen con el DTO la reques se rechaza.\n\nSi bien se puede usar una interfaz, como tal JavaScript no posee interfaces, estas al momento de la transpilación son desechadas, perdiendo una capa de seguridad, por eso la documentación de Nest recomienda el uso de clases.\n\nFinalmente la carpeta Sequelize contiene la conexión a la BD. La base de datos para la aplicación se encuentra desplegada en MariaDB pero la conexion hasta el momento se a trabajado con MySql.\n\n  \nFastify\nFastify es un framework web rápido y eficiente para Node.js. Está diseñado para ser altamente escalable y rendir al máximo, optimizando el tiempo de respuesta y el consumo de recursos. \nNo hay que preocuparse mucho por aprender a manejar este Framework, ya que por lo general la sintaxis es manejada a través de Nest.Js, sin embargo, algunos paquetes para construir la API deben ser específicos de Fastify, por lo que requerirán un manejo particular para poder funcionar, como CORS o Helmet. Consulte las documentación pertinente según el caso. \nInstalación\nObviamente requerimos Node.js, no se ha probado con Deno.js.\nDeno.js debiera poder soportar la App, dando una capa extra de seguridad y una mayor velocidad a la app.\n\n$  npm  install\nCorriendo la app\n\n# Desarrollo\n\n$  npm  run  start\n\n  \n\n# Modo watch \n#\tEste modo está constantemente escuchando los cambios \n#\tque se realizan en los archivos y reinicia la aplicación.\n\n$  npm  run  start:dev\n\n  \n\n# Modo de producción.\n\n$  npm  run  start:prod\nTest\n  Hasta el momento no se han escrito test para la aplicación. Nest viene con algunos test por default.\n\n# unit tests\n\n$  npm  run  test\n\n  \n\n# e2e tests\n\n$  npm  run  test:e2e\n\n  \n\n# test coverage\n\n$  npm  run  test:cov\nRutas\nPost\nPOST domain/\nValores mínimos requerido en el Body:\nJSON {\n\n\"username\":\"string\",\n\"password\": \"string\",\n\"firstname\":\"string\",\n\"lastname\":\"string\",\n\"email\":\"string (debe ser un formato válido)\",\n\"mobilephone\":\"string\",\n\"attribute\":\"string\",\n\"op\":\"string de max-length 2\" ,\n\"value\":\"araujo\",\n\"groupname\":\"grupo1\",\n\"priority\":number,\n\"createby\": \"string (del usuario que crea el objeto)\"\n\n}\nEste va a crear objetos en las tres tablas a usar por la API.\nSim embargo puede crear una respuesta aun mas completa, si no llena los campos completos la API lo hace por usted colocando valores por defecto y evitando dejar espacios vacios en la BD.\nJSON {\n// Campos obligatorio de UserInfo\ncreationby:  string;\nusername:  string;\npassword:  string;\nfirstname:  string;\nlastname:  string;\nemail:  string;\nmobilephone:  string;\n\n// No obligatorios\ndepartment:  string;\ncompany:  string;\nworkphone:  string;\nhomephone:  string;\naddress:  string;\ncity:  string;\nstate:  string;\ncountry:  string;\nzip:  string;\nnotes:  string;\nchangeuserinfo:  string,\nportalloginpassword:  string,\nenableportallogin:  number;\n\n//* RADCHECK *//\nattribute:  string;\nop:  string,\nvalue:  string;\n\n//* RADUSERGROUP *//\ngroupname:  string;\npriority:  number;\n\n}Put\nPUT domain/\n# Dejamos el Dto como referencia de lo que puede enviar en un PUT\n\nJSON {\n\nupdateby:  string, # campo requerido\nid:  number, \t   # campo requerido\n\n# el resto de los campo son opcionales,\n# envie los que necesite modificar.\n\nusername:  string,\npassword:  string,\nfirstname:  string,\nlastname:  string,\nemail:  string,\nmobilephone:  string,\ndepartment:  string,\ncompany:  string,\nworkphone:  string,\nhomephone:  string,\naddress:  string,\ncity:  string,\nstate:  string,\ncountry:  string,\nzip:  string,\nnotes:  string,\nchangeuserinfo: string,\nportalloginpassword:string,\nenableportallogin:  number\n\n}\nStay in touch\n\nAuthor - Kamil Myśliwiec\n\nWebsite - https://nestjs.com\n\nTwitter - @nestframework\n\n\nLicense\nNest is [MIT licensed](LICENS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nAppGetService\n\nAppGetService\n\nAppModule -->\n\nAppGetService->AppModule\n\n\n\n\n\nAppPutService\n\nAppPutService\n\nAppModule -->\n\nAppPutService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            radcheckProvider   (src/.../radusercheck.provider.ts)\n                        \n                        \n                            userGroupProviders   (src/.../usergroup.providers.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/sequeelize/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async () => {\n      const sequelize = new Sequelize({\n        dialect: 'mariadb',\n        // host: '10.2.73.20',\n        host: 'localhost',\n        port: 3306,\n        // username: 'fran',\n        username: 'root',\n        password: '7448280',\n        // database: 'radius ',\n        database: 'nest',\n\n      });\n      sequelize.addModels([UserInfo, UserGroup, RadCheck]);\n      await sequelize.sync();\n      return sequelize;\n    },\n  },\n]\n                    \n                \n\n            \n                \n                    Conexion a la BD.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/rasdusercheck/radusercheck.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        radcheckProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'RADCHECK_REPOSITORY',\n    useValue: RadCheck,\n  },\n]\n                    \n                \n\n            \n                \n                    Se exporta el modelo para que sea accesible.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/radusergroup/usergroup.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userGroupProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USERGROUP_REPOSITORY',\n    useValue:UserGroup,\n  },\n]\n                    \n                \n\n            \n                \n                    Se exporta el modelo para que sea accesible.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/user/user.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USER_REPOSITORY',\n    useValue:UserInfo,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
