var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.784,1,1.575]],["body/controllers/AppController.html",[0,1.821,1,1.06,2,0.958,3,0.567,4,0.173,5,0.148,6,0.958,7,0.173,8,0.744,9,2.446,10,1.06,11,2.955,12,1.43,13,2.457,14,1.24,15,1.969,16,1.986,17,1.969,18,1.585,19,1.969,20,1.376,21,1.612,22,1.309,23,1.969,24,1.612,25,0.843,26,1.969,27,0.921,28,1.181,29,3.028,30,2.988,31,2.955,32,1.146,33,1.2,34,2.715,35,1.969,36,1.06,37,1.969,38,2.028,39,1.969,40,2.441,41,1.63,42,1.969,43,2.78,44,1.376,45,1.969,46,0.199,47,1.2,48,1.969,49,1.969,50,1.612,51,1.612,52,1.612,53,1.612,54,1.969,55,1.372,56,1.969,57,1.612,58,1.612,59,1.612,60,1.612,61,1.612,62,1.171,63,2.837,64,1.601,65,0.044,66,1.969,67,1.02,68,1.171,69,3.494,70,2.523,71,2.78,72,0.716,73,1.168,74,1.285,75,1.679,76,2.523,77,2.955,78,2.955,79,1.854,80,1.054,81,2.505,82,2.505,83,0.791,84,2.505,85,3.047,86,3.239,87,2.201,88,3.751,89,1.171,90,1.557,91,1.969,92,1.171,93,3.611,94,3.611,95,2.169,96,1.113,97,2.955,98,2.955,99,1.955,100,1.729,101,3.996,102,1.638,103,3.611,104,0.958,105,1.969,106,1.171,107,2.523,108,1.725,109,2.955,110,3.611,111,2.955,112,2.955,113,3.611,114,3.611,115,2.201,116,3.611,117,3.611,118,2.332,119,2.169,120,3.611,121,3.299,122,2.169,123,3.299,124,2.523,125,2.955,126,3.611,127,2.955,128,2.93,129,0.958,130,1.969,131,1.171,132,0.958,133,1.969,134,1.171,135,1.969,136,1.384,137,0.958,138,0.703,139,1.969,140,1.171,141,2.446,142,3.839,143,1.969,144,1.969,145,1.969,146,2.446,147,2.446,148,2.088,149,1.969,150,1.608,151,1.969,152,0.607,153,1.171,154,1.969,155,1.171,156,1.969,157,1.171,158,1.608,159,1.171,160,1.729,161,1.781,162,2.641,163,1.969,164,2.086,165,1.426,166,1.06,167,1.969,168,2.523,169,2.523,170,1.06,171,1.2,172,1.376,173,1.376,174,2.075,175,1.2,176,1.612,177,2.446,178,1.612,179,2.088,180,1.612,181,1.612,182,1.612,183,2.332,184,1.376,185,1.376,186,1.612,187,1.612,188,1.612,189,1.376,190,0.943,191,1.376,192,1.376,193,1.612,194,1.612,195,1.553,196,0.714,197,0.958,198,1.969,199,1.171,200,0.958,201,1.794,202,1.969,203,1.171,204,1.969,205,1.2,206,1.969,207,1.2,208,2.446,209,1.943,210,3.733,211,2.955,212,2.817,213,1.729,214,2.955,215,0.958,216,1.794,217,1.969,218,1.171,219,1.969,220,1.969,221,1.969,222,1.2,223,2.523,224,1.376,225,1.969,226,0.958,227,1.794,228,1.171,229,0.755,230,1.969,231,1.612,232,1.969,233,1.279,234,1.969,235,0.958,236,1.969,237,1.171,238,1.612,239,0.843,240,0.619,241,0.958,242,2.269,243,2.988,244,0.403,245,1.22,246,0.958,247,1.22,248,0.958,249,1.22,250,0.958,251,0.958,252,0.958,253,0.958,254,0.958,255,1.171,256,0.173,257,0.023,258,0.63,259,1.553,260,2.549,261,1.171,262,2.837,263,1.171,264,1.171,265,1.171,266,1.171,267,1.171,268,1.171,269,1.171,270,1.612,271,1.171,272,1.171,273,1.171,274,1.171,275,1.171,276,1.171,277,1.171,278,1.171,279,0.361,280,1.171,281,1.171,282,1.171,283,1.171,284,1.171,285,1.171,286,1.171,287,1.171,288,0.958,289,1.171,290,1.171,291,1.171,292,1.171,293,0.014,294,0.014]],["title/injectables/AppGetService.html",[247,1.401,295,1.006]],["body/injectables/AppGetService.html",[3,0.434,4,0.284,5,0.244,7,0.526,8,0.738,10,1.917,12,1.399,14,1.199,16,1.859,18,1.495,21,2.404,22,1.366,27,0.906,28,1.062,29,2.784,32,1.645,33,1.791,38,1.935,41,1.617,46,0.327,47,1.791,50,2.404,51,2.404,52,2.404,53,2.404,55,3.027,57,2.404,61,2.404,65,0.044,67,1.11,69,2.489,70,2.489,71,3.224,72,0.653,73,1.159,74,1.298,75,1.555,76,2.489,77,2.915,78,2.915,79,1.836,80,1.062,81,2.727,82,2.727,83,0.844,84,2.727,85,3.185,86,3.224,87,3.028,88,4.028,90,1.589,95,2.309,96,1.394,97,2.404,99,1.943,100,1.908,102,1.098,104,1.576,111,3.261,112,3.511,118,2.144,122,1.581,124,2.784,125,3.261,128,3.16,129,1.576,132,1.576,136,1.734,137,1.576,138,0.983,150,2.144,152,0.594,160,1.407,165,1.705,172,1.346,174,0.922,196,3.028,197,2.404,213,1.407,223,2.053,224,2.053,233,1.257,235,2.404,238,1.576,239,1.257,240,0.634,242,1.908,244,0.662,247,1.407,256,0.284,257,0.038,258,1.581,259,2.171,279,0.906,293,0.021,294,0.021,295,1.01,296,1.036,297,1.576,298,1.126,299,2.938,300,2.053,301,2.938,302,3.511,303,1.298,304,2.404,305,2.404,306,2.053,307,2.144,308,2.404,309,2.404,310,2.404,311,2.938,312,2.404,313,3.984,314,2.938,315,2.938,316,2.938,317,2.404,318,2.404,319,2.404,320,2.784,321,2.938,322,2.938,323,2.053,324,2.938,325,2.938,326,2.938,327,2.938,328,2.938,329,1.346,330,3.16,331,2.784,332,1.926,333,2.053,334,2.053,335,1.791,336,2.053,337,2.053,338,2.053,339,1.791,340,2.053,341,2.053,342,2.053,343,1.257,344,2.053,345,2.489,346,1.926,347,3.984,348,3.561,349,1.926,350,3.561,351,3.561,352,1.926,353,1.926,354,1.926,355,1.926,356,2.938,357,1.926,358,2.938,359,1.926,360,4.521,361,1.926,362,1.926,363,1.346,364,1.346,365,1.346,366,1.346,367,0.922,368,1.346,369,2.489,370,1.346,371,1.346,372,1.926,373,2.784,374,2.428,375,3.984,376,2.428,377,2.938,378,1.926,379,1.926,380,1.926,381,1.926,382,3.984,383,4.968,384,0.922,385,1.926,386,1.926]],["title/modules/AppModule.html",[387,1.252,388,1.784]],["body/modules/AppModule.html",[1,2.688,2,3.727,3,0.532,4,0.532,5,0.457,7,0.532,8,0.577,14,0.997,16,1.746,20,3.183,32,1.746,65,0.044,72,0.577,240,0.858,244,1.239,245,2.647,246,2.948,247,2.647,248,2.948,249,2.647,250,2.948,256,0.532,257,0.071,293,0.033,294,0.033,300,3.183,387,2.137,388,3.589,389,1.725,390,1.939,391,2.518,392,2.518,393,1.939,394,3.044,395,2.196,396,2.948,397,2.948,398,2.948,399,2.975,400,2.975,401,3.183,402,2.518,403,2.518,404,3.603,405,3.183,406,4.554,407,3.727,408,4.554,409,4.554,410,4.554,411,4.554,412,4.554,413,3.603,414,3.603,415,3.603,416,2.518,417,3.603,418,3.183,419,3.603,420,3.183,421,3.603,422,3.183,423,3.603,424,3.603,425,3.603,426,2.196]],["title/injectables/AppPutService.html",[249,1.401,295,1.006]],["body/injectables/AppPutService.html",[3,0.333,4,0.333,5,0.286,7,0.333,8,0.739,12,1.402,14,1.222,16,1.838,18,1.019,22,1.356,25,2.051,28,1.205,32,1.267,33,2.014,34,2.014,38,1.414,40,2.523,44,1.575,46,0.383,47,2.014,55,2.79,58,3.526,59,3.526,60,3.754,65,0.044,67,0.944,72,0.698,73,1.252,74,1.323,80,1.005,81,2.318,82,2.318,83,0.665,84,2.318,85,3.212,86,2.922,95,1.778,96,1.328,99,2.02,100,2.063,102,1.328,107,1.575,124,3.011,136,1.267,150,2.58,160,1.582,161,2.309,165,2.051,168,3.35,183,2.469,196,2.384,200,2.704,201,2.469,209,2.666,210,4.158,211,3.526,212,3.011,213,2.196,214,3.526,215,2.704,216,2.469,226,1.844,227,2.469,229,1.267,240,0.732,242,2.295,244,0.775,249,1.582,252,1.844,253,1.844,254,1.844,256,0.333,257,0.044,258,1.778,259,2.384,262,2.384,279,1.019,293,0.024,294,0.024,295,1.136,296,1.213,300,2.309,303,1.189,329,1.575,330,3.35,331,3.011,333,2.309,334,2.309,335,2.014,336,2.309,337,2.309,338,2.309,339,2.014,340,2.309,341,2.309,342,2.309,343,1.414,344,2.309,345,2.734,363,1.575,364,1.575,365,1.575,366,1.575,368,1.575,369,2.734,370,1.575,371,1.575,373,2.734,374,2.922,376,2.384,427,1.844,428,2.309,429,2.704,430,2.704,431,3.304,432,2.253,433,2.253,434,3.35,435,3.462,436,4.794,437,4.794,438,4.794,439,3.923,440,3.923,441,2.253,442,3.304,443,2.253,444,3.912,445,2.253,446,2.704,447,3.304,448,3.304,449,3.201,450,3.912,451,3.912,452,2.384,453,3.912,454,2.253,455,2.253,456,1.844,457,2.253,458,2.253]],["title/injectables/AppService.html",[245,1.401,295,1.006]],["body/injectables/AppService.html",[3,0.579,4,0.334,5,0.287,7,0.334,8,0.686,10,2.324,12,0.915,13,2.021,14,1.196,16,1.841,18,1.627,22,1.346,27,1.21,28,1.155,32,1.841,33,2.391,34,2.021,38,1.848,40,2.299,41,1.349,43,2.021,46,0.385,47,2.021,55,2.111,65,0.044,67,0.726,71,1.38,72,0.583,73,1.064,74,1.493,75,1.485,79,1.419,80,0.859,81,1.785,82,1.785,83,0.385,84,1.785,86,2.021,96,1.649,100,2.068,102,1.569,118,1.785,121,2.714,136,1.841,158,2.474,160,2.068,162,2.927,165,2.177,166,2.324,168,3.018,169,3.018,170,1.785,171,2.021,172,2.317,173,2.317,174,2.299,175,2.021,176,2.714,177,2.714,178,2.714,179,3.018,180,2.714,181,2.714,182,2.714,183,1.785,184,2.317,185,2.317,186,2.714,187,2.714,188,2.714,189,2.317,190,1.588,191,2.317,192,2.317,193,2.714,194,2.714,195,2.021,196,1.38,209,1.219,213,1.588,229,1.272,233,0.969,239,0.969,240,0.679,242,2.068,244,0.779,245,1.588,251,1.854,256,0.334,257,0.044,258,1.785,259,2.391,262,2.802,279,1.481,293,0.024,294,0.024,295,1.14,296,1.219,298,1.656,303,1.192,329,1.583,330,3.356,331,3.018,333,2.317,334,2.317,335,2.021,336,2.317,337,2.317,338,2.317,339,2.021,340,2.317,341,2.317,342,2.317,343,1.419,344,2.317,345,2.742,363,1.583,364,1.583,365,1.583,366,1.583,367,1.588,368,1.583,369,2.742,370,1.583,371,1.583,373,1.583,374,2.632,376,2.391,384,1.084,435,1.583,449,1.854,452,1.38,459,1.854,460,2.714,461,3.316,462,2.317,463,2.317,464,2.714,465,3.316,466,2.714,467,3.316,468,2.714,469,3.316,470,2.265,471,3.316,472,2.265,473,3.316,474,3.316,475,1.38,476,2.265,477,1.854,478,2.265,479,2.265,480,2.265,481,2.265,482,3.534,483,2.265,484,3.923,485,2.265,486,2.265,487,2.265,488,1.785,489,3.316,490,1.785,491,3.316,492,3.923,493,1.219,494,3.316,495,2.265,496,1.219,497,3.316,498,2.265,499,1.219,500,2.265,501,1.785,502,3.316,503,1.785,504,3.316,505,1.785,506,3.316,507,1.219,508,3.316,509,1.38,510,1.219,511,3.316,512,2.265,513,1.219,514,3.316,515,1.219,516,3.316,517,1.219,518,3.316,519,1.219,520,3.316,521,1.854,522,1.854,523,1.38,524,2.265,525,1.38,526,3.923,527,0.779,528,2.265,529,1.219,530,2.265,531,3.316,532,2.714,533,1.854,534,2.265,535,1.084,536,2.265,537,2.265,538,2.265,539,1.219,540,2.265,541,1.219,542,3.316,543,2.265,544,3.316]],["title/modules/DatabaseModule.html",[387,1.252,399,1.575]],["body/modules/DatabaseModule.html",[3,0.623,4,0.623,5,0.535,7,0.623,8,0.703,22,1.236,25,2.147,28,1.099,65,0.043,72,0.703,108,2.147,119,2.7,152,1.547,229,1.924,240,0.741,244,1.451,256,0.623,257,0.083,293,0.036,294,0.036,387,2.147,389,2.02,394,2.571,395,2.571,399,2.7,405,3.506,545,4.219,546,5.017,547,3.506,548,5.017,549,4.219,550,4.219,551,4.219,552,3.743,553,4.219]],["title/modules/PrismaModule.html",[387,1.252,400,1.575]],["body/modules/PrismaModule.html",[3,0.629,4,0.629,5,0.54,65,0.043,240,0.745,244,1.465,256,0.629,257,0.083,293,0.036,294,0.036,387,2.301,389,2.039,390,2.292,391,2.976,392,2.976,393,2.292,394,3.277,395,3.277,400,3.128,401,3.526,402,2.976,403,2.976,554,3.486,555,3.486,556,3.486,557,3.21,558,4.259,559,5.046,560,4.259]],["title/injectables/PrismaService.html",[295,1.006,557,1.575]],["body/injectables/PrismaService.html",[3,0.548,4,0.548,5,0.471,7,0.548,8,0.736,10,2.498,13,2.829,14,1.162,27,1.431,28,1.162,32,1.78,65,0.043,67,0.813,72,0.724,75,1.596,76,3.244,81,1.998,82,1.998,83,0.631,84,1.998,100,2.222,102,1.431,115,2.829,148,3.244,152,1.431,166,2.498,222,2.829,229,1.78,240,0.748,242,1.778,244,1.277,256,0.548,257,0.073,258,1.998,293,0.033,294,0.033,295,1.596,296,1.998,298,1.78,312,3.799,335,2.829,416,2.595,547,3.244,557,2.498,561,3.039,562,4.642,563,3.244,564,4.642,565,2.829,566,4.642,567,4.642,568,4.642,569,4.642,570,2.829,571,5.064,572,4.642,573,5.461,574,3.713,575,3.244,576,5.064,577,4.642,578,3.039,579,3.713,580,3.713,581,3.713,582,3.713]],["title/classes/RadCheck.html",[74,0.808,257,0.057]],["body/classes/RadCheck.html",[3,0.515,4,0.515,5,0.442,7,0.515,8,0.565,18,1.375,46,0.592,64,1.843,65,0.044,67,1.173,72,0.565,73,1.099,74,1.479,80,1.077,83,0.976,90,1.375,99,2.054,108,1.908,138,1.557,152,1.075,240,0.515,256,0.515,257,0.068,293,0.032,294,0.032,303,1.231,367,2.354,426,3.16,527,1.534,529,2.646,535,2.354,570,2.718,583,1.198,584,2.852,585,2.4,586,3.436,587,1.375,588,3.744,589,3.744,590,5.642,591,3.982,592,3.485,593,3.116,594,3.649,595,3.485,596,2.718,597,2.718,598,3.649,599,3.649,600,3.485,601,3.485,602,2.4,603,3.485,604,2.718,605,3.83,606,2.435,607,1.875,608,2.435,609,2.435,610,2.435,611,4.459,612,3.485,613,3.485]],["title/classes/SearchDto.html",[63,1.784,257,0.057]],["body/classes/SearchDto.html",[3,0.588,4,0.588,5,0.504,7,0.588,8,0.734,12,1.5,14,1.061,16,1.857,28,1.19,38,2.073,41,1.666,46,0.676,63,2.953,64,1.369,65,0.043,67,0.872,83,0.676,85,3.313,87,3.453,95,2.607,98,3.965,102,1.676,127,3.965,138,1.583,165,2.073,195,2.953,231,3.257,240,0.588,256,0.588,257,0.095,293,0.035,294,0.035,298,1.857,320,3.385,323,3.385,583,1.369,587,1.494,614,3.257,615,4.844,616,4.844,617,5.222,618,3.979,619,1.905]],["title/classes/UpdateRadCheckDto.html",[201,1.575,257,0.057]],["body/classes/UpdateRadCheckDto.html",[3,0.496,4,0.496,5,0.426,7,0.496,8,0.71,12,1.498,14,0.953,18,1.342,22,1.305,27,1.342,28,1.058,41,1.497,46,0.57,64,1.821,65,0.043,67,1.16,72,0.671,73,1.073,74,1.202,75,1.758,79,1.863,80,1.058,83,0.9,90,1.342,99,2.118,102,1.342,138,1.545,170,2.343,174,2.084,201,2.343,207,2.653,229,1.669,240,0.496,256,0.496,257,0.085,270,2.748,293,0.031,294,0.031,303,1.202,317,2.748,343,1.863,367,2.313,435,3.042,475,2.945,527,1.497,529,2.6,532,3.563,533,2.748,535,2.313,583,1.155,587,1.342,596,2.653,597,2.653,602,2.343,619,1.608,620,2.748,621,2.653,622,4.353,623,4.353,624,4.353,625,3.563,626,3.042,627,3.116,628,3.358,629,4.353,630,4.353,631,2.748,632,3.358,633,3.358,634,3.563,635,4.353,636,4.353,637,3.563,638,3.358,639,3.358,640,3.563,641,2.653,642,3.228,643,3.228,644,3.563,645,3.954,646,3.358,647,3.358]],["title/classes/UpdateUserGroupDto.html",[216,1.575,257,0.057]],["body/classes/UpdateUserGroupDto.html",[3,0.574,4,0.574,5,0.493,7,0.574,8,0.714,12,1.318,27,1.737,28,1.046,36,2.57,46,0.66,64,1.778,65,0.043,67,1.132,72,0.605,73,1.176,80,1.132,83,0.878,90,1.472,136,1.831,138,1.488,216,2.57,240,0.574,256,0.574,257,0.093,293,0.034,294,0.034,303,1.318,343,2.043,527,1.854,539,2.782,541,2.782,583,1.337,587,1.472,602,2.901,619,1.861,627,2.369,641,2.91,642,3.15,643,3.15,648,3.181,649,4.775,650,3.886,651,3.908,652,2.716,653,3.886,654,3.908,655,2.716,656,3.886,657,3.337]],["title/classes/UpdateUserInfoDto.html",[227,1.575,257,0.057]],["body/classes/UpdateUserInfoDto.html",[3,0.302,4,0.302,5,0.259,7,0.302,8,0.735,12,1.325,14,1.184,18,1.523,22,1.353,25,1.315,27,1.523,28,0.964,38,1.315,40,1.967,41,1.591,43,1.873,46,0.347,64,1.941,65,0.044,67,1.236,72,0.696,73,0.757,75,1.413,79,2.266,80,0.809,83,0.959,90,1.266,96,0.948,99,1.84,102,1.358,108,2.113,119,1.654,122,1.654,138,1.622,166,1.654,190,1.471,207,2.503,227,1.654,229,1.178,233,1.58,239,1.58,240,0.302,256,0.302,257,0.06,293,0.022,294,0.022,298,1.774,303,1.277,307,1.654,343,1.758,384,1.768,434,2.148,462,1.428,475,1.246,488,1.988,490,1.988,493,1.988,496,1.988,499,1.988,501,1.988,503,1.988,505,1.988,507,1.988,509,2.503,510,1.988,513,1.988,515,1.988,517,1.988,519,1.988,525,2.684,527,1.77,563,2.148,583,0.703,587,0.948,596,1.873,597,1.873,619,0.979,621,2.503,626,2.148,627,3.185,631,1.673,641,2.503,642,3.37,643,3.425,644,2.515,652,2.148,655,1.428,657,2.581,658,1.673,659,3.073,660,3.073,661,3.073,662,2.251,663,2.044,664,3.361,665,2.044,666,3.786,667,4.626,668,2.044,669,2.515,670,3.361,671,4.626,672,3.361,673,2.044,674,2.515,675,2.515,676,2.044,677,2.515,678,3.073,679,3.073,680,2.148,681,2.044,682,3.073,683,2.044,684,2.044,685,2.148,686,2.515,687,2.515,688,2.87,689,2.515,690,2.515,691,2.044,692,2.044,693,2.515,694,3.361,695,2.044,696,3.361,697,3.073,698,2.044,699,2.044,700,3.073,701,2.044,702,2.044,703,2.148,704,2.515,705,3.073,706,3.073,707,3.073,708,3.073,709,2.515,710,3.073,711,3.073,712,3.073,713,2.044,714,2.515,715,3.073,716,2.515,717,2.148,718,2.044,719,2.515,720,2.044,721,2.044,722,2.515,723,2.044,724,2.515,725,3.073,726,2.044,727,3.073,728,3.073,729,2.044,730,2.148,731,2.044,732,2.148,733,2.515,734,2.515,735,2.044,736,2.044,737,2.044,738,2.044,739,1.428]],["title/classes/UserDto.html",[158,1.575,257,0.057]],["body/classes/UserDto.html",[3,0.282,4,0.282,5,0.242,7,0.282,8,0.743,12,1.094,14,1.058,18,1.49,22,1.337,25,1.248,27,0.899,28,0.868,32,1.118,36,1.569,40,1.396,41,1.662,46,0.324,64,1.953,65,0.044,67,1.244,72,0.641,73,0.977,74,1.179,75,1.662,79,2.283,80,0.775,83,0.965,90,1.222,96,1.222,102,1.558,108,2.163,119,1.569,122,1.569,136,1.357,138,1.629,158,1.569,160,1.396,165,1.248,170,1.569,171,1.777,174,2.156,175,1.777,183,1.569,190,1.396,205,1.777,212,2.037,222,1.777,233,1.515,239,1.515,240,0.282,256,0.282,257,0.057,279,0.899,288,3.244,293,0.021,294,0.021,298,1.727,303,1.094,304,2.386,307,1.569,367,1.695,384,1.695,428,2.037,463,2.037,464,2.386,488,1.905,490,1.905,493,1.905,496,1.905,499,1.905,501,1.905,503,1.905,505,1.905,507,1.905,509,1.777,510,1.905,513,1.905,515,1.905,517,1.905,519,1.905,523,2.157,527,1.793,529,1.905,535,1.695,539,1.905,541,1.905,583,0.656,587,0.899,619,0.913,621,1.777,627,2.856,640,3.244,641,3.217,642,3.423,643,3.251,652,2.037,654,2.386,655,3.461,657,2.77,662,2.157,664,2.386,666,3.686,669,2.386,672,3.244,674,2.386,675,2.386,677,2.386,680,2.037,685,2.037,686,2.386,687,2.386,688,2.037,690,2.386,693,3.244,694,2.386,696,3.244,703,2.037,704,2.386,714,2.386,716,2.386,717,2.037,719,2.386,722,2.386,724,2.386,730,2.037,732,2.037,733,2.386,734,2.386,739,1.332,740,1.56,741,2.915,742,2.915,743,2.915,744,2.915,745,2.386,746,2.915,747,2.915,748,2.915,749,2.915,750,2.386,751,2.915,752,1.907,753,4.833,754,1.907,755,1.907,756,4.503,757,1.907,758,1.907,759,1.907,760,1.907,761,2.386,762,1.907,763,2.915,764,1.907,765,1.907,766,2.915,767,1.907,768,1.907,769,3.955,770,1.907,771,2.915,772,1.907,773,2.915,774,1.907,775,2.386,776,1.907,777,1.907,778,1.907,779,2.915,780,2.386,781,1.907,782,2.915,783,2.915,784,1.907,785,1.907,786,1.907,787,1.907,788,1.907,789,1.907,790,1.907,791,1.907,792,1.907]],["title/classes/UserGroup.html",[257,0.057,279,0.902]],["body/classes/UserGroup.html",[3,0.554,4,0.554,5,0.475,7,0.554,8,0.675,27,1.44,36,2.513,46,0.637,64,1.749,65,0.044,67,1.114,72,0.592,73,1.151,80,1.2,83,0.949,90,1.44,108,1.999,136,1.95,138,1.469,152,1.156,240,0.554,256,0.554,257,0.073,279,1.44,293,0.034,294,0.034,303,1.289,426,2.846,527,1.606,539,2.947,541,2.947,570,2.846,583,1.29,585,2.513,586,3.554,587,1.44,588,3.554,589,3.554,591,2.62,593,3.264,602,2.865,604,2.846,605,3.72,606,2.62,607,2.018,608,2.62,609,2.62,610,2.62,793,3.069,794,4.57,795,3.75,796,3.822,797,4.67,798,3.75,799,3.75,800,3.069,801,3.069]],["title/classes/UserInfo.html",[96,0.902,257,0.057]],["body/classes/UserInfo.html",[3,0.354,4,0.354,5,0.304,7,0.354,8,0.596,12,0.954,14,0.971,18,1.066,22,1.093,25,1.898,46,0.407,64,1.838,65,0.044,67,1.17,72,0.514,73,0.851,75,1.189,80,1.03,83,1.004,90,1.25,96,1.45,99,1.936,118,2.181,138,1.62,150,1.29,152,0.739,162,1.461,184,2.415,190,1.655,205,1.461,213,1.148,233,2.012,239,2.012,240,0.354,256,0.354,257,0.047,293,0.025,294,0.025,298,1.325,303,1.224,384,2.251,426,2.703,482,3.317,488,1.86,490,1.86,493,1.86,496,1.86,499,1.86,501,1.86,503,1.86,505,1.86,507,2.53,509,2.106,510,1.86,513,2.53,515,1.86,517,1.86,519,1.86,521,2.828,522,3.848,523,2.866,525,2.866,527,1.189,570,2.106,583,0.824,585,1.86,586,2.832,587,1.066,588,3.735,589,3.782,591,1.675,593,2.415,594,2.828,596,2.106,597,2.106,598,2.828,599,3.848,604,2.106,605,4.058,606,1.675,607,1.29,608,1.675,609,1.675,610,2.415,680,2.415,685,2.415,775,2.828,794,4.834,800,3.848,801,4.516,802,1.962,803,2.397,804,3.456,805,2.397,806,3.456,807,4.009,808,2.397,809,3.456,810,2.397,811,3.456,812,2.397,813,2.397,814,2.397,815,2.397,816,3.63,817,4.435,818,2.397,819,2.397,820,2.397,821,2.397,822,2.397,823,2.397,824,5.518,825,2.397,826,3.456,827,3.456]],["title/coverage.html",[828,2.777]],["body/coverage.html",[0,2.379,1,2.101,5,0.495,6,3.195,63,2.379,65,0.043,74,1.077,83,0.663,96,1.204,158,2.101,201,2.101,216,2.101,227,2.101,245,1.869,247,1.869,249,1.869,257,0.113,279,1.204,293,0.034,294,0.034,295,1.857,297,3.195,393,2.101,418,2.728,420,2.728,422,2.728,427,3.195,452,2.379,459,3.195,552,2.728,557,2.101,561,3.195,584,3.195,604,2.379,614,3.195,620,3.195,648,3.195,658,3.195,740,3.195,793,3.195,802,3.195,828,2.728,829,3.903,830,3.903,831,3.903,832,5.994,833,3.903,834,3.903,835,4.788,836,3.903,837,4.788,838,4.788,839,4.788,840,3.903,841,3.903,842,3.195,843,3.903,844,5.541,845,3.195,846,5.399,847,3.195,848,3.195,849,3.195,850,3.903]],["title/dependencies.html",[390,1.891,851,2.008]],["body/dependencies.html",[65,0.043,152,1.566,244,1.481,257,0.099,293,0.036,294,0.036,390,2.318,416,3.01,565,2.625,578,3.525,607,2.318,619,2.062,852,4.307,853,4.307,854,5.402,855,4.307,856,4.307,857,5.08,858,3.525,859,4.157,860,4.307,861,4.307,862,4.307,863,4.307,864,4.307,865,3.525,866,4.307,867,4.307,868,4.307,869,4.307,870,4.307,871,4.307,872,4.307,873,4.307,874,4.307]],["title/miscellaneous/functions.html",[875,1.495,876,2.876]],["body/miscellaneous/functions.html",[8,0.577,16,1.745,22,1.121,46,0.773,65,0.038,72,0.577,293,0.038,294,0.038,306,3.18,307,2.449,393,2.974,407,3.724,842,3.724,875,2.773,876,3.724,877,4.55,878,3.724,879,4.55,880,4.55,881,4.55,882,4.55]],["title/index.html",[46,0.417,883,2.454,884,2.454]],["body/index.html",[1,0.659,8,0.749,9,3.023,10,1.1,11,1.002,12,1.492,13,2.083,14,1.211,16,1.84,18,1.642,20,1.839,22,1.371,24,1.002,25,1.58,27,0.378,28,1.106,29,1.429,31,1.673,32,2.082,34,1.873,36,2.109,38,2.183,40,1.636,41,1.851,43,2.389,44,1.429,65,0.043,69,1.839,70,1.839,71,1.873,72,0.739,73,1.012,74,1.019,75,1.77,79,1.462,80,0.809,87,1.604,88,0.856,90,1.208,95,2.109,96,1.358,99,1.575,100,0.586,101,3.207,102,1.6,107,0.856,108,1.758,109,2.154,115,2.083,118,1.988,119,2.434,122,2.49,123,3.023,128,1.839,136,1.31,138,1.6,141,1.673,146,1.002,147,1.002,148,2.388,150,1.839,152,0.63,160,2.364,161,2.982,162,1.604,164,1.002,165,0.524,166,2.21,169,1.429,170,1.416,171,1.246,173,0.856,174,0.979,175,0.746,179,2.148,183,2.49,185,1.429,189,0.856,190,0.586,191,0.856,192,0.856,195,1.604,205,0.746,207,1.604,208,2.154,209,1.654,213,1.472,222,2.251,223,1.429,224,1.429,229,0.784,233,1.126,239,1.126,241,1.673,242,1.768,279,0.378,293,0.015,294,0.015,298,0.784,302,3.023,303,0.943,305,2.797,306,2.148,307,2.21,308,1.002,309,1.673,310,2.154,318,1.002,319,1.002,320,0.856,323,2.148,339,0.746,343,0.524,367,1.26,384,1.26,405,1.839,428,0.856,429,1.002,430,2.797,434,0.856,439,1.002,440,1.002,446,1.673,456,1.673,460,1.002,462,0.856,463,1.429,466,1.002,468,1.002,475,0.746,477,1.673,488,1.1,490,1.1,493,1.1,496,1.1,499,1.416,501,1.1,503,1.1,505,1.1,507,1.1,510,1.1,513,1.1,515,1.1,517,1.1,519,1.1,523,0.746,525,1.246,527,0.905,529,1.416,535,1.26,539,1.416,541,1.416,547,0.856,563,1.839,565,0.746,575,0.856,585,0.659,602,0.659,607,0.659,621,1.246,625,2.797,626,2.388,634,2.154,637,1.002,645,1.002,651,1.673,662,1.604,670,2.515,688,0.856,689,1.002,703,2.581,709,1.673,717,1.429,730,0.856,732,0.856,739,0.856,745,1.002,750,1.673,761,1.673,769,1.002,780,1.002,796,1.002,807,1.002,816,1.673,828,0.856,858,1.002,859,2.797,865,1.002,878,1.002,885,1.224,886,1.224,887,1.224,888,3.073,889,2.632,890,2.044,891,1.224,892,1.224,893,4.872,894,1.224,895,1.224,896,2.632,897,1.224,898,1.224,899,2.632,900,1.224,901,1.224,902,1.224,903,1.224,904,1.224,905,1.224,906,1.224,907,2.044,908,1.224,909,1.224,910,1.224,911,1.224,912,1.224,913,1.224,914,1.002,915,1.224,916,1.224,917,1.224,918,4.267,919,1.224,920,3.073,921,1.224,922,1.224,923,2.632,924,1.224,925,1.224,926,1.224,927,1.224,928,1.224,929,2.044,930,1.224,931,1.224,932,1.224,933,1.224,934,1.224,935,1.224,936,1.224,937,1.224,938,1.224,939,3.073,940,2.044,941,1.224,942,2.044,943,1.224,944,1.224,945,1.224,946,1.224,947,1.224,948,1.224,949,1.224,950,2.044,951,1.224,952,1.224,953,1.224,954,2.044,955,1.224,956,1.224,957,2.044,958,1.224,959,2.044,960,2.044,961,1.224,962,1.224,963,1.224,964,2.044,965,1.224,966,1.224,967,1.224,968,1.224,969,1.224,970,1.224,971,1.224,972,1.224,973,1.224,974,1.224,975,1.224,976,1.224,977,2.044,978,2.044,979,1.224,980,2.044,981,1.673,982,1.224,983,1.224,984,2.044,985,1.224,986,1.224,987,1.224,988,1.224,989,1.224,990,2.632,991,2.632,992,1.224,993,1.224,994,1.224,995,1.224,996,1.224,997,1.224,998,2.044,999,2.044,1000,1.224,1001,2.044,1002,1.224,1003,1.224,1004,1.224,1005,1.224,1006,3.073,1007,2.044,1008,1.224,1009,1.224,1010,1.224,1011,1.224,1012,1.224,1013,1.224,1014,1.224,1015,2.632,1016,1.224,1017,1.224,1018,1.224,1019,2.632,1020,1.224,1021,2.632,1022,1.224,1023,1.224,1024,1.224,1025,1.224,1026,1.224,1027,3.919,1028,1.224,1029,1.224,1030,1.224,1031,1.224,1032,1.224,1033,1.224,1034,3.693,1035,1.224,1036,2.632,1037,1.224,1038,1.224,1039,1.224,1040,1.224,1041,1.224,1042,1.224,1043,1.224,1044,1.224,1045,1.224,1046,1.224,1047,3.417,1048,1.224,1049,2.044,1050,1.224,1051,1.002,1052,1.224,1053,2.044,1054,1.224,1055,1.224,1056,1.224,1057,3.073,1058,1.224,1059,1.224,1060,2.632,1061,3.417,1062,1.224,1063,1.224,1064,3.073,1065,1.224,1066,1.224,1067,1.224,1068,1.224,1069,1.224,1070,1.224,1071,1.224,1072,1.224,1073,1.224,1074,2.044,1075,2.044,1076,2.044,1077,2.044,1078,4.107,1079,2.044,1080,1.224,1081,1.224,1082,2.044,1083,1.224,1084,2.044,1085,3.693,1086,1.224,1087,2.044,1088,2.044,1089,1.224,1090,1.224,1091,1.224,1092,1.224,1093,1.224,1094,1.224,1095,1.224,1096,1.224,1097,1.224,1098,1.224,1099,1.224,1100,1.224,1101,1.224,1102,1.224,1103,1.224,1104,1.224,1105,1.224,1106,1.224,1107,1.224,1108,2.632,1109,2.632,1110,2.632,1111,2.632,1112,2.632,1113,2.632,1114,2.632,1115,3.693,1116,1.224,1117,2.632,1118,2.632,1119,2.632,1120,2.632,1121,3.073,1122,1.224,1123,1.224,1124,1.224,1125,1.224,1126,2.044,1127,1.224,1128,1.224,1129,3.417,1130,2.044,1131,3.919,1132,3.417,1133,2.632,1134,1.224,1135,1.224,1136,1.224,1137,1.224,1138,1.224,1139,1.224,1140,2.044,1141,1.224,1142,1.224,1143,2.044,1144,1.224,1145,1.224,1146,1.224,1147,1.224,1148,2.044,1149,1.224,1150,1.224,1151,1.224,1152,1.224,1153,1.224,1154,1.224,1155,1.224,1156,1.224,1157,2.044,1158,1.224,1159,1.224,1160,1.224,1161,1.224,1162,1.224,1163,1.224,1164,1.224,1165,1.224,1166,1.224,1167,1.224,1168,1.224,1169,1.224,1170,1.224,1171,1.224,1172,1.224,1173,1.224,1174,2.044,1175,1.224,1176,1.224,1177,1.224,1178,2.044,1179,1.224,1180,1.224,1181,1.224,1182,1.224,1183,1.224,1184,1.224,1185,1.224,1186,1.224,1187,1.224,1188,1.224,1189,2.044,1190,1.224,1191,1.224,1192,1.224,1193,1.224,1194,1.224,1195,1.224,1196,1.224,1197,1.224,1198,1.224,1199,1.224,1200,1.224,1201,1.224,1202,1.224,1203,1.224,1204,1.224,1205,1.224,1206,1.224]],["title/modules.html",[389,1.903]],["body/modules.html",[65,0.038,293,0.038,294,0.038,388,2.797,389,2.197,399,2.47,400,2.47,914,3.756,1207,5.27,1208,5.27,1209,5.27,1210,5.545,1211,4.589]],["title/overview.html",[1212,3.252]],["body/overview.html",[0,2.555,65,0.042,209,2.256,245,2.557,247,2.557,249,2.557,293,0.036,294,0.036,296,2.256,387,1.794,388,3.628,389,2.007,390,2.256,391,2.929,392,2.929,393,2.256,394,2.555,395,2.555,396,3.431,397,3.431,398,3.431,399,2.874,400,3.086,401,3.493,402,2.929,403,2.929,554,3.431,555,3.431,556,3.431,557,3.119,583,1.442,1212,3.431,1213,4.192,1214,4.192,1215,4.192]],["title/properties.html",[587,1.084,851,2.008]],["body/properties.html",[7,0.682,65,0.042,293,0.038,294,0.038,587,1.425,1216,4.621,1217,4.621,1218,4.621,1219,4.621,1220,4.621]],["title/miscellaneous/variables.html",[875,1.495,1221,2.876]],["body/miscellaneous/variables.html",[14,1.118,22,1.258,28,1.118,41,1.756,46,0.643,55,2.035,65,0.044,72,0.479,74,1.296,80,1.028,83,0.907,115,2.305,152,1.646,262,2.305,279,1.166,293,0.034,294,0.034,374,2.305,376,2.305,418,3.281,420,3.281,422,3.281,452,2.305,535,2.557,552,3.281,565,2.305,575,2.643,585,2.748,662,2.305,845,3.095,847,3.095,848,3.095,849,3.095,875,2.305,981,3.095,1051,4.37,1221,3.095,1222,3.782,1223,3.782,1224,3.782,1225,3.782,1226,5.339,1227,3.782,1228,3.782,1229,4.695,1230,3.782,1231,3.782,1232,3.782,1233,3.782,1234,3.782,1235,3.782,1236,3.782,1237,4.695,1238,3.782,1239,3.782,1240,3.782,1241,3.782,1242,3.782,1243,5.106,1244,5.106,1245,5.106,1246,3.782,1247,3.782,1248,3.782,1249,3.782]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":213,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["0.0.1",{"_index":1217,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["0000",{"_index":512,"title":{},"body":{"injectables/AppService.html":{}}}],["1",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{},"overview.html":{}}}],["1/1",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["10.1.1",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["10.2.73.20",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["14/14",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1064,"title":{},"body":{"index.html":{}}}],["2.1.5",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1213,"title":{},"body":{"overview.html":{}}}],["3.1.2",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1214,"title":{},"body":{"overview.html":{}}}],["4.15.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["6.1.0",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["6.32.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["7448280",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1215,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["9.4.2",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["a[main",{"_index":916,"title":{},"body":{"index.html":{}}}],["abajo",{"_index":1083,"title":{},"body":{"index.html":{}}}],["acceder",{"_index":1202,"title":{},"body":{"index.html":{}}}],["accesible",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acciones",{"_index":1206,"title":{},"body":{"index.html":{}}}],["aceptada",{"_index":710,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["aceptas",{"_index":1189,"title":{},"body":{"index.html":{}}}],["aconseja",{"_index":342,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["acorto",{"_index":337,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["actualizacion",{"_index":725,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["actualización",{"_index":1086,"title":{},"body":{"index.html":{}}}],["actualizar",{"_index":431,"title":{},"body":{"injectables/AppPutService.html":{}}}],["acuerdo",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adaptación",{"_index":1156,"title":{},"body":{"index.html":{}}}],["adapto",{"_index":569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["adchecksearch",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["adchecksearch(@body",{"_index":277,"title":{},"body":{"controllers/AppController.html":{}}}],["adchecksearch(query",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["address",{"_index":501,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["adecuadas",{"_index":1175,"title":{},"body":{"index.html":{}}}],["ademas",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["además",{"_index":1162,"title":{},"body":{"index.html":{}}}],["adicional",{"_index":1195,"title":{},"body":{"index.html":{}}}],["ahi",{"_index":311,"title":{},"body":{"injectables/AppGetService.html":{}}}],["al",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["ala",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["alguna",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["alguno",{"_index":1088,"title":{},"body":{"index.html":{}}}],["algunos",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["alimentan",{"_index":935,"title":{},"body":{"index.html":{}}}],["allownull",{"_index":590,"title":{},"body":{"classes/RadCheck.html":{}}}],["aloje",{"_index":1077,"title":{},"body":{"index.html":{}}}],["altamente",{"_index":993,"title":{},"body":{"index.html":{}}}],["apartamento",{"_index":682,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["apellido",{"_index":775,"title":{},"body":{"classes/UserDto.html":{},"classes/UserInfo.html":{}}}],["api",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["aplica",{"_index":675,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["aplicacion",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["aplicación",{"_index":893,"title":{},"body":{"index.html":{}}}],["aplicar",{"_index":679,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["app",{"_index":918,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":246,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["appget.service",{"_index":248,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appgetservice",{"_index":247,"title":{"injectables/AppGetService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":388,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appput.service",{"_index":250,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appputservice",{"_index":249,"title":{"injectables/AppPutService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice",{"_index":245,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apra",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["aprametros",{"_index":822,"title":{},"body":{"classes/UserInfo.html":{}}}],["aprender",{"_index":1003,"title":{},"body":{"index.html":{}}}],["araujo",{"_index":1065,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["archivos",{"_index":1042,"title":{},"body":{"index.html":{}}}],["arquitectura",{"_index":899,"title":{},"body":{"index.html":{}}}],["arra",{"_index":360,"title":{},"body":{"injectables/AppGetService.html":{}}}],["array",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/SearchDto.html":{},"index.html":{}}}],["arriba",{"_index":1097,"title":{},"body":{"index.html":{}}}],["asc",{"_index":380,"title":{},"body":{"injectables/AppGetService.html":{}}}],["ascendente",{"_index":381,"title":{},"body":{"injectables/AppGetService.html":{}}}],["asi",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["asociado",{"_index":602,"title":{},"body":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["async",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["atributo",{"_index":647,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["atributos",{"_index":533,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{}}}],["attribute",{"_index":529,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["author",{"_index":1220,"title":{},"body":{"properties.html":{}}}],["autoincrement",{"_index":594,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["autoincremental",{"_index":598,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["automaticamente",{"_index":817,"title":{},"body":{"classes/UserInfo.html":{}}}],["autor",{"_index":1126,"title":{},"body":{"index.html":{}}}],["autorización",{"_index":1168,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":1157,"title":{},"body":{"index.html":{}}}],["available",{"_index":1211,"title":{},"body":{"modules.html":{}}}],["await",{"_index":376,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["ayuda",{"_index":1119,"title":{},"body":{"index.html":{}}}],["aún",{"_index":1067,"title":{},"body":{"index.html":{}}}],["b",{"_index":920,"title":{},"body":{"index.html":{}}}],["b(appmodule",{"_index":919,"title":{},"body":{"index.html":{}}}],["base",{"_index":547,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["bd",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bien",{"_index":969,"title":{},"body":{"index.html":{}}}],["body",{"_index":241,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["bootstrap",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borrar",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":1210,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1207,"title":{},"body":{"modules.html":{}}}],["busca",{"_index":350,"title":{},"body":{"injectables/AppGetService.html":{}}}],["buscar",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["busqueda",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"classes/SearchDto.html":{}}}],["busquedas",{"_index":325,"title":{},"body":{"injectables/AppGetService.html":{}}}],["básico",{"_index":903,"title":{},"body":{"index.html":{}}}],["búsquedas",{"_index":1105,"title":{},"body":{"index.html":{}}}],["c(appcontroller",{"_index":921,"title":{},"body":{"index.html":{}}}],["cada",{"_index":951,"title":{},"body":{"index.html":{}}}],["cambio",{"_index":1087,"title":{},"body":{"index.html":{}}}],["cambios",{"_index":1040,"title":{},"body":{"index.html":{}}}],["campo",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["campos",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["capa",{"_index":977,"title":{},"body":{"index.html":{}}}],["características",{"_index":1151,"title":{},"body":{"index.html":{}}}],["cargar",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["carpeta",{"_index":959,"title":{},"body":{"index.html":{}}}],["carpetas",{"_index":913,"title":{},"body":{"index.html":{}}}],["casa",{"_index":773,"title":{},"body":{"classes/UserDto.html":{}}}],["caso",{"_index":1015,"title":{},"body":{"index.html":{}}}],["catch",{"_index":449,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["celular",{"_index":704,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["changeuserinfo",{"_index":515,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["city",{"_index":503,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["ciudad",{"_index":669,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["clase",{"_index":468,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["clases",{"_index":960,"title":{},"body":{"index.html":{}}}],["class",{"_index":257,"title":{"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":583,"title":{},"body":{"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"overview.html":{}}}],["cliente",{"_index":769,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":554,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":555,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":556,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["coloca",{"_index":680,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{}}}],["colocado",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["colocando",{"_index":1071,"title":{},"body":{"index.html":{}}}],["colocar",{"_index":145,"title":{},"body":{"controllers/AppController.html":{}}}],["column",{"_index":605,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["column({type",{"_index":588,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["comerciales",{"_index":1138,"title":{},"body":{"index.html":{}}}],["como",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["company",{"_index":490,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["comparan",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["compare",{"_index":1082,"title":{},"body":{"index.html":{}}}],["compatibilidad",{"_index":567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["compañía",{"_index":674,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["completa",{"_index":1068,"title":{},"body":{"index.html":{}}}],["completo",{"_index":344,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["completos",{"_index":1069,"title":{},"body":{"index.html":{}}}],["componente",{"_index":313,"title":{},"body":{"injectables/AppGetService.html":{}}}],["componentes",{"_index":912,"title":{},"body":{"index.html":{}}}],["comunicar",{"_index":910,"title":{},"body":{"index.html":{}}}],["comunicarte",{"_index":1200,"title":{},"body":{"index.html":{}}}],["con",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["condiciones",{"_index":1192,"title":{},"body":{"index.html":{}}}],["conexion",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["conexión",{"_index":982,"title":{},"body":{"index.html":{}}}],["config",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{}}}],["consentimiento",{"_index":1158,"title":{},"body":{"index.html":{}}}],["considerable",{"_index":1146,"title":{},"body":{"index.html":{}}}],["console.log(!radcheck",{"_index":537,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":374,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["constantemente",{"_index":1038,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":258,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(userinforepository",{"_index":329,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["construir",{"_index":1009,"title":{},"body":{"index.html":{}}}],["consultas",{"_index":1198,"title":{},"body":{"index.html":{}}}],["consulte",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["consumo",{"_index":1000,"title":{},"body":{"index.html":{}}}],["contenido",{"_index":1148,"title":{},"body":{"index.html":{}}}],["contenidos",{"_index":950,"title":{},"body":{"index.html":{}}}],["contiene",{"_index":323,"title":{},"body":{"injectables/AppGetService.html":{},"classes/SearchDto.html":{},"index.html":{}}}],["contrario",{"_index":439,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["contraseña",{"_index":719,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["contratado",{"_index":797,"title":{},"body":{"classes/UserGroup.html":{}}}],["controlador",{"_index":904,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["correcto",{"_index":766,"title":{},"body":{"classes/UserDto.html":{}}}],["correo",{"_index":685,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{}}}],["correr",{"_index":1031,"title":{},"body":{"index.html":{}}}],["correspondiente",{"_index":1169,"title":{},"body":{"index.html":{}}}],["corriendo",{"_index":1029,"title":{},"body":{"index.html":{}}}],["cors",{"_index":865,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["country",{"_index":507,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["coverage",{"_index":828,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":761,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["creacion",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"classes/UserDto.html":{}}}],["creación",{"_index":1147,"title":{},"body":{"index.html":{}}}],["creado",{"_index":816,"title":{},"body":{"classes/UserInfo.html":{},"index.html":{}}}],["crear",{"_index":462,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["createby",{"_index":1066,"title":{},"body":{"index.html":{}}}],["creationby",{"_index":523,"title":{},"body":{"injectables/AppService.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["creationdate",{"_index":521,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["crecer",{"_index":941,"title":{},"body":{"index.html":{}}}],["creo",{"_index":526,"title":{},"body":{"injectables/AppService.html":{}}}],["cualquier",{"_index":625,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"index.html":{}}}],["cumplen",{"_index":967,"title":{},"body":{"index.html":{}}}],["cumplir",{"_index":1190,"title":{},"body":{"index.html":{}}}],["código",{"_index":732,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["d",{"_index":923,"title":{},"body":{"index.html":{}}}],["d(appservices",{"_index":922,"title":{},"body":{"index.html":{}}}],["dado",{"_index":563,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["daloradius",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["dando",{"_index":1024,"title":{},"body":{"index.html":{}}}],["dar",{"_index":1204,"title":{},"body":{"index.html":{}}}],["data",{"_index":961,"title":{},"body":{"index.html":{}}}],["database",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":553,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":399,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":552,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["datatype",{"_index":606,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.char(2",{"_index":612,"title":{},"body":{"classes/RadCheck.html":{}}}],["datatype.date",{"_index":826,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.integer",{"_index":610,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.now",{"_index":827,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.string(100",{"_index":825,"title":{},"body":{"classes/UserInfo.html":{}}}],["datatype.string(128",{"_index":800,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.string(200",{"_index":801,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["datatype.string(253",{"_index":613,"title":{},"body":{"classes/RadCheck.html":{}}}],["datatype.string(64",{"_index":611,"title":{},"body":{"classes/RadCheck.html":{}}}],["date",{"_index":482,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["dato",{"_index":1167,"title":{},"body":{"index.html":{}}}],["datos",{"_index":229,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["daño",{"_index":1187,"title":{},"body":{"index.html":{}}}],["db",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["de",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["debe",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["deben",{"_index":1010,"title":{},"body":{"index.html":{}}}],["debidamente",{"_index":1141,"title":{},"body":{"index.html":{}}}],["debiera",{"_index":1022,"title":{},"body":{"index.html":{}}}],["decir",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["decorado",{"_index":706,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["decorador",{"_index":735,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["decorators",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["default",{"_index":1051,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":599,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserInfo.html":{}}}],["defecto",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["defined",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["definir",{"_index":640,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{}}}],["deicidio",{"_index":937,"title":{},"body":{"index.html":{}}}],["dejar",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["dejarlo",{"_index":938,"title":{},"body":{"index.html":{}}}],["del",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"classes/RadCheck.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["delete",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["demasiado",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["deno.js",{"_index":1021,"title":{},"body":{"index.html":{}}}],["departamento",{"_index":763,"title":{},"body":{"classes/UserDto.html":{}}}],["department",{"_index":488,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["depedencias",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["dependencies",{"_index":390,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derecho",{"_index":1171,"title":{},"body":{"index.html":{}}}],["derechos",{"_index":1132,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":1033,"title":{},"body":{"index.html":{}}}],["descargar",{"_index":1201,"title":{},"body":{"index.html":{}}}],["desconoce",{"_index":666,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["desconocida",{"_index":630,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["descripción",{"_index":890,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"properties.html":{}}}],["desde",{"_index":312,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/PrismaService.html":{}}}],["deseada",{"_index":646,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["desechadas",{"_index":975,"title":{},"body":{"index.html":{}}}],["desplegada",{"_index":983,"title":{},"body":{"index.html":{}}}],["detalle",{"_index":1120,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diferencia",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["diferente",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["dirección",{"_index":664,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["disable",{"_index":550,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["discusion",{"_index":749,"title":{},"body":{"classes/UserDto.html":{}}}],["diseñado",{"_index":992,"title":{},"body":{"index.html":{}}}],["diseño",{"_index":1149,"title":{},"body":{"index.html":{}}}],["disponibilidad",{"_index":1184,"title":{},"body":{"index.html":{}}}],["distintas",{"_index":907,"title":{},"body":{"index.html":{}}}],["distintos",{"_index":911,"title":{},"body":{"index.html":{}}}],["distribución",{"_index":1154,"title":{},"body":{"index.html":{}}}],["divide",{"_index":933,"title":{},"body":{"index.html":{}}}],["documentación",{"_index":980,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":1057,"title":{},"body":{"index.html":{}}}],["domain/:id",{"_index":1116,"title":{},"body":{"index.html":{}}}],["domain/page/:offset",{"_index":1107,"title":{},"body":{"index.html":{}}}],["domain/radcheck",{"_index":1093,"title":{},"body":{"index.html":{}}}],["domain/radusergroup",{"_index":1098,"title":{},"body":{"index.html":{}}}],["dominio",{"_index":1075,"title":{},"body":{"index.html":{}}}],["donde",{"_index":309,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["dto",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"index.html":{}}}],["dto.address",{"_index":502,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.attribute",{"_index":530,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.changeuserinfo",{"_index":516,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.city",{"_index":504,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.company",{"_index":491,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.country",{"_index":508,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.creationby",{"_index":524,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.department",{"_index":489,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.email",{"_index":487,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.enableportallogin",{"_index":520,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.firstname",{"_index":485,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.groupname",{"_index":540,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.homephone",{"_index":497,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.lastname",{"_index":486,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.mobilephone",{"_index":500,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.notes",{"_index":514,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.op",{"_index":534,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.portalloginpassword",{"_index":518,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.priority",{"_index":542,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.state",{"_index":506,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.username",{"_index":484,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.value",{"_index":536,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.workphone",{"_index":494,"title":{},"body":{"injectables/AppService.html":{}}}],["dto.zip",{"_index":511,"title":{},"body":{"injectables/AppService.html":{}}}],["dto/seacrh.dto",{"_index":255,"title":{},"body":{"controllers/AppController.html":{}}}],["dto/updateradcheck.dto",{"_index":254,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/updateuergroup.dto",{"_index":253,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/updateuserinfo.dto",{"_index":252,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["dto/user.dto",{"_index":251,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["dudas",{"_index":1197,"title":{},"body":{"index.html":{}}}],["durante",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["dónde",{"_index":670,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["e(appgetservice",{"_index":924,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1054,"title":{},"body":{"index.html":{}}}],["ediciones",{"_index":1106,"title":{},"body":{"index.html":{}}}],["editables",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["editar",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["eficiente",{"_index":989,"title":{},"body":{"index.html":{}}}],["ejecutada",{"_index":635,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["ejemplo",{"_index":1078,"title":{},"body":{"index.html":{}}}],["el",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electronico",{"_index":809,"title":{},"body":{"classes/UserInfo.html":{}}}],["electrónico",{"_index":686,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["elementos",{"_index":1110,"title":{},"body":{"index.html":{}}}],["email",{"_index":233,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["embargo",{"_index":1007,"title":{},"body":{"index.html":{}}}],["en",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["enableportallogin",{"_index":519,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["encarga",{"_index":428,"title":{},"body":{"injectables/AppPutService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["encargado",{"_index":905,"title":{},"body":{"index.html":{}}}],["encesita",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["encontrar",{"_index":1094,"title":{},"body":{"index.html":{}}}],["encontrara",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["encuentra",{"_index":466,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["encuentran",{"_index":299,"title":{},"body":{"injectables/AppGetService.html":{}}}],["ende",{"_index":465,"title":{},"body":{"injectables/AppService.html":{}}}],["endpoints",{"_index":947,"title":{},"body":{"index.html":{}}}],["entero",{"_index":1085,"title":{},"body":{"index.html":{}}}],["enteros",{"_index":597,"title":{},"body":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{}}}],["entrada",{"_index":931,"title":{},"body":{"index.html":{}}}],["entran",{"_index":906,"title":{},"body":{"index.html":{}}}],["entrante",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["enviando",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["enviar",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["envie",{"_index":308,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["err",{"_index":544,"title":{},"body":{"injectables/AppService.html":{}}}],["error",{"_index":450,"title":{},"body":{"injectables/AppPutService.html":{}}}],["error(error",{"_index":453,"title":{},"body":{"injectables/AppPutService.html":{}}}],["es",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["escalable",{"_index":994,"title":{},"body":{"index.html":{}}}],["escrito",{"_index":1049,"title":{},"body":{"index.html":{}}}],["escuchando",{"_index":1039,"title":{},"body":{"index.html":{}}}],["ese",{"_index":1104,"title":{},"body":{"index.html":{}}}],["esfuerzo",{"_index":1145,"title":{},"body":{"index.html":{}}}],["esfuerzos",{"_index":1180,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":549,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["eso",{"_index":979,"title":{},"body":{"index.html":{}}}],["espacios",{"_index":1073,"title":{},"body":{"index.html":{}}}],["específicos",{"_index":1011,"title":{},"body":{"index.html":{}}}],["est",{"_index":991,"title":{},"body":{"index.html":{}}}],["esta",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["establecida",{"_index":1196,"title":{},"body":{"index.html":{}}}],["estado",{"_index":722,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["estan",{"_index":748,"title":{},"body":{"classes/UserDto.html":{}}}],["estar",{"_index":687,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["estas",{"_index":973,"title":{},"body":{"index.html":{}}}],["este",{"_index":298,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/SearchDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["estos",{"_index":745,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["estrictamente",{"_index":1160,"title":{},"body":{"index.html":{}}}],["están",{"_index":1140,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1114,"title":{},"body":{"index.html":{}}}],["evalua",{"_index":708,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["evaluado",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["evitando",{"_index":1072,"title":{},"body":{"index.html":{}}}],["example",{"_index":231,"title":{},"body":{"controllers/AppController.html":{},"classes/SearchDto.html":{}}}],["excepcion",{"_index":321,"title":{},"body":{"injectables/AppGetService.html":{}}}],["exclusiva",{"_index":1130,"title":{},"body":{"index.html":{}}}],["existe",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["exitosa",{"_index":1090,"title":{},"body":{"index.html":{}}}],["export",{"_index":256,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["exporta",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exports",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["expreso",{"_index":1159,"title":{},"body":{"index.html":{}}}],["express",{"_index":858,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":570,"title":{},"body":{"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["extra",{"_index":1025,"title":{},"body":{"index.html":{}}}],["extracción",{"_index":1165,"title":{},"body":{"index.html":{}}}],["f(appputservice",{"_index":925,"title":{},"body":{"index.html":{}}}],["facilidad",{"_index":955,"title":{},"body":{"index.html":{}}}],["facilitar",{"_index":338,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["falla",{"_index":455,"title":{},"body":{"injectables/AppPutService.html":{}}}],["false",{"_index":591,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["faltar",{"_index":1089,"title":{},"body":{"index.html":{}}}],["fastify",{"_index":859,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastify/helmet",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":794,"title":{},"body":{"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["fila",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["filas",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["filtro",{"_index":448,"title":{},"body":{"injectables/AppPutService.html":{}}}],["finalmente",{"_index":750,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["firstname",{"_index":384,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["fisrtname",{"_index":238,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["forma",{"_index":709,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["formato",{"_index":688,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["framework",{"_index":888,"title":{},"body":{"index.html":{}}}],["fran",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fransabt",{"_index":1127,"title":{},"body":{"index.html":{}}}],["freeradius",{"_index":637,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"index.html":{}}}],["freeradius.com",{"_index":1080,"title":{},"body":{"index.html":{}}}],["freeradius.com/radcheck",{"_index":1095,"title":{},"body":{"index.html":{}}}],["front",{"_index":314,"title":{},"body":{"injectables/AppGetService.html":{}}}],["fue",{"_index":456,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["funciona",{"_index":891,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":1150,"title":{},"body":{"index.html":{}}}],["funcionar",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["funciones",{"_index":477,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["función",{"_index":629,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["function",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":876,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g(apppostservice",{"_index":926,"title":{},"body":{"index.html":{}}}],["general",{"_index":305,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["get('/:id",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["get('page/:offset",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radcheck/:id",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radcheck/page/:offset",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radusergroup/:username",{"_index":139,"title":{},"body":{"controllers/AppController.html":{}}}],["get('radusergroup/page/:offset",{"_index":133,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid(@param('id",{"_index":264,"title":{},"body":{"controllers/AppController.html":{}}}],["getbyid(id",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecks",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecks(@param('offset",{"_index":271,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecks(offset",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecksbyid",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradchecksbyid(@param('id",{"_index":273,"title":{},"body":{"controllers/AppController.html":{}}}],["getradchecksbyid(id",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroup",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroup(@param('offset",{"_index":280,"title":{},"body":{"controllers/AppController.html":{}}}],["getradusergroup(offset",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroupbyid",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getradusergroupbyid(@param('username",{"_index":282,"title":{},"body":{"controllers/AppController.html":{}}}],["getradusergroupbyid(username",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["getting",{"_index":883,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":326,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserbyid(id",{"_index":354,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserinfo",{"_index":327,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getuserinfo(offset",{"_index":356,"title":{},"body":{"injectables/AppGetService.html":{}}}],["getusersinfo",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getusersinfo(@param('offset",{"_index":261,"title":{},"body":{"controllers/AppController.html":{}}}],["getusersinfo(offset",{"_index":153,"title":{},"body":{"controllers/AppController.html":{}}}],["global",{"_index":559,"title":{},"body":{"modules/PrismaModule.html":{}}}],["graph",{"_index":914,"title":{},"body":{"index.html":{},"modules.html":{}}}],["groupname",{"_index":539,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["grupo",{"_index":304,"title":{},"body":{"injectables/AppGetService.html":{},"classes/UserDto.html":{}}}],["grupos",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["guía",{"_index":1194,"title":{},"body":{"index.html":{}}}],["h(sequelize",{"_index":927,"title":{},"body":{"index.html":{}}}],["ha",{"_index":1019,"title":{},"body":{"index.html":{}}}],["habitación",{"_index":697,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["habría",{"_index":953,"title":{},"body":{"index.html":{}}}],["hace",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["hacer",{"_index":624,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["haciendo",{"_index":887,"title":{},"body":{"index.html":{}}}],["haga",{"_index":480,"title":{},"body":{"injectables/AppService.html":{}}}],["han",{"_index":1048,"title":{},"body":{"index.html":{}}}],["hasta",{"_index":984,"title":{},"body":{"index.html":{}}}],["hay",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["helmet",{"_index":1013,"title":{},"body":{"index.html":{}}}],["home",{"_index":498,"title":{},"body":{"injectables/AppService.html":{}}}],["homephone",{"_index":496,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["host",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["https://64.192.2.0",{"_index":1081,"title":{},"body":{"index.html":{}}}],["https://64.192.2.0/radcheck",{"_index":1096,"title":{},"body":{"index.html":{}}}],["https://mi",{"_index":1079,"title":{},"body":{"index.html":{}}}],["i(dto)aqu",{"_index":928,"title":{},"body":{"index.html":{}}}],["id",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["identificar",{"_index":1101,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["ifo",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ignore",{"_index":824,"title":{},"body":{"classes/UserInfo.html":{}}}],["igualmente",{"_index":751,"title":{},"body":{"classes/UserDto.html":{}}}],["impolmento",{"_index":705,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["import",{"_index":240,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["importa",{"_index":744,"title":{},"body":{"classes/UserDto.html":{}}}],["imports",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["incluyendo",{"_index":1135,"title":{},"body":{"index.html":{}}}],["incrementando",{"_index":316,"title":{},"body":{"injectables/AppGetService.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":301,"title":{},"body":{"injectables/AppGetService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["informacion",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["información",{"_index":1121,"title":{},"body":{"index.html":{}}}],["infracción",{"_index":1178,"title":{},"body":{"index.html":{}}}],["inicia",{"_index":878,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["inject",{"_index":363,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('radcheck_repository",{"_index":371,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('user_repository",{"_index":368,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["inject('usergroup_repository",{"_index":370,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["injectable",{"_index":295,"title":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["injectan",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["insertar",{"_index":149,"title":{},"body":{"controllers/AppController.html":{}}}],["instalación",{"_index":1016,"title":{},"body":{"index.html":{}}}],["install",{"_index":1028,"title":{},"body":{"index.html":{}}}],["intefaz",{"_index":649,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["intelectual",{"_index":1133,"title":{},"body":{"index.html":{}}}],["intención",{"_index":667,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["interfaces",{"_index":972,"title":{},"body":{"index.html":{}}}],["interfaz",{"_index":621,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["interrupción",{"_index":1186,"title":{},"body":{"index.html":{}}}],["invertido",{"_index":1144,"title":{},"body":{"index.html":{}}}],["inyecta",{"_index":333,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["ip",{"_index":1076,"title":{},"body":{"index.html":{}}}],["ir",{"_index":315,"title":{},"body":{"injectables/AppGetService.html":{}}}],["iría",{"_index":1074,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":617,"title":{},"body":{"classes/SearchDto.html":{}}}],["isemail",{"_index":734,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":644,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{}}}],["isint()@isnotempty",{"_index":631,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{}}}],["isnotempty",{"_index":641,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isnotempty()@isemail",{"_index":764,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty()@isnumber",{"_index":786,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty()@isstring",{"_index":655,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isnumber",{"_index":657,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional",{"_index":643,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isemail",{"_index":683,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["isoptional()@isnotempty",{"_index":701,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["isoptional()@isnumber",{"_index":652,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isstring",{"_index":627,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isphone",{"_index":707,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["isstring",{"_index":642,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["isstring()@isnotempty",{"_index":776,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isoptional",{"_index":672,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["javascript",{"_index":971,"title":{},"body":{"index.html":{}}}],["json",{"_index":1061,"title":{},"body":{"index.html":{}}}],["junto",{"_index":660,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["key",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["la",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["lastname",{"_index":239,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["le",{"_index":728,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["legal",{"_index":694,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["legales",{"_index":1174,"title":{},"body":{"index.html":{}}}],["legarl",{"_index":811,"title":{},"body":{"classes/UserInfo.html":{}}}],["legend",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["length",{"_index":1063,"title":{},"body":{"index.html":{}}}],["licencia",{"_index":1128,"title":{},"body":{"index.html":{}}}],["license",{"_index":1218,"title":{},"body":{"properties.html":{}}}],["ligera",{"_index":894,"title":{},"body":{"index.html":{}}}],["limit",{"_index":378,"title":{},"body":{"injectables/AppGetService.html":{}}}],["limitándose",{"_index":1136,"title":{},"body":{"index.html":{}}}],["lista",{"_index":532,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{}}}],["llama",{"_index":948,"title":{},"body":{"index.html":{}}}],["llega",{"_index":940,"title":{},"body":{"index.html":{}}}],["llegara",{"_index":678,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["lleguen",{"_index":746,"title":{},"body":{"classes/UserDto.html":{}}}],["llena",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["llenadas",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["llenados",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["llenar",{"_index":464,"title":{},"body":{"injectables/AppService.html":{},"classes/UserDto.html":{}}}],["llenara",{"_index":474,"title":{},"body":{"injectables/AppService.html":{}}}],["lo",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["localhost",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logica",{"_index":317,"title":{},"body":{"injectables/AppGetService.html":{},"classes/UpdateRadCheckDto.html":{}}}],["lograr",{"_index":892,"title":{},"body":{"index.html":{}}}],["los",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["lr",{"_index":915,"title":{},"body":{"index.html":{}}}],["luego",{"_index":932,"title":{},"body":{"index.html":{}}}],["lugar",{"_index":1205,"title":{},"body":{"index.html":{}}}],["lógicas",{"_index":908,"title":{},"body":{"index.html":{}}}],["main",{"_index":917,"title":{},"body":{"index.html":{}}}],["manejable",{"_index":481,"title":{},"body":{"injectables/AppService.html":{}}}],["manejada",{"_index":318,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["manejadas",{"_index":221,"title":{},"body":{"controllers/AppController.html":{}}}],["manejar",{"_index":429,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["manejo",{"_index":339,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["manera",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["mantener",{"_index":1182,"title":{},"body":{"index.html":{}}}],["marcas",{"_index":1137,"title":{},"body":{"index.html":{}}}],["mariadb",{"_index":565,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mas",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["matching",{"_index":294,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matoria",{"_index":820,"title":{},"body":{"classes/UserInfo.html":{}}}],["max",{"_index":1062,"title":{},"body":{"index.html":{}}}],["mayor",{"_index":954,"title":{},"body":{"index.html":{}}}],["mediante",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["medidas",{"_index":1173,"title":{},"body":{"index.html":{}}}],["medio",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/PrismaService.html":{}}}],["menos",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["metadata",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["metodo",{"_index":473,"title":{},"body":{"injectables/AppService.html":{}}}],["minimos",{"_index":742,"title":{},"body":{"classes/UserDto.html":{}}}],["miscellaneous",{"_index":875,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobilephone",{"_index":499,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["model",{"_index":586,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["modelo",{"_index":585,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modelos",{"_index":335,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["modificación",{"_index":1155,"title":{},"body":{"index.html":{}}}],["modificado",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modificar",{"_index":343,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["modo",{"_index":1036,"title":{},"body":{"index.html":{}}}],["module",{"_index":387,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["modules",{"_index":389,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["modulos",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["momento",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["motivo",{"_index":756,"title":{},"body":{"classes/UserDto.html":{}}}],["mover",{"_index":476,"title":{},"body":{"injectables/AppService.html":{}}}],["muchas",{"_index":341,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["mucho",{"_index":896,"title":{},"body":{"index.html":{}}}],["muchos",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["mysql",{"_index":986,"title":{},"body":{"index.html":{}}}],["más",{"_index":626,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["máximo",{"_index":996,"title":{},"body":{"index.html":{}}}],["métodos",{"_index":949,"title":{},"body":{"index.html":{}}}],["mínimos",{"_index":1059,"title":{},"body":{"index.html":{}}}],["módulos",{"_index":944,"title":{},"body":{"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["naturaleza",{"_index":564,"title":{},"body":{"injectables/PrismaService.html":{}}}],["necesario",{"_index":457,"title":{},"body":{"injectables/AppPutService.html":{}}}],["necesarios",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["necesidades",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["necesita",{"_index":1030,"title":{},"body":{"index.html":{}}}],["necesite",{"_index":1092,"title":{},"body":{"index.html":{}}}],["nest",{"_index":981,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nest.js",{"_index":889,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":244,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["netcom",{"_index":885,"title":{},"body":{"index.html":{}}}],["netcomplus",{"_index":1131,"title":{},"body":{"index.html":{}}}],["new",{"_index":452,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nicas",{"_index":1152,"title":{},"body":{"index.html":{}}}],["nico",{"_index":939,"title":{},"body":{"index.html":{}}}],["nnúmeros",{"_index":737,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["node.js",{"_index":990,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":303,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["normalmente",{"_index":929,"title":{},"body":{"index.html":{}}}],["notas",{"_index":714,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["notes",{"_index":513,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["npm",{"_index":1027,"title":{},"body":{"index.html":{}}}],["nuevas",{"_index":289,"title":{},"body":{"controllers/AppController.html":{}}}],["nuevo",{"_index":463,"title":{},"body":{"injectables/AppService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["num",{"_index":348,"title":{},"body":{"injectables/AppGetService.html":{}}}],["number",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["numero",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{}}}],["numeros",{"_index":596,"title":{},"body":{"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{}}}],["número",{"_index":703,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["números",{"_index":711,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["o",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["obejct",{"_index":290,"title":{},"body":{"controllers/AppController.html":{}}}],["object",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["objetivo",{"_index":461,"title":{},"body":{"injectables/AppService.html":{}}}],["objeto",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/SearchDto.html":{},"index.html":{}}}],["objetos",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["obligartoio",{"_index":659,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["obligatoria",{"_index":1084,"title":{},"body":{"index.html":{}}}],["obligatoriamente",{"_index":437,"title":{},"body":{"injectables/AppPutService.html":{}}}],["obligatorio",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["obligatorios",{"_index":739,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["obtener",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["obtiene",{"_index":336,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["obviamente",{"_index":1017,"title":{},"body":{"index.html":{}}}],["offset",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["oop",{"_index":902,"title":{},"body":{"index.html":{}}}],["op",{"_index":367,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["op.or",{"_index":383,"title":{},"body":{"injectables/AppGetService.html":{}}}],["opcionales",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["operacion",{"_index":212,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UserDto.html":{}}}],["operaciones",{"_index":270,"title":{},"body":{"controllers/AppController.html":{},"classes/UpdateRadCheckDto.html":{}}}],["operación",{"_index":634,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"index.html":{}}}],["operacviones",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["operar",{"_index":438,"title":{},"body":{"injectables/AppPutService.html":{}}}],["optimizando",{"_index":997,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["optro",{"_index":479,"title":{},"body":{"injectables/AppService.html":{}}}],["orden",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{}}}],["order",{"_index":379,"title":{},"body":{"injectables/AppGetService.html":{}}}],["orientada",{"_index":901,"title":{},"body":{"index.html":{}}}],["orm",{"_index":548,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["otras",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["otro",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["out",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["overview",{"_index":1212,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":851,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagina",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["paginada",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["paginado",{"_index":1109,"title":{},"body":{"index.html":{}}}],["paquetes",{"_index":1008,"title":{},"body":{"index.html":{}}}],["para",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":242,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["parametors",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["parametro",{"_index":804,"title":{},"body":{"classes/UserInfo.html":{}}}],["parametros",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/SearchDto.html":{}}}],["parseintpipe",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["particular",{"_index":319,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["particularmente",{"_index":1099,"title":{},"body":{"index.html":{}}}],["partir",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["password",{"_index":662,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["patentes",{"_index":1139,"title":{},"body":{"index.html":{}}}],["país",{"_index":677,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["pediente",{"_index":531,"title":{},"body":{"injectables/AppService.html":{}}}],["pequeños",{"_index":945,"title":{},"body":{"index.html":{}}}],["perdiendo",{"_index":976,"title":{},"body":{"index.html":{}}}],["permitan",{"_index":1100,"title":{},"body":{"index.html":{}}}],["permite",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["pero",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["pertenece",{"_index":771,"title":{},"body":{"classes/UserDto.html":{}}}],["pertenecen",{"_index":741,"title":{},"body":{"classes/UserDto.html":{}}}],["pertinente",{"_index":1014,"title":{},"body":{"index.html":{}}}],["perzonalizado",{"_index":736,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["peticion",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["peticiones",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["petición",{"_index":958,"title":{},"body":{"index.html":{}}}],["phone",{"_index":492,"title":{},"body":{"injectables/AppService.html":{}}}],["pide",{"_index":806,"title":{},"body":{"classes/UserInfo.html":{}}}],["plan",{"_index":796,"title":{},"body":{"classes/UserGroup.html":{},"index.html":{}}}],["plano",{"_index":447,"title":{},"body":{"injectables/AppPutService.html":{}}}],["plus",{"_index":886,"title":{},"body":{"index.html":{}}}],["poca",{"_index":566,"title":{},"body":{"injectables/PrismaService.html":{}}}],["pocas",{"_index":936,"title":{},"body":{"index.html":{}}}],["poder",{"_index":148,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["política",{"_index":1193,"title":{},"body":{"index.html":{}}}],["por",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["porque",{"_index":322,"title":{},"body":{"injectables/AppGetService.html":{}}}],["port",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portalloginpassword",{"_index":517,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["posee",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["post",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["post('radcheck",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["post('radusergroup",{"_index":198,"title":{},"body":{"controllers/AppController.html":{}}}],["post('search",{"_index":236,"title":{},"body":{"controllers/AppController.html":{}}}],["postal",{"_index":733,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["posttest",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["posttest(@body",{"_index":291,"title":{},"body":{"controllers/AppController.html":{}}}],["posttest(dto",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["postuser",{"_index":469,"title":{},"body":{"injectables/AppService.html":{}}}],["postuser(dto",{"_index":471,"title":{},"body":{"injectables/AppService.html":{}}}],["precisión",{"_index":1183,"title":{},"body":{"index.html":{}}}],["preocuparse",{"_index":1002,"title":{},"body":{"index.html":{}}}],["presta",{"_index":671,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["pretende",{"_index":1117,"title":{},"body":{"index.html":{}}}],["prettier/prettier",{"_index":551,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["primary",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["primarykey",{"_index":593,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["primer",{"_index":693,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["primera",{"_index":310,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["principal",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["prioridad",{"_index":654,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{}}}],["priority",{"_index":541,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["prisma",{"_index":568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma.service",{"_index":560,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":400,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":557,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":259,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["probado",{"_index":1020,"title":{},"body":{"index.html":{}}}],["procesar",{"_index":898,"title":{},"body":{"index.html":{}}}],["producción",{"_index":1045,"title":{},"body":{"index.html":{}}}],["programación",{"_index":900,"title":{},"body":{"index.html":{}}}],["prohibida",{"_index":1164,"title":{},"body":{"index.html":{}}}],["prohibido",{"_index":1161,"title":{},"body":{"index.html":{}}}],["properties",{"_index":587,"title":{"properties.html":{}},"body":{"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"properties.html":{}}}],["propiedad",{"_index":1129,"title":{},"body":{"index.html":{}}}],["proteger",{"_index":1176,"title":{},"body":{"index.html":{}}}],["proveedor",{"_index":546,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["provide",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["pueda",{"_index":1188,"title":{},"body":{"index.html":{}}}],["puedan",{"_index":779,"title":{},"body":{"classes/UserDto.html":{}}}],["puede",{"_index":306,"title":{},"body":{"injectables/AppGetService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["puedes",{"_index":1199,"title":{},"body":{"index.html":{}}}],["puerto",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["put",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"index.html":{}}}],["put('radcheck",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["put('radusergroup",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["página",{"_index":1111,"title":{},"body":{"index.html":{}}}],["que",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["queda",{"_index":1163,"title":{},"body":{"index.html":{}}}],["query",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"classes/SearchDto.html":{}}}],["quien",{"_index":727,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["quién",{"_index":946,"title":{},"body":{"index.html":{}}}],["radcheck",{"_index":74,"title":{"classes/RadCheck.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["radcheck/:id",{"_index":1124,"title":{},"body":{"index.html":{}}}],["radcheck/:username",{"_index":1123,"title":{},"body":{"index.html":{}}}],["radcheck/page/:offset",{"_index":1122,"title":{},"body":{"index.html":{}}}],["radcheck_repository",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radcheckprovider",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["radcheckrepository",{"_index":331,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["radchecksearch",{"_index":328,"title":{},"body":{"injectables/AppGetService.html":{}}}],["radchecksearch(query",{"_index":358,"title":{},"body":{"injectables/AppGetService.html":{}}}],["radius",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radusergroup",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["radusergroup/:username",{"_index":1125,"title":{},"body":{"index.html":{}}}],["radusergroupsearch",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["radusergroupsearch(@body",{"_index":286,"title":{},"body":{"controllers/AppController.html":{}}}],["radusergroupsearch(query",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["razonables",{"_index":1181,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":260,"title":{},"body":{"controllers/AppController.html":{}}}],["realiza",{"_index":434,"title":{},"body":{"injectables/AppPutService.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["realizada",{"_index":782,"title":{},"body":{"classes/UserDto.html":{}}}],["realizan",{"_index":1041,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["realizarán",{"_index":1179,"title":{},"body":{"index.html":{}}}],["realizo",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["rechaza",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["rechazada",{"_index":440,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["rechazado",{"_index":690,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["rechazo",{"_index":214,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["recibidos",{"_index":623,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["recibir",{"_index":615,"title":{},"body":{"classes/SearchDto.html":{}}}],["recomienda",{"_index":942,"title":{},"body":{"index.html":{}}}],["reconoces",{"_index":1203,"title":{},"body":{"index.html":{}}}],["recopilación",{"_index":1166,"title":{},"body":{"index.html":{}}}],["recursos",{"_index":1001,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["registrados",{"_index":1142,"title":{},"body":{"index.html":{}}}],["regresa",{"_index":1115,"title":{},"body":{"index.html":{}}}],["reinicia",{"_index":1043,"title":{},"body":{"index.html":{}}}],["relacionados",{"_index":1134,"title":{},"body":{"index.html":{}}}],["rendir",{"_index":995,"title":{},"body":{"index.html":{}}}],["reproducción",{"_index":1153,"title":{},"body":{"index.html":{}}}],["requeire",{"_index":436,"title":{},"body":{"injectables/AppPutService.html":{}}}],["requeridas",{"_index":1058,"title":{},"body":{"index.html":{}}}],["requerido",{"_index":1060,"title":{},"body":{"index.html":{}}}],["requerimos",{"_index":1018,"title":{},"body":{"index.html":{}}}],["requerirán",{"_index":1012,"title":{},"body":{"index.html":{}}}],["reques",{"_index":968,"title":{},"body":{"index.html":{}}}],["requests",{"_index":966,"title":{},"body":{"index.html":{}}}],["requiere",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"index.html":{}}}],["reserva",{"_index":1170,"title":{},"body":{"index.html":{}}}],["reservados",{"_index":1143,"title":{},"body":{"index.html":{}}}],["reset",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["residencia",{"_index":753,"title":{},"body":{"classes/UserDto.html":{}}}],["responsable",{"_index":1185,"title":{},"body":{"index.html":{}}}],["respositorios",{"_index":334,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["respuesta",{"_index":999,"title":{},"body":{"index.html":{}}}],["resto",{"_index":1091,"title":{},"body":{"index.html":{}}}],["resultar",{"_index":780,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["results",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["return",{"_index":262,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["root",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":783,"title":{},"body":{"classes/UserDto.html":{}}}],["run",{"_index":1034,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"index.html":{}}}],["rutas",{"_index":430,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["rxjs",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["rápida",{"_index":897,"title":{},"body":{"index.html":{}}}],["rápido",{"_index":988,"title":{},"body":{"index.html":{}}}],["se",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sean",{"_index":715,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["search",{"_index":616,"title":{},"body":{"classes/SearchDto.html":{}}}],["searchdto",{"_index":63,"title":{"classes/SearchDto.html":{}},"body":{"controllers/AppController.html":{},"classes/SearchDto.html":{},"coverage.html":{}}}],["seguido",{"_index":743,"title":{},"body":{"classes/UserDto.html":{}}}],["segun",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["segunda",{"_index":1112,"title":{},"body":{"index.html":{}}}],["segundo",{"_index":700,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["seguridad",{"_index":978,"title":{},"body":{"index.html":{}}}],["según",{"_index":957,"title":{},"body":{"index.html":{}}}],["separarlo",{"_index":943,"title":{},"body":{"index.html":{}}}],["separaron",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["separo",{"_index":956,"title":{},"body":{"index.html":{}}}],["sequeelize/databse.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/radusergroup/usergroup.entity",{"_index":365,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/radusergroup/usergroup.providers",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/rasdusercheck/radcheck.entity",{"_index":366,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/rasdusercheck/radusercheck.provider",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["sequeelize/user/user.entity",{"_index":364,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["sequeelize/user/user.providers",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["sequelize",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/DatabaseModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sequelize.addmodels([userinfo",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.sync",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ser",{"_index":307,"title":{},"body":{"injectables/AppGetService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["servicio",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"index.html":{}}}],["servicios",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["servidor",{"_index":636,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["si",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["siguen",{"_index":747,"title":{},"body":{"classes/UserDto.html":{}}}],["siguientes",{"_index":821,"title":{},"body":{"classes/UserInfo.html":{}}}],["sin",{"_index":1006,"title":{},"body":{"index.html":{}}}],["sino",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["sintaxis",{"_index":1005,"title":{},"body":{"index.html":{}}}],["sirva",{"_index":1118,"title":{},"body":{"index.html":{}}}],["sirve",{"_index":930,"title":{},"body":{"index.html":{}}}],["sirven",{"_index":963,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":724,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["sobre",{"_index":717,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["sola",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["solicita",{"_index":347,"title":{},"body":{"injectables/AppGetService.html":{}}}],["solo",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["solocados",{"_index":823,"title":{},"body":{"classes/UserInfo.html":{}}}],["son",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["soportan",{"_index":909,"title":{},"body":{"index.html":{}}}],["soportar",{"_index":1023,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["src/.../database.providers.ts",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../radusercheck.provider.ts",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.providers.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usergroup.providers.ts",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:109",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:119",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:135",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:146",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:156",{"_index":218,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:166",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:183",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:39",{"_index":155,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:50",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:61",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:71",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:88",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:99",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":459,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":470,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:35",{"_index":472,"title":{},"body":{"injectables/AppService.html":{}}}],["src/appget.service.ts",{"_index":297,"title":{},"body":{"injectables/AppGetService.html":{},"coverage.html":{}}}],["src/appget.service.ts:106",{"_index":346,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:127",{"_index":349,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:148",{"_index":359,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:15",{"_index":332,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:174",{"_index":352,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:195",{"_index":353,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:216",{"_index":361,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:38",{"_index":357,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:59",{"_index":355,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appget.service.ts:77",{"_index":362,"title":{},"body":{"injectables/AppGetService.html":{}}}],["src/appput.service.ts",{"_index":427,"title":{},"body":{"injectables/AppPutService.html":{},"coverage.html":{}}}],["src/appput.service.ts:14",{"_index":432,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:36",{"_index":443,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:57",{"_index":433,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/appput.service.ts:78",{"_index":441,"title":{},"body":{"injectables/AppPutService.html":{}}}],["src/dto",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["src/dto/seacrh.dto.ts",{"_index":614,"title":{},"body":{"classes/SearchDto.html":{},"coverage.html":{}}}],["src/dto/seacrh.dto.ts:13",{"_index":618,"title":{},"body":{"classes/SearchDto.html":{}}}],["src/dto/updateradcheck.dto.ts",{"_index":620,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"coverage.html":{}}}],["src/dto/updateradcheck.dto.ts:20",{"_index":632,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:27",{"_index":638,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:35",{"_index":628,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:43",{"_index":633,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateradcheck.dto.ts:51",{"_index":639,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["src/dto/updateuergroup.dto.ts",{"_index":648,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"coverage.html":{}}}],["src/dto/updateuergroup.dto.ts:18",{"_index":656,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuergroup.dto.ts:25",{"_index":650,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuergroup.dto.ts:32",{"_index":653,"title":{},"body":{"classes/UpdateUserGroupDto.html":{}}}],["src/dto/updateuserinfo.dto.ts",{"_index":658,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"coverage.html":{}}}],["src/dto/updateuserinfo.dto.ts:102",{"_index":695,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:109",{"_index":663,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:116",{"_index":668,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:123",{"_index":721,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:130",{"_index":676,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:137",{"_index":731,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:144",{"_index":713,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:151",{"_index":665,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:158",{"_index":720,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:165",{"_index":691,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:21",{"_index":723,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:28",{"_index":698,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:35",{"_index":726,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:42",{"_index":718,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:49",{"_index":692,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:56",{"_index":699,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:63",{"_index":684,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:72",{"_index":702,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:81",{"_index":681,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:88",{"_index":673,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/updateuserinfo.dto.ts:95",{"_index":729,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["src/dto/user.dto.ts",{"_index":740,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/dto/user.dto.ts:103",{"_index":752,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:110",{"_index":757,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:117",{"_index":788,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:124",{"_index":759,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:131",{"_index":792,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:138",{"_index":778,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:145",{"_index":755,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:152",{"_index":785,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:159",{"_index":767,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:168",{"_index":754,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:175",{"_index":781,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:182",{"_index":790,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:191",{"_index":770,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:198",{"_index":787,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:24",{"_index":760,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:31",{"_index":789,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:38",{"_index":784,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:45",{"_index":768,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:52",{"_index":774,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:59",{"_index":765,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:66",{"_index":777,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:75",{"_index":762,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:82",{"_index":758,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:89",{"_index":791,"title":{},"body":{"classes/UserDto.html":{}}}],["src/dto/user.dto.ts:96",{"_index":772,"title":{},"body":{"classes/UserDto.html":{}}}],["src/main.ts",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":558,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":561,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/sequeelize/database.providers.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/databse.module.ts",{"_index":545,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts",{"_index":793,"title":{},"body":{"classes/UserGroup.html":{},"coverage.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:12",{"_index":799,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:17",{"_index":795,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.entity.ts:25",{"_index":798,"title":{},"body":{"classes/UserGroup.html":{}}}],["src/sequeelize/radusergroup/usergroup.providers.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts",{"_index":584,"title":{},"body":{"classes/RadCheck.html":{},"coverage.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:13",{"_index":595,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:18",{"_index":601,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:23",{"_index":592,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:28",{"_index":600,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radcheck.entity.ts:33",{"_index":603,"title":{},"body":{"classes/RadCheck.html":{}}}],["src/sequeelize/rasdusercheck/radusercheck.provider.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sequeelize/user/user.entity.ts",{"_index":802,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["src/sequeelize/user/user.entity.ts:103",{"_index":814,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:145",{"_index":805,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:155",{"_index":818,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:161",{"_index":815,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:17",{"_index":812,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:22",{"_index":819,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:27",{"_index":810,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:32",{"_index":813,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:37",{"_index":808,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.entity.ts:91",{"_index":803,"title":{},"body":{"classes/UserInfo.html":{}}}],["src/sequeelize/user/user.providers.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1035,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1044,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":1046,"title":{},"body":{"index.html":{}}}],["started",{"_index":884,"title":{"index.html":{}},"body":{}}],["state",{"_index":505,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["statements",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["strings",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["su",{"_index":302,"title":{},"body":{"injectables/AppGetService.html":{},"index.html":{}}}],["submódulos",{"_index":934,"title":{},"body":{"index.html":{}}}],["super",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":1208,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":1177,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1209,"title":{},"body":{"modules.html":{}}}],["tabla",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["tablas",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["table",{"_index":604,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["tablename",{"_index":608,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["tal",{"_index":970,"title":{},"body":{"index.html":{}}}],["tanto",{"_index":1102,"title":{},"body":{"index.html":{}}}],["telefónicos",{"_index":738,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["teléfono",{"_index":696,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["tendría",{"_index":895,"title":{},"body":{"index.html":{}}}],["tercera",{"_index":1113,"title":{},"body":{"index.html":{}}}],["test",{"_index":1047,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":1056,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1055,"title":{},"body":{"index.html":{}}}],["testeado",{"_index":1032,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1053,"title":{},"body":{"index.html":{}}}],["this.appgetservice.getradchecks(offset",{"_index":272,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradchecksbyid(id",{"_index":274,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradusergroup(offset",{"_index":281,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getradusergroupbyid(username",{"_index":283,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getuserbyid(id",{"_index":265,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.getuserinfo(offset",{"_index":263,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.radchecksearch(query.query",{"_index":278,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.radusergroupsearch(query.query",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appgetservice.usersearch(query.query",{"_index":269,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateradcheck(query",{"_index":276,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateusergroup(query",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appputservice.updateuserinfo(query",{"_index":267,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.postuser(dto",{"_index":292,"title":{},"body":{"controllers/AppController.html":{}}}],["this.radcheckrepository.create",{"_index":528,"title":{},"body":{"injectables/AppService.html":{}}}],["this.radcheckrepository.findall",{"_index":385,"title":{},"body":{"injectables/AppGetService.html":{}}}],["this.radcheckrepository.update(updatedata",{"_index":454,"title":{},"body":{"injectables/AppPutService.html":{}}}],["this.usergrouprepository.create",{"_index":538,"title":{},"body":{"injectables/AppService.html":{}}}],["this.usergrouprepository.findall",{"_index":386,"title":{},"body":{"injectables/AppGetService.html":{}}}],["this.usergrouprepository.update(updatedata",{"_index":458,"title":{},"body":{"injectables/AppPutService.html":{}}}],["this.userinforepository.create",{"_index":483,"title":{},"body":{"injectables/AppService.html":{}}}],["this.userinforepository.findall",{"_index":377,"title":{},"body":{"injectables/AppGetService.html":{}}}],["this.userinforepository.update(updatedata",{"_index":445,"title":{},"body":{"injectables/AppPutService.html":{}}}],["throw",{"_index":451,"title":{},"body":{"injectables/AppPutService.html":{}}}],["tiempo",{"_index":998,"title":{},"body":{"index.html":{}}}],["tiene",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["tiles",{"_index":716,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{}}}],["timestamps",{"_index":609,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["tipo",{"_index":651,"title":{},"body":{"classes/UpdateUserGroupDto.html":{},"index.html":{}}}],["tipos",{"_index":965,"title":{},"body":{"index.html":{}}}],["tlf",{"_index":712,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["todas",{"_index":300,"title":{},"body":{"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{}}}],["todo",{"_index":475,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["todos",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["tomar",{"_index":1172,"title":{},"body":{"index.html":{}}}],["trabaja",{"_index":1108,"title":{},"body":{"index.html":{}}}],["trabajado",{"_index":985,"title":{},"body":{"index.html":{}}}],["trabajo",{"_index":730,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"index.html":{}}}],["traer",{"_index":562,"title":{},"body":{"injectables/PrismaService.html":{}}}],["transfer",{"_index":962,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["transpilación",{"_index":974,"title":{},"body":{"index.html":{}}}],["traves",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["travez",{"_index":151,"title":{},"body":{"controllers/AppController.html":{}}}],["través",{"_index":964,"title":{},"body":{"index.html":{}}}],["tres",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["true",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["try",{"_index":373,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["tuvo",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["type",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/RadCheck.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":369,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["typescript",{"_index":607,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"index.html":{}}}],["términos",{"_index":1191,"title":{},"body":{"index.html":{}}}],["u",{"_index":478,"title":{},"body":{"injectables/AppService.html":{}}}],["un",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["una",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["undefined",{"_index":589,"title":{},"body":{"classes/RadCheck.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{}}}],["unemail@email.com",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["unica",{"_index":467,"title":{},"body":{"injectables/AppService.html":{}}}],["unico",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":1052,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["unlicensed",{"_index":1219,"title":{},"body":{"properties.html":{}}}],["uno",{"_index":952,"title":{},"body":{"index.html":{}}}],["unstring",{"_index":442,"title":{},"body":{"injectables/AppPutService.html":{}}}],["update",{"_index":435,"title":{},"body":{"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UpdateRadCheckDto.html":{}}}],["updateby",{"_index":525,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["updatedata",{"_index":444,"title":{},"body":{"injectables/AppPutService.html":{}}}],["updatedate",{"_index":522,"title":{},"body":{"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["updateradcheck",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateradcheck(@body",{"_index":275,"title":{},"body":{"controllers/AppController.html":{}}}],["updateradcheck(query",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateradcheckdto",{"_index":201,"title":{"classes/UpdateRadCheckDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateRadCheckDto.html":{},"coverage.html":{}}}],["updateusergroup",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateusergroup(@body",{"_index":284,"title":{},"body":{"controllers/AppController.html":{}}}],["updateusergroup(query",{"_index":215,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateusergroupdto",{"_index":216,"title":{"classes/UpdateUserGroupDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateUserGroupDto.html":{},"coverage.html":{}}}],["updateuserinfo",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateuserinfo(@body",{"_index":266,"title":{},"body":{"controllers/AppController.html":{}}}],["updateuserinfo(query",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{}}}],["updateuserinfodto",{"_index":227,"title":{"classes/UpdateUserInfoDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppPutService.html":{},"classes/UpdateUserInfoDto.html":{},"coverage.html":{}}}],["url",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["usa",{"_index":320,"title":{},"body":{"injectables/AppGetService.html":{},"classes/SearchDto.html":{},"index.html":{}}}],["usaername",{"_index":324,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usamos",{"_index":1103,"title":{},"body":{"index.html":{}}}],["usando",{"_index":351,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usar",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["usara",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["usarse",{"_index":340,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["usefactory",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":372,"title":{},"body":{"injectables/AppGetService.html":{}}}],["user.dto.ts",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["user_repository",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdto",{"_index":158,"title":{"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["usergoup",{"_index":543,"title":{},"body":{"injectables/AppService.html":{}}}],["usergroup",{"_index":279,"title":{"classes/UserGroup.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usergroup_repository",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usergroupproviders",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergrouprepository",{"_index":330,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["userinfo",{"_index":96,"title":{"classes/UserInfo.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"coverage.html":{},"index.html":{}}}],["userinforepository",{"_index":345,"title":{},"body":{"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{}}}],["username",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userproviders",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersearch",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["usersearch(@body",{"_index":268,"title":{},"body":{"controllers/AppController.html":{}}}],["usersearch(query",{"_index":235,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{}}}],["usersinfo",{"_index":375,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usersinfo?.length",{"_index":382,"title":{},"body":{"injectables/AppGetService.html":{}}}],["usevalue",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue:usergroup",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue:userinfo",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uso",{"_index":222,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["usted",{"_index":1070,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":527,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserGroup.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["usuarios",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["utilizar",{"_index":446,"title":{},"body":{"injectables/AppPutService.html":{},"index.html":{}}}],["vacio",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserInfo.html":{}}}],["vacios",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["validator",{"_index":619,"title":{},"body":{"classes/SearchDto.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UpdateUserGroupDto.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["valo",{"_index":661,"title":{},"body":{"classes/UpdateUserInfoDto.html":{}}}],["valor",{"_index":807,"title":{},"body":{"classes/UserInfo.html":{},"index.html":{}}}],["valores",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["value",{"_index":535,"title":{},"body":{"injectables/AppService.html":{},"classes/RadCheck.html":{},"classes/UpdateRadCheckDto.html":{},"classes/UserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1221,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velocidad",{"_index":1026,"title":{},"body":{"index.html":{}}}],["venezuela",{"_index":509,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{}}}],["ver",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["verbo",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["verifica",{"_index":622,"title":{},"body":{"classes/UpdateRadCheckDto.html":{}}}],["verificar",{"_index":645,"title":{},"body":{"classes/UpdateRadCheckDto.html":{},"index.html":{}}}],["version",{"_index":1216,"title":{},"body":{"properties.html":{}}}],["viene",{"_index":1050,"title":{},"body":{"index.html":{}}}],["válido",{"_index":689,"title":{},"body":{"classes/UpdateUserInfoDto.html":{},"index.html":{}}}],["watch",{"_index":1037,"title":{},"body":{"index.html":{}}}],["web",{"_index":987,"title":{},"body":{"index.html":{}}}],["work",{"_index":495,"title":{},"body":{"injectables/AppService.html":{}}}],["workphone",{"_index":493,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["y",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppGetService.html":{},"modules/AppModule.html":{},"injectables/AppPutService.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/UserDto.html":{},"index.html":{}}}],["ya",{"_index":1004,"title":{},"body":{"index.html":{}}}],["zip",{"_index":510,"title":{},"body":{"injectables/AppService.html":{},"classes/UpdateUserInfoDto.html":{},"classes/UserDto.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["zoom",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                De momento solo hay un 'Controller', pero se separaron las operacviones en diferente Servicios segun el verbo HTTP.\nEs decir hay un servicio para las peticiones GET, otro para POST y otro mas para las PUT.\nNo se usara (al menos de momento) un servicio con peticiones Delete, si hay que borrar valores se hace en DaloRadius.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                adCheckSearch\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                getRadChecks\n                            \n                            \n                                    \n                                getRadChecksById\n                            \n                            \n                                    \n                                getRadUserGroup\n                            \n                            \n                                    \n                                getRadUserGroupByID\n                            \n                            \n                                    \n                                getUsersInfo\n                            \n                            \n                                    \n                                    Async\n                                postTest\n                            \n                            \n                                    \n                                radUserGroupSearch\n                            \n                            \n                                    \n                                updateRadCheck\n                            \n                            \n                                    \n                                updateUserGroup\n                            \n                            \n                                    \n                                updateUserInfo\n                            \n                            \n                                    \n                                userSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        adCheckSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    adCheckSearch(query: SearchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('radcheck')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:119\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"radcheck\" por medio de de strings que se comparan con el campo username.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                SearchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Array de objetos [{Object}, {Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:50\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto UserInfo a partir de la busqueda por 'id'.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadChecks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecks(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radcheck/page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:88\n                \n            \n\n\n            \n                \n                    Retorna a la info del 'radcheck' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [{Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadChecksById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecksById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radcheck/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:99\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto Radcheck a partir de la busqueda por 'id'.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroup(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radusergroup/page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:135\n                \n            \n\n\n            \n                \n                    Retorna ala info del 'radusergroup' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        []\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRadUserGroupByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroupByID(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('radusergroup/:username')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:146\n                \n            \n\n\n            \n                \n                    Permite obtener un unico Objeto Radcheck a partir de la busqueda por el campo 'username'. radusergroup no posee id para las filas, ademas se tuvo que colocar el username como Primary Key para poder insertar lo valores a travez de Sequelize.\nUsar para editar los valores mediante un 'Put.'\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getUsersInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersInfo(offset: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('page/:offset')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:39\n                \n            \n\n\n            \n                \n                    Retorna a los usuarios de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\nSe debe enviar el numero de pagina a traves de los parametros.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [{Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        postTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    postTest(dto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:183\n                \n            \n\n\n            \n                \n                    Con esta ruta son llenadas las tres tablas en una sola peticion.\nNo todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\nConsulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        radUserGroupSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    radUserGroupSearch(query: SearchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('radusergroup')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:166\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"radcheck\" por medio de de strings que se comparan con el campo username.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                SearchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Array de objetos [{Object}, {Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRadCheck(query: UpdateRadCheckDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('radcheck')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:109\n                \n            \n\n\n            \n                \n                    Permite editar las filas del la tabla 'radcheck'. Muchos de los parametors son opcionales pero se encesita el 'id' de la fila a editar o se rechaza la peticion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateRadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserGroup(query: UpdateUserGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('radusergroup')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:156\n                \n            \n\n\n            \n                \n                    Permite editar las filas del la tabla 'radusergroup'. A diferencia de las otras tablas manejadas en la API, esta tabla no posee un campo 'id', se uso el 'username' como primary key por lo que se requiere para poder realizar la peticion, sino, se rechaza la operacion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(query: UpdateUserInfoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:61\n                \n            \n\n\n            \n                \n                    Permite editar la info de un objeto UserInfo. Se debe enviar los datos a editar, no requiere todos los campos editables pero requiere el id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserInfoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            { id: 14, email: unemail@email.com}\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        userSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    userSearch(query: SearchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('search')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:71\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"userinfo\" por medio de de strings que se comparan con los campos: username, fisrtname, lastname y email.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                SearchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Array de objetos [{Object}, {Object}, {Object}, ....]\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  ParseIntPipe,\n  Put,\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AppGetService } from './appGet.service';\nimport { AppPutService } from './appPut.service';\nimport { UserDto } from './dto/user.dto';\nimport { UpdateUserInfoDto } from './dto/updateUserInfo.dto';\nimport { UpdateUserGroupDto } from './dto/updateUerGroup.dto';\nimport { UpdateRadCheckDto } from './dto/updateRadCheck.dto';\nimport { SearchDto } from './dto/seacrh.dto';\n\n/**\n * De momento solo hay un 'Controller', pero se separaron las operacviones en diferente Servicios segun el verbo HTTP.\n * Es decir hay un servicio para las peticiones GET, otro para POST y otro mas para las PUT.\n * No se usara (al menos de momento) un servicio con peticiones Delete, si hay que borrar valores se hace en DaloRadius.\n */\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly appGetService: AppGetService,\n    private readonly appPutService: AppPutService,\n  ) {}\n\n  /**\n   * Retorna a los usuarios de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param { number } offset\n   * @returns [{Object}, {Object}, ....]\n   */\n  @Get('page/:offset')\n  getUsersInfo(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getUserInfo(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto UserInfo a partir de la busqueda por 'id'.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param { number } id\n   * @returns Object\n   */\n  @Get('/:id')\n  getById(@Param('id') id: number) {\n    return this.appGetService.getUserById(id);\n  }\n\n  /**\n   * Permite editar la info de un objeto UserInfo. Se debe enviar los datos a editar, no requiere todos los campos editables pero requiere el id.\n   * @example { id: 14, email: unemail@email.com}\n   * @param  {  UpdateUserInfoDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put()\n  updateUserInfo(@Body() query: UpdateUserInfoDto) {\n    return this.appPutService.updateUserInfo(query);\n  }\n\n  /**\n   * Permite buscar objetos de la tabla \"userinfo\" por medio de de strings que se comparan con los campos: username, fisrtname, lastname y email.\n   * @param { SearchDto } query\n   * @returns Array de objetos [{Object}, {Object}, {Object}, ....]\n   */\n  @Post('search')\n  userSearch(@Body() query: SearchDto) {\n    return this.appGetService.userSearch(query.query);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //* OPERACIONES DE RADCHECK *//\n\n  /**\n   * Retorna a la info del 'radcheck' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param { number } offset\n   * @returns [{Object}, {Object}, ....]\n   */\n  @Get('radcheck/page/:offset')\n  getRadChecks(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getRadChecks(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto Radcheck a partir de la busqueda por 'id'.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param { number } id\n   * @returns\n   */\n  @Get('radcheck/:id')\n  getRadChecksById(@Param('id') id: number) {\n    return this.appGetService.getRadChecksById(id);\n  }\n\n  /**\n   * Permite editar las filas del la tabla 'radcheck'. Muchos de los parametors son opcionales pero se encesita el 'id' de la fila a editar o se rechaza la peticion.\n   * @param { UpdateRadCheckDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put('radcheck')\n  updateRadCheck(@Body() query: UpdateRadCheckDto) {\n    return this.appPutService.updateRadCheck(query);\n  }\n\n  /**\n   * Permite buscar objetos de la tabla \"radcheck\" por medio de de strings que se comparan con el campo username.\n   * @param { SearchDto } query\n   * @returns Array de objetos [{Object}, {Object}, {Object}, ....]\n   */\n  @Post('radcheck')\n  adCheckSearch(@Body() query: SearchDto) {\n    return this.appGetService.radCheckSearch(query.query);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //* OPERACIONES DE USERGROUP *//\n  /**\n   * Retorna ala info del 'radusergroup' de manera paginada en grupos de 50 para no cargar demasiado la BD durante las peticiones asi como la API enviando informacion.\n   * Se debe enviar el numero de pagina a traves de los parametros.\n   * @param offset\n   * @returns []\n   */\n  @Get('radusergroup/page/:offset')\n  getRadUserGroup(@Param('offset', ParseIntPipe) offset: number) {\n    return this.appGetService.getRadUserGroup(offset);\n  }\n\n  /**\n   * Permite obtener un unico Objeto Radcheck a partir de la busqueda por el campo 'username'. radusergroup no posee id para las filas, ademas se tuvo que colocar el username como Primary Key para poder insertar lo valores a travez de Sequelize.\n   * Usar para editar los valores mediante un 'Put.'\n   * @param username\n   * @returns\n   */\n  @Get('radusergroup/:username')\n  getRadUserGroupByID(@Param('username') username: string) {\n    return this.appGetService.getRadUserGroupById(username);\n  }\n\n  /**\n   * Permite editar las filas del la tabla 'radusergroup'. A diferencia de las otras tablas manejadas en la API, esta tabla no posee un campo 'id', se uso el 'username' como primary key por lo que se requiere para poder realizar la peticion, sino, se rechaza la operacion.\n   * @param { UpdateUserGroupDto } query\n   * @returns 1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  @Put('radusergroup')\n  updateUserGroup(@Body() query: UpdateUserGroupDto) {\n    return this.appPutService.updateUserGroup(query);\n  }\n\n  /**\n   * Permite buscar objetos de la tabla \"radcheck\" por medio de de strings que se comparan con el campo username.\n   * @param { SearchDto } query\n   * @returns Array de objetos [{Object}, {Object}, {Object}, ....]\n   */\n  @Post('radusergroup')\n  radUserGroupSearch(@Body() query: SearchDto) {\n    return this.appGetService.radUserGroupSearch(query.query);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //* RUTA POST PARA CREACION DE NUEVAS FILAS EN LA TRES TABLAS *//\n  /**\n   * Con esta ruta son llenadas las tres tablas en una sola peticion.\n   * No todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\n   * Consulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n   * @param dto\n   * @returns {Obejct}\n   */\n  @Post()\n  async postTest(@Body() dto: UserDto) {\n    return this.appService.postUser(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppGetService.html":{"url":"injectables/AppGetService.html","title":"injectable - AppGetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppGetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appGet.service.ts\n        \n\n\n            \n                Description\n            \n            \n                En este servicio se encuentran todas las peticiones GET como lo indica su nombre.\nLas peticiones de un grupo general como puede ser 'radcheck' requiere que se envie un numero de pagina, donde la primera pagina debe ser 0, y a partir de ahi, desde el componente en el front ir incrementando segun la logica manejada en el componente.\nPara un objeto en particular se usa el 'id' con excepcion de la tabla 'radusergroup' porque esta no contiene campo 'id' por lo que se usa el 'usaername' para realizar las busquedas.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRadChecks\n                            \n                            \n                                    Async\n                                getRadChecksById\n                            \n                            \n                                    Async\n                                getRadUserGroup\n                            \n                            \n                                    Async\n                                getRadUserGroupById\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserInfo\n                            \n                            \n                                    Async\n                                radCheckSearch\n                            \n                            \n                                    Async\n                                radUserGroupSearch\n                            \n                            \n                                    Async\n                                userSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/appGet.service.ts:15\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadChecks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecks(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:106\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'radcheck'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        num\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadChecksById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadChecksById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:127\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'radcheck' usando su numero de id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroup(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:174\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'radusergroup'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        num\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRadUserGroupById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadUserGroupById(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:195\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'username' usando un string con su nombre.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:59\n                \n            \n\n\n            \n                \n                    Busca un solo objeto 'userinfo' usando su numero de id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInfo(offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:38\n                \n            \n\n\n            \n                \n                    Solicita a grupos de 50 objetos 'userinfo'.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        [{Object}, {Object}, {Object}....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        radCheckSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    radCheckSearch(query: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:148\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"radcheck\" por medio de de strings que se comparan con el campo username.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Arra de objetos [{Object}, {Object}, {Object}, .....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        radUserGroupSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    radUserGroupSearch(query: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:216\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"radusergroup\" por medio de de strings que se comparan con el campo username.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Arra de objetos [{Object}, {Object}, {Object}, .....]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    userSearch(query: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/appGet.service.ts:77\n                \n            \n\n\n            \n                \n                    Permite buscar objetos de la tabla \"userinfo\" por medio de de strings que se comparan con los campos: username, fisrtname, lastname y email.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Arra de objetos [{Object}, {Object}, {Object}, .....]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\nimport { Op } from \"sequelize\";\n\n/**\n * En este servicio se encuentran todas las peticiones GET como lo indica su nombre.\n * Las peticiones de un grupo general como puede ser 'radcheck' requiere que se envie un numero de pagina, donde la primera pagina debe ser 0, y a partir de ahi, desde el componente en el front ir incrementando segun la logica manejada en el componente.\n * \n * Para un objeto en particular se usa el 'id' con excepcion de la tabla 'radusergroup' porque esta no contiene campo 'id' por lo que se usa el 'usaername' para realizar las busquedas.\n */\n@Injectable()\nexport class AppGetService {\n    /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository \n   * @param userGroupRepository \n   * @param radcheckRepository \n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n\n  //* USER INFO *//\n  /**\n   * Solicita a grupos de 50 objetos 'userinfo'.\n   * @param { num } offset\n   * @returns [{Object}, {Object}, {Object}....]\n   */\n  async getUserInfo(offset: number) {\n    try {\n      const usersInfo = await this.userInfoRepository.findAll({\n        limit: 50,\n        offset: offset,\n        order: [['id', 'ASC']], // Orden ascendente por el campo 'id'\n      });\n\n      if (usersInfo?.length  } query \n   * @returns  Arra de objetos [{Object}, {Object}, {Object}, .....]\n   */\n  async userSearch(query: Array) {\n    try {\n      const usersInfo = await this.userInfoRepository.findAll({\n        where: {\n          [Op.or]: [\n            {username: {[Op.or]: query } },\n            {firstname: {[Op.or]: query } },\n            {lastname: {[Op.or]: query } },\n            {email: {[Op.or]: query } },\n          ]\n        },\n      });\n\n      if (usersInfo?.length  } query \n   * @returns  Arra de objetos [{Object}, {Object}, {Object}, .....]\n   */\n  async radCheckSearch(query: Array) {\n    try {\n      const usersInfo = await this.radcheckRepository.findAll({\n        where: {\n          [Op.or]: [\n            {username: {[Op.or]: query } },\n          ]\n        },\n      });\n\n      if (usersInfo?.length  } query \n   * @returns  Arra de objetos [{Object}, {Object}, {Object}, .....]\n   */\n  async radUserGroupSearch(query: Array) {\n    try {\n      const usersInfo = await this.userGroupRepository.findAll({\n        where: {\n          [Op.or]: [\n            {username: {[Op.or]: query } },\n          ]\n        },\n      });\n\n      if (usersInfo?.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nAppGetService\n\nAppGetService\n\nAppModule -->\n\nAppGetService->AppModule\n\n\n\n\n\nAppPutService\n\nAppPutService\n\nAppModule -->\n\nAppPutService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo principal de la aplicacion. Se injectan todas las depedencias, servicios y modulos necesarios.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppGetService\n                        \n                        \n                            AppPutService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './sequeelize/databse.module';\nimport { userProviders } from './sequeelize/user/user.providers';\nimport { radcheckProvider } from './sequeelize/rasdusercheck/radusercheck.provider';\nimport { userGroupProviders } from './sequeelize/radusergroup/usergroup.providers';\nimport { AppGetService } from './appGet.service';\nimport { AppPutService } from './appPut.service';\n\n/**\n * Modulo principal de la aplicacion. Se injectan todas las depedencias, servicios y modulos necesarios.\n */\n@Module({\n  imports: [\n    PrismaModule,\n    ConfigModule.forRoot({ isGlobal: true }),\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    AppGetService,\n    AppPutService,\n    ...userProviders,\n    ...radcheckProvider,\n    ...userGroupProviders,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppPutService.html":{"url":"injectables/AppPutService.html","title":"injectable - AppPutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppPutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appPut.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Esta ruta se encarga de manejar todas las rutas PUT para actualizar los datos en las tablas.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateRadCheck\n                            \n                            \n                                    Async\n                                updateUserGroup\n                            \n                            \n                                    Async\n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/appPut.service.ts:14\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRadCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRadCheck(query: UpdateRadCheckDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:57\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'radcheck', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateRadCheckDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserGroup(query: UpdateUserGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:78\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'radcheck', requeire unstring con un 'username' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(query: UpdateUserInfoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/appPut.service.ts:36\n                \n            \n\n\n            \n                \n                    Realiza el update de la tabla 'userinfo', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UpdateUserInfoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        1\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\nimport { UpdateUserInfoDto } from './dto/updateUserInfo.dto';\nimport { UpdateRadCheckDto } from './dto/updateRadCheck.dto';\nimport { UpdateUserGroupDto } from './dto/updateUerGroup.dto';\n\n/**\n * Esta ruta se encarga de manejar todas las rutas PUT para actualizar los datos en las tablas.\n */\n@Injectable()\nexport class AppPutService {\n    /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository \n   * @param userGroupRepository \n   * @param radcheckRepository \n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n\n  /**\n   * Realiza el update de la tabla 'userinfo', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateUserInfoDto } query\n   * @returns 1\n   */\n  async updateUserInfo( query: UpdateUserInfoDto ) {\n    try {\n      const { id, ...updateData } = query;\n\n      const updateUserInfo = await this.userInfoRepository.update(updateData, {\n        where: { id: id }, // Utilizar un objeto plano para el filtro 'where'\n      });\n\n      return updateUserInfo;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Realiza el update de la tabla 'radcheck', requeire un numero de 'id' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateRadCheckDto } query \n   * @returns  1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  async updateRadCheck(query: UpdateRadCheckDto) {\n    try {\n      const { id, ...updateData } = query;\n      \n      const updateRadCheck = await this.radcheckRepository.update(updateData, {\n        where: { id: id }, // Utilizar un objeto plano para el filtro 'where'\n      });\n\n      return updateRadCheck;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n    /**\n   * Realiza el update de la tabla 'radcheck', requeire unstring con un 'username' obligatoriamente para operar, de lo contrario la peticion es rechazada.\n   * @param { UpdateUserGroupDto } query \n   * @returns  1 si se realizo alguna operacion, 0 si no se realizo o de rechazo.\n   */\n  async updateUserGroup(query: UpdateUserGroupDto) {\n    try {\n      const { username, ...updateData } = query;\n\n      //* Retorna 1 si hace update, 0 si falla o no fue necesario.\n      const updateUserGroup = await this.userGroupRepository.update(updateData, {\n        where: { username: username },\n      });\n\n      return updateUserGroup;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Este servicio tiene como objetivo crear un nuevo userinfo, radcheck y radusergroup en una solo peticion para llenar los datos de las tablas. Por ende, solo se encuentra una unica peticion PUT en esta clase.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                postUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoRepository, userGroupRepository, radcheckRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            Se inyecta respositorios para los modelos de las tablas a usar.\nuserGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userGroupRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radcheckRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        postUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    postUser(dto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:35\n                \n            \n\n\n            \n                \n                    este metodo llenara las tablas userinfo, radcheck y radusergroup.\nNo todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\nConsulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        , userinfo, radcheck }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserInfo } from './sequeelize/user/user.entity';\nimport { UserDto } from './dto/user.dto';\nimport { UserGroup } from './sequeelize/radusergroup/usergroup.entity';\nimport { RadCheck } from './sequeelize/rasdusercheck/radcheck.entity';\n\n/**\n * Este servicio tiene como objetivo crear un nuevo userinfo, radcheck y radusergroup en una solo peticion para llenar los datos de las tablas. Por ende, solo se encuentra una unica peticion PUT en esta clase.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Se inyecta respositorios para los modelos de las tablas a usar.\n   * userGroupRepository obtiene de la tabla 'radusergroup', se acorto el nombre para facilitar el manejo, de usarse muchas mas tablas se aconseja modificar y usar el nombre completo.\n   * @param userInfoRepository\n   * @param userGroupRepository\n   * @param radcheckRepository\n   */\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userInfoRepository: typeof UserInfo,\n    @Inject('USERGROUP_REPOSITORY')\n    private userGroupRepository: typeof UserGroup,\n    @Inject('RADCHECK_REPOSITORY')\n    private radcheckRepository: typeof RadCheck,\n  ) {}\n  /**\n   * este metodo llenara las tablas userinfo, radcheck y radusergroup.\n   * No todos los valores son obligatorio pero algunos si en orden de no dejar campos vacios en la tabla. Encontrara que muchos campos son evaluado para ver si son llenados con informacion entrante, si el campo no existe o esta vacio se llena con ifo colocado apra funcionar por defecto.\n   * Consulte el archivo 'user.dto.ts' en 'src/dto/'  para ver todos los campos.\n   * @param { UserDto } dto\n   * @returns { usergroup, userinfo, radcheck }\n   * @todo Mover objetos a funciones u optro servicio que haga mas manejable la info.\n   */\n  async postUser(dto: UserDto) {\n    try {\n      const date = new Date();\n\n      const userinfo = await this.userInfoRepository.create({\n        username: dto.username,\n        firstname: dto.firstname,\n        lastname: dto.lastname,\n        email: dto.email,\n        department: dto.department ? dto.department : 'No department info',\n        company: dto.company ? dto.company : 'No company phone',\n        workphone: dto.workphone ? dto.workphone : 'No work phone',\n        homephone: dto.homephone ? dto.homephone : 'No home phone',\n        mobilephone: dto.mobilephone,\n        address: dto.address ? dto.address : 'No address',\n        city: dto.city ? dto.city : 'No city',\n        state: dto.state ? dto.state : 'No state',\n        country: dto.country ? dto.country : 'Venezuela',\n        zip: dto.zip ? dto.zip : '0000',\n        notes: dto.notes ? dto.notes : '',\n        changeuserinfo: dto.changeuserinfo ? dto.changeuserinfo : '0',\n        portalloginpassword: dto.portalloginpassword\n          ? dto.portalloginpassword\n          : '',\n        enableportallogin: dto.enableportallogin ? dto.enableportallogin : '0',\n        creationdate: date,\n        updatedate: date,\n        creationby: dto.creationby,\n        updateby: 'No update',\n      });\n\n      if (!userinfo) return 'No se creo el usuario';\n\n      const radcheck = await this.radcheckRepository.create({\n        username: dto.username,\n        attribute: dto.attribute, //! Pediente lista de atributos\n        op: dto.op, //! Pediente lista de op\n        value: dto.value,\n      });\n\n      console.log(!radcheck);\n\n      if (!radcheck) return 'No se creo el radcheck';\n\n      const usergroup = await this.userGroupRepository.create({\n        username: dto.username,\n        groupname: dto.groupname,\n        priority: dto.priority ? dto.priority : 1,\n      });\n\n      if (!usergroup) return 'No se creo el usergoup';\n\n      return { usergroup, userinfo, radcheck };\n    } catch (err) {\n      return err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sequeelize/databse.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Modulo del proveedor de la base de datos para la API.\nEl ORM es Sequelize.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n/**\n * Modulo del proveedor de la base de datos para la API.\n * El ORM es Sequelize.\n */\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Este servicio solo se uso para poder traer los modelos desde la BD, pero dado la naturaleza de MariaDB y de la poca compatibilidad de prisma, se adapto para usar sequelize.\n\n            \n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:10\n                            \n                        \n\n                \n                    \n                            Conexion a la base de datos por medio de una url.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n/**\n * Este servicio solo se uso para poder traer los modelos desde la BD, pero dado la naturaleza de MariaDB y de la poca compatibilidad de prisma, se adapto para usar sequelize.\n */\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  /**\n   * Conexion a la base de datos por medio de una url.\n   * @param { ConfigService } config \n   */\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RadCheck.html":{"url":"classes/RadCheck.html","title":"class - RadCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RadCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/rasdusercheck/radcheck.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'radcheck'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attribute\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                op\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:23\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:13\n                        \n                    \n\n            \n                \n                    id en numeros enteros, autoincremental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, defaultValue: '=='})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:28\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:18\n                        \n                    \n\n            \n                \n                    Nombre del usuario asociado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/rasdusercheck/radcheck.entity.ts:33\n                        \n                    \n\n            \n                \n                    ???\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'radcheck'.\n */\n@Table({ tableName: 'radcheck',  timestamps: false  })\nexport class RadCheck extends Model {\n  /**\n   * id en numeros enteros, autoincremental.\n   */\n  @Column({ type: DataType.INTEGER, primaryKey: true, autoIncrement: true, })\n  id: number;\n  /**\n   * Nombre del usuario asociado.\n   */\n  @Column({ type: DataType.STRING(64), allowNull: false })\n  username: string;\n  /**\n   * ????\n   */\n  @Column({ type: DataType.STRING(64), allowNull: false })\n  attribute: string;\n  /**\n  * ???? \n  */\n  @Column({ type: DataType.CHAR(2), allowNull: false, defaultValue: '==' })\n  op: string;\n  /**\n   * ???\n   */\n  @Column({ type: DataType.STRING(253), allowNull: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchDto.html":{"url":"classes/SearchDto.html","title":"class - SearchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/seacrh.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Este DTO se usa para recibir un array de string con los parametros de busqueda para los search de las tablas.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/seacrh.dto.ts:13\n                        \n                    \n\n            \n                \n                    Objeto que contiene un array de string\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray } from 'class-validator';\n\n/**\n * Este DTO se usa para recibir un array de string con los parametros de busqueda para los search de las tablas. \n */\nexport class SearchDto {\n  /**\n   * Objeto que contiene un array de string\n   * @example query = {[\"string\", \"string\", \"string\", ....]}\n   */\n  @IsArray()\n  query: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRadCheckDto.html":{"url":"classes/UpdateRadCheckDto.html","title":"class - UpdateRadCheckDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRadCheckDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateRadCheck.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que verifica los datos recibidos para hacer un update de cualquier fila de la tabla \"radcheck\".\nEl campos 'id' se obligatorio más un campo a modificar.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:35\n                        \n                    \n\n            \n                \n                    Función desconocida.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:20\n                        \n                    \n\n            \n                \n                    id en numeros enteros.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:43\n                        \n                    \n\n            \n                \n                    Operación ejecutada por el servidor freeRadius.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:27\n                        \n                    \n\n            \n                \n                    Nombre de usuario asociado a un servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateRadCheck.dto.ts:51\n                        \n                    \n\n            \n                \n                    Por definir.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsOptional,\n\tIsInt,\n} from 'class-validator';\n\n/**\n * Interfaz que verifica los datos recibidos para hacer un update de cualquier fila de la tabla \"radcheck\".\n * El campos 'id' se obligatorio más un campo a modificar.\n */\nexport class UpdateRadCheckDto {\n\n  /**\n   * id en numeros enteros.\n   */\n\t@IsInt()\n\t@IsNotEmpty()\n\tid: number;\n\n  /**\n   * Nombre de usuario asociado a un servicio.\n   */\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  /**\n   * Función desconocida.\n   * @todo Verificar la lista de atributos.\n   */\n  @IsOptional()\n  @IsString()\n  attribute: string;\n\n  /**\n   * Operación ejecutada por el servidor freeRadius.\n   * @todo Verificar la lista de operaciones.\n   */\n  @IsOptional()\n  @IsString()\n  op: string;\n\n  /**\n   * Por definir.\n   * @todo verificar la logica deseada para el atributo.\n   */\n  @IsOptional()\n  @IsString()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserGroupDto.html":{"url":"classes/UpdateUserGroupDto.html","title":"class - UpdateUserGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateUerGroup.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Intefaz para modificar la tabla \"radusergroup\".\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:25\n                        \n                    \n\n            \n                \n                    Tipo de servicio asociado al usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:32\n                        \n                    \n\n            \n                \n                    Prioridad de servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUerGroup.dto.ts:18\n                        \n                    \n\n            \n                \n                    Nombre de usuario asociado a un servicio.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsNumber,\n  IsOptional,\n} from 'class-validator';\n\n/**\n * Intefaz para modificar la tabla \"radusergroup\".\n */\nexport class UpdateUserGroupDto {\n  /**\n   * Nombre de usuario asociado a un servicio.\n   */\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  /**\n   * Tipo de servicio asociado al usuario.\n   */\n  @IsOptional()\n  @IsString()\n  groupname: string;\n\n  /**\n   * Prioridad de servicio.\n   */\n  @IsOptional()\n  @IsNumber()\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInfoDto.html":{"url":"classes/UpdateUserInfoDto.html","title":"class - UpdateUserInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/updateUserInfo.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para modificar los valores de una fila en la tabla \"userinfo\".\nEl campo 'updateby' es obligartoio junto con el campo 'id' más un valo a modificar.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                updateby\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:109\n                        \n                    \n\n            \n                \n                    Dirección.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:151\n                        \n                    \n\n            \n                \n                    Se desconoce la intención de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:116\n                        \n                    \n\n            \n                \n                    Ciudad dónde se presta el servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:88\n                        \n                    \n\n            \n                \n                    Compañía, si aplica.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:130\n                        \n                    \n\n            \n                \n                    País, si llegara a aplicar. Por defecto la APi coloca \"Venezuela\"  en el campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:81\n                        \n                    \n\n            \n                \n                    Dirección de apartamento.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:63\n                        \n                    \n\n            \n                \n                    Correo electrónico, debe estar en un formato válido para no ser rechazado por la interfaz.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:165\n                        \n                    \n\n            \n                \n                    Se desconoce la intención de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:49\n                        \n                    \n\n            \n                \n                    Primer nombre legal del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:102\n                        \n                    \n\n            \n                \n                    Teléfono de habitación.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:28\n                        \n                    \n\n            \n                \n                    Id en numeros enteros de la fila.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:56\n                        \n                    \n\n            \n                \n                    Segundo nombre legal del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:72\n                        \n                    \n\n            \n                \n                    Número de celular.\nNo se impolmento el decorado @IsPhone dado que no evalua de forma aceptada el formato de números de tlf de Venezuela.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:144\n                        \n                    \n\n            \n                \n                    Notas que sean útiles sobre el usuario del servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:42\n                        \n                    \n\n            \n                \n                    Contraseña.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:158\n                        \n                    \n\n            \n                \n                    Se desconoce la intención de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:123\n                        \n                    \n\n            \n                \n                    Estado dónde se presta el servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:21\n                        \n                    \n\n            \n                \n                    Que usuario del sistema realiza la actualizacion de los datos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:35\n                        \n                    \n\n            \n                \n                    Nombre de usuario a quien se le presta un servicio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:95\n                        \n                    \n\n            \n                \n                    Teléfono de trabajo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/updateUserInfo.dto.ts:137\n                        \n                    \n\n            \n                \n                    Código postal.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsEmail,\n  IsNumber,\n  IsOptional,\n  IsInt,\n} from 'class-validator';\n\n/**\n * Interfaz para modificar los valores de una fila en la tabla \"userinfo\".\n * El campo 'updateby' es obligartoio junto con el campo 'id' más un valo a modificar.\n */\nexport class UpdateUserInfoDto {\n  /**\n   * Que usuario del sistema realiza la actualizacion de los datos.\n   */\n  @IsNotEmpty()\n  @IsString()\n  updateby: string;\n\n  /**\n   * Id en numeros enteros de la fila.\n   */\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n\n  /**\n   * Nombre de usuario a quien se le presta un servicio.\n   */\n  @IsOptional()\n  @IsString()\n  username: string;\n\n  /**\n   * Contraseña.\n   */\n  @IsOptional()\n  @IsString()\n  password: string;\n\n  /**\n   * Primer nombre legal del usuario.\n   */\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  /**\n   * Segundo nombre legal del usuario.\n   */\n  @IsOptional()\n  @IsString()\n  lastname: string;\n\n  /**\n   * Correo electrónico, debe estar en un formato válido para no ser rechazado por la interfaz.\n   */\n  @IsOptional()\n  @IsEmail()\n  email: string;\n\n  /**\n   * Número de celular.\n   * No se impolmento el decorado @IsPhone dado que no evalua de forma aceptada el formato de números de tlf de Venezuela.\n   * @todo crear un decorador perzonalizado para los nnúmeros telefónicos.\n   */\n  @IsOptional()\n  @IsNotEmpty()\n  mobilephone: string;\n\n  // No obligatorios\n\n  /**\n   * Dirección de apartamento.\n   */\n  @IsString()\n  @IsOptional()\n  department: string;\n\n  /**\n   * Compañía, si aplica.\n   */\n  @IsString()\n  @IsOptional()\n  company: string;\n\n  /**\n   * Teléfono de trabajo.\n   */\n  @IsString()\n  @IsOptional()\n  workphone: string;\n\n  /**\n   * Teléfono de habitación.\n   */\n  @IsString()\n  @IsOptional()\n  homephone: string;\n\n  /**\n   * Dirección.\n   */\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  /**\n   * Ciudad dónde se presta el servicio.\n   */\n  @IsOptional()\n  @IsString()\n  city: string;\n\n  /**\n   * Estado dónde se presta el servicio.\n   */\n  @IsOptional()\n  @IsString()\n  state: string;\n\n  /**\n   * País, si llegara a aplicar. Por defecto la APi coloca \"Venezuela\"  en el campo.\n   */\n  @IsOptional()\n  @IsString()\n  country: string;\n\n  /**\n   * Código postal.\n   */\n  @IsOptional()\n  @IsNumber()\n  zip: string;\n\n  /**\n   * Notas que sean útiles sobre el usuario del servicio.\n   */\n  @IsOptional()\n  @IsString()\n  notes: string;\n\n  /**\n   * Se desconoce la intención de este campo.\n   */\n  @IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n  /**\n   * Se desconoce la intención de este campo.\n   */\n  @IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n  /**\n   * Se desconoce la intención de este campo.\n   */\n  @IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para la creacion de un nuevo usuario en la tablas \"userinfo\", \"radcheck\" y \"radusergroup\".\nEl primer grupo de campo pertenecen a los campo minimos obligatorio para la creacion de un usuario en \"userinfo\".\nEs seguido de campo opcionales, no importa que estos no lleguen, la API se encarga de llenar los campos vacios.\nSiguen los campo de \"radcheck\", algunos de los campos estan en discusion.\nFinalmente los campos de \"usergroup\", igualmente esta tabla.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                attribute\n                            \n                            \n                                    \n                                    \n                                changeuserinfo\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                creationby\n                            \n                            \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                enableportallogin\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                groupname\n                            \n                            \n                                    \n                                    \n                                homephone\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                mobilephone\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                op\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                portalloginpassword\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                            \n                                    \n                                    \n                                workphone\n                            \n                            \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:103\n                        \n                    \n\n            \n                \n                    Dirección de residencia.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:168\n                        \n                    \n\n            \n                \n                    Por definir\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        changeuserinfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:145\n                        \n                    \n\n            \n                \n                    Se desconoce el motivo de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:110\n                        \n                    \n\n            \n                \n                    Ciudad de residencia.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:82\n                        \n                    \n\n            \n                \n                    Compañía si aplica.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:124\n                        \n                    \n\n            \n                \n                    País, por defecto coloca \"Venezuela\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:24\n                        \n                    \n\n            \n                \n                    Que usuario del sistema crea la tabla.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:75\n                        \n                    \n\n            \n                \n                    Departamento de residencia-\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:59\n                        \n                    \n\n            \n                \n                    Correo electrónico, debe estar en el formato correcto o será rechazado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enableportallogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:159\n                        \n                    \n\n            \n                \n                    Se desconoce el motivo de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:45\n                        \n                    \n\n            \n                \n                    Primer nombre legal del cliente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:191\n                        \n                    \n\n            \n                \n                    Servicio al que pertenece el usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        homephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:96\n                        \n                    \n\n            \n                \n                    Teléfono de casa.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:52\n                        \n                    \n\n            \n                \n                    Apellido del cliente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobilephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:66\n                        \n                    \n\n            \n                \n                    Número de celular.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:138\n                        \n                    \n\n            \n                \n                    Notas sobre el cliente que puedan resultar útiles.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        op\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:175\n                        \n                    \n\n            \n                \n                    Operacion realizada por el router.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:38\n                        \n                    \n\n            \n                \n                    Contraseña.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        portalloginpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:152\n                        \n                    \n\n            \n                \n                    Se desconoce el motivo de este campo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:198\n                        \n                    \n\n            \n                \n                    Prioridad de uso del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:117\n                        \n                    \n\n            \n                \n                    Estado de residencia.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:31\n                        \n                    \n\n            \n                \n                    Nombre de usuario del cliente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:182\n                        \n                    \n\n            \n                \n                    Por definir.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workphone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:89\n                        \n                    \n\n            \n                \n                    Teléfono de trabajo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:131\n                        \n                    \n\n            \n                \n                    Código postal.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsEmail,\n  IsNumber,\n  IsOptional,\n} from 'class-validator';\n\n/**\n * Interfaz para la creacion de un nuevo usuario en la tablas \"userinfo\", \"radcheck\" y \"radusergroup\".\n * El primer grupo de campo pertenecen a los campo minimos obligatorio para la creacion de un usuario en \"userinfo\".\n * Es seguido de campo opcionales, no importa que estos no lleguen, la API se encarga de llenar los campos vacios.\n * Siguen los campo de \"radcheck\", algunos de los campos estan en discusion.\n * Finalmente los campos de \"usergroup\", igualmente esta tabla.\n */\nexport class UserDto {\n  /**\n   * Que usuario del sistema crea la tabla.\n   */\n  @IsNotEmpty()\n  @IsString()\n  creationby: string;\n\n  /**\n   * Nombre de usuario del cliente.\n   */\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  /**\n   * Contraseña.\n   */\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  /**\n   * Primer nombre legal del cliente.\n   */\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  /**\n   * Apellido del cliente.\n   */\n  @IsNotEmpty()\n  @IsString()\n  lastname: string;\n\n  /**\n   * Correo electrónico, debe estar en el formato correcto o será rechazado.\n   */\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  /**\n   * Número de celular.\n   */\n  @IsString()\n  @IsNotEmpty()\n  mobilephone: string;\n\n  //* No obligatorios *//\n\n  /**\n   * Departamento de residencia-\n   */\n  @IsString()\n  @IsOptional()\n  department: string;\n\n  /**\n   * Compañía si aplica.\n   */\n  @IsString()\n  @IsOptional()\n  company: string;\n\n  /**\n   * Teléfono de trabajo.\n   */\n  @IsString()\n  @IsOptional()\n  workphone: string;\n\n  /**\n   * Teléfono de casa.\n   */\n  @IsString()\n  @IsOptional()\n  homephone: string;\n\n  /**\n   * Dirección de residencia.\n   */\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  /**\n   * Ciudad de residencia.\n   */\n  @IsOptional()\n  @IsString()\n  city: string;\n\n  /**\n   * Estado de residencia.\n   */\n  @IsOptional()\n  @IsString()\n  state: string;\n\n  /**\n   * País, por defecto coloca \"Venezuela\".\n   */\n  @IsOptional()\n  @IsString()\n  country: string;\n\n  /**\n   * Código postal.\n   */\n  @IsOptional()\n  @IsNumber()\n  zip: string;\n\n  /**\n   * Notas sobre el cliente que puedan resultar útiles.\n   */\n  @IsOptional()\n  @IsString()\n  notes: string;\n\n  /**\n   * Se desconoce el motivo de este campo.\n   */\n  @IsOptional()\n  @IsString()\n  changeuserinfo: string;\n\n  /**\n   * Se desconoce el motivo de este campo.\n   */\n  @IsOptional()\n  @IsString()\n  portalloginpassword: string;\n\n  /**\n   * Se desconoce el motivo de este campo.\n   */\n  @IsOptional()\n  @IsNumber()\n  enableportallogin: number;\n\n  //* RADCHECK *//\n\n  /**\n   * Por definir\n   */\n  @IsNotEmpty()\n  @IsString()\n  attribute: string;\n\n  /**\n   * Operacion realizada por el router.\n   */\n  @IsNotEmpty()\n  @IsString()\n  op: string;\n\n  /**\n   * Por definir.\n   */\n  @IsNotEmpty()\n  @IsString()\n  value: string;\n\n  //* RADUSERGROUP *//\n\n  /**\n   * Servicio al que pertenece el usuario.\n   */\n  @IsNotEmpty()\n  @IsString()\n  groupname: string;\n\n  /**\n   * Prioridad de uso del usuario.\n   */\n  @IsNotEmpty()\n  @IsNumber()\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserGroup.html":{"url":"classes/UserGroup.html","title":"class - UserGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/radusergroup/usergroup.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'radusergroup'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                groupname\n                            \n                            \n                                    \n                                priority\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groupname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'groupname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:17\n                        \n                    \n\n            \n                \n                    Asociado al plan de servicio contratado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'priority'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:25\n                        \n                    \n\n            \n                \n                    ????\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'username', primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/radusergroup/usergroup.entity.ts:12\n                        \n                    \n\n            \n                \n                    Nombre del usuario asociado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'radusergroup'.\n */\n@Table({ tableName: 'radusergroup', timestamps: false })\nexport class UserGroup extends Model {\n  /**\n   * Nombre del usuario asociado.\n   */\n  @Column({ type: DataType.STRING(128), field: 'username', primaryKey: true })\n  username: string;\n  /**\n   * Asociado al plan de servicio contratado.\n   */\n  @Column({ type: DataType.STRING(200), field: 'groupname' })\n  groupname: string;\n  /**\n   * ????\n   */\n  @Column({\n    type: DataType.INTEGER,\n    field: 'priority',\n  })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sequeelize/user/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo de la tabla 'userinfo'.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                creationby\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstname\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastname\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                updateby\n                            \n                            \n                                    \n                                updatedate\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'country'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:91\n                        \n                    \n\n            \n                \n                    Este parametro se coloca por defecto como Venezuela.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creationby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'creationby'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:145\n                        \n                    \n\n            \n                \n                    Se pide un valor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:37\n                        \n                    \n\n            \n                \n                    Correo electronico/\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:27\n                        \n                    \n\n            \n                \n                    Nombre legarl\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:17\n                        \n                    \n\n            \n                \n                    id en numeros enteros, autoincremental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:32\n                        \n                    \n\n            \n                \n                    Apellido\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'notes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:103\n                        \n                    \n\n            \n                \n                    String vacio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'updateby'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:161\n                        \n                    \n\n            \n                \n                    El valor es creado automaticamente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'updatedate', defaultValue: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:155\n                        \n                    \n\n            \n                \n                    El valor es creado automaticamente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sequeelize/user/user.entity.ts:22\n                        \n                    \n\n            \n                \n                    Nombre de usuario.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType } from 'sequelize-typescript';\n\n/**\n * Modelo de la tabla 'userinfo'.\n */\n@Table({ tableName: 'userinfo', timestamps: false })\nexport class UserInfo extends Model {\n  /**\n   * id en numeros enteros, autoincremental.\n   */\n  @Column({\n    type: DataType.INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n    field: 'id',\n  })\n  id: number;\n  /**\n   * Nombre de usuario.\n   */\n  @Column({ type: DataType.STRING(128), field: 'username' })\n  username: string;\n  /**\n   * Nombre legarl\n   */\n  @Column({ type: DataType.STRING(200), field: 'firstname' })\n  firstname: string;\n  /**\n   * Apellido\n   */\n  @Column({ type: DataType.STRING(200), field: 'lastname' })\n  lastname: string;\n  /**\n   * Correo electronico/\n   */\n  @Column({ type: DataType.STRING(200), field: 'email' })\n  email: string;\n  //* La matoria de lo siguientes aprametros son solocados como opcionales.\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'department' })\n  department: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'company' })\n  company: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'workphone' })\n  workphone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'homephone' })\n  homephone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'mobilephone' })\n  mobilephone: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'address' })\n  address: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'city' })\n  city: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'state' })\n  state: string;\n  /**\n   * Este parametro se coloca por defecto como Venezuela.\n   */\n  @Column({ type: DataType.STRING(100), field: 'country' })\n  country: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(200), field: 'zip' })\n  zip: string;\n\n  /**\n   * String vacio.\n   */\n  @Column({ type: DataType.STRING(200), field: 'notes' })\n  notes: string;\n\n  /**\n   * @ignore\n   */\n  @Column({ type: DataType.STRING(128), field: 'changeuserinfo' })\n  changeuserinfo: string;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.STRING(128),\n    field: 'portalloginpassword',\n    defaultValue: '',\n  })\n  portalloginpassword: string;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.INTEGER,\n    field: 'enableportallogin',\n    defaultValue: 0,\n  })\n  enableportallogin: number;\n\n  /**\n   * @ignore\n   */\n  @Column({\n    type: DataType.DATE,\n    field: 'creationdate',\n    defaultValue: DataType.NOW,\n  })\n  creationdate: Date;\n\n  /**\n   * Se pide un valor.\n   */\n  @Column({ type: DataType.STRING(128), field: 'creationby' })\n  creationby: string;\n\n  /**\n   * El valor es creado automaticamente.\n   */\n  @Column({\n    type: DataType.DATE,\n    field: 'updatedate',\n    defaultValue: DataType.NOW,\n  })\n  updatedate: Date;\n\n  /**\n   * El valor es creado automaticamente.\n   */\n  @Column({ type: DataType.STRING(128), field: 'updateby' })\n  updateby: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/appGet.service.ts\n            \n            injectable\n            AppGetService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/appPut.service.ts\n            \n            injectable\n            AppPutService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dto/seacrh.dto.ts\n            \n            class\n            SearchDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dto/updateRadCheck.dto.ts\n            \n            class\n            UpdateRadCheckDto\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/dto/updateUerGroup.dto.ts\n            \n            class\n            UpdateUserGroupDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/dto/updateUserInfo.dto.ts\n            \n            class\n            UpdateUserInfoDto\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/sequeelize/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/radusergroup/usergroup.entity.ts\n            \n            class\n            UserGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/sequeelize/radusergroup/usergroup.providers.ts\n            \n            variable\n            userGroupProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/rasdusercheck/radcheck.entity.ts\n            \n            class\n            RadCheck\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/sequeelize/rasdusercheck/radusercheck.provider.ts\n            \n            variable\n            radcheckProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sequeelize/user/user.entity.ts\n            \n            class\n            UserInfo\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/sequeelize/user/user.providers.ts\n            \n            variable\n            userProviders\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/helmet : ^10.1.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.4.2\n        \n            @prisma/client : ^4.15.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            fastify-cors : ^6.1.0\n        \n            mariadb : ^3.1.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.32.0\n        \n            sequelize-typescript : ^2.1.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Inicia la aplicacion, el puerto puede ser modificado de acuerdo a las necesidades.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI para freeRadius de Netcom Plus\n\n\nCreado haciendo uso del framework Nest.JS sobre Fastify.\n\n\n\n\n  \n\nDescripción\nDescripción General\nLa API funciona con Fastify para lograr una aplicación más ligera que la que se tendría con Express y mucho más rápida al momento de procesar las peticiones.\nComo el Framework de trabajo es Nest.Js , todo el código usa TypeScript, con una arquitectura de programación orientada a objetos (OOP) dónde el modelo básico es:\nUn controlador: Encargado de manera las peticiones que entran a la API.\nUn servicio: Que contiene las distintas lógicas que soportan las funciones de la API.\nUn modulo:  Que se encarga de comunicar los distintos componentes de la API. \n\n\nCarpetas y Arquitectura general\ngraph LR\nA[Main] --Main inicia la App --> B(AppModule) \nB --> C(AppController)\nB --> D(AppServices)\nD --> E(appGetService)\nD --> F(appPutService)\nD --> G(appPostService)\nB --> H(Sequelize)\nB --> I(dto)Aquí se puede ver la arquitectura general de la app.  Normalmente el modulo App sirve como ruta general de entrada y luego se divide en submódulos que alimentan a la app, pero dado que la aplicación tiene pocas funciones de momento, se deicidio dejarlo en un único modulo. \n\n Si la aplicación llega a crecer mucho se recomienda separarlo en módulos más pequeños.\n\nLa clase AppController es quién posee las rutas (endpoints) de la app y llama a los métodos contenidos en cada uno de los servicios. Normalmente habría un solo archivo de servicios pero para mayor facilidad se separo según el tipo de petición HTTP.\nLa carpeta dto contiene las clases DTO  (Data Transfer Object), que sirven de interfaz al momento de verificar que llega a través del Body y los tipos de datos, de las distintas requests, si no cumplen con el DTO la reques se rechaza.\n\nSi bien se puede usar una interfaz, como tal JavaScript no posee interfaces, estas al momento de la transpilación son desechadas, perdiendo una capa de seguridad, por eso la documentación de Nest recomienda el uso de clases.\n\nFinalmente la carpeta Sequelize contiene la conexión a la BD. La base de datos para la aplicación se encuentra desplegada en MariaDB pero la conexion hasta el momento se a trabajado con MySql.\n\n  \nFastify\nFastify es un framework web rápido y eficiente para Node.js. Está diseñado para ser altamente escalable y rendir al máximo, optimizando el tiempo de respuesta y el consumo de recursos. \nNo hay que preocuparse mucho por aprender a manejar este Framework, ya que por lo general la sintaxis es manejada a través de Nest.Js, sin embargo, algunos paquetes para construir la API deben ser específicos de Fastify, por lo que requerirán un manejo particular para poder funcionar, como CORS o Helmet. Consulte las documentación pertinente según el caso. \nInstalación\nObviamente requerimos Node.js, no se ha probado con Deno.js.\nDeno.js debiera poder soportar la App, dando una capa extra de seguridad y una mayor velocidad a la app.\n\n$  npm  install\nCorriendo la app\n  Necesita Node.JS para correr la App.\n  No se ha testeado en Deno.Js.\n\n# Desarrollo\n\n$  npm  run  start\n\n  \n\n# Modo watch \n#\tEste modo está constantemente escuchando los cambios \n#\tque se realizan en los archivos y reinicia la aplicación.\n\n$  npm  run  start:dev\n\n  \n\n# Modo de producción.\n\n$  npm  run  start:prod\nTest\n  Hasta el momento no se han escrito test para la aplicación. Nest viene con algunos test por default.\n\n# unit tests\n\n$  npm  run  test\n\n  \n\n# e2e tests\n\n$  npm  run  test:e2e\n\n  \n\n# test coverage\n\n$  npm  run  test:cov\nRutas\nRutas Post\nPOST domain/\nEsta ruta crea un nuevo usuario de los servicios y llena las tres tablas requeridas, \"userinfo\", \"radcheck\" y \"radusergroup\".\nValores mínimos requerido en el Body:\nJSON {\n\nusername  :\tstring,\npassword\" :\tstring,\nfirstname : string,\nlastname  : string,\nemail\t  : string (debe ser un formato válido),\nmobilephone : string,\nattribute : string,\nop\t\t  : string (de max-length 2),\nvalue\t  : araujo,\ngroupname :\tstring (plan asociado al cliente),\npriority  : number,\ncreateby\":  string (del usuario que crea el objeto)\n\n}\nSin embargo puede crear una respuesta aún más completa, si no llena los campos completos la API lo hace por usted colocando valores por defecto y evitando dejar espacios vacios en la BD.\nJSON {\n// Campos obligatorio de UserInfo\ncreationby\t:  string,\nusername\t:  string,\npassword\t:  string,\nfirstname\t:  string,\nlastname\t:  string,\nemail\t\t:  string,\nmobilephone :  string,\n\n// No obligatorios de \"userinfo\"\n\ndepartment :  string;\ncompany\t   :  string;\nworkphone  :  string;\nhomephone  :  string;\naddress    :  string;\ncity       :  string;\nstate      :  string;\ncountry    :  string;\nzip \t   :  string;\nnotes\t   :  string;\nchangeuserinfo \t\t:  string,\nportalloginpassword\t:  string,\nenableportallogin\t:  number,\n\n//* RADCHECK *//\nattribute\t:  string,\nop\t\t\t:  string,\nvalue\t\t:  string,\n\n//* RADUSERGROUP *//\ngroupname\t:  string,\npriority\t:  number\n\n}Rutas Put\nPUT domain/\n\nEn domain iría el nombre de dominio o IP donde se aloje la API.\nPor ejemplo: https://mi-api-freeradius.com/\nó\nejemplo: https://64.192.2.0/\nCompare el ejemplo dado con el ejemplo de más abajo.\n\nEsta ruta permite editar los valores de una fila en la tabla \"userinfo\", por lo que solo se requiere de manera obligatoria el \"id\" que debe ser un número entero, \"updateby\" que debe ser el nombre del usuario que realiza la actualización y finalmente un cambio en alguno de los valores. De faltar alguno se rechaza la operación.\nRetorna 0 si la operación fue exitosa o 1 su fue rechazada.\n\nJSON {\n\nupdateby\t:  string, # campo requerido\nid\t\t\t:  number, \t   # campo requerido\n\n# el resto de los campo son opcionales,\n# envie los que necesite modificar.\n\nusername\t:  string,\npassword\t:  string,\nfirstname\t:  string,\nlastname\t:  string,\nemail\t\t:  string,\nmobilephone :  string,\ndepartment  :  string,\ncompany\t\t:  string,\nworkphone\t:  string,\nhomephone\t:  string,\naddress\t\t:  string,\ncity\t\t:  string,\nstate\t\t:  string,\ncountry\t\t:  string,\nzip\t\t\t:  string,\nnotes\t\t:  string,\nchangeuserinfo\t\t: string,\nportalloginpassword\t:string,\nenableportallogin\t:  number\n\n}\n\n\nPUT domain/radcheck\nPermite editar los valores de un fila de la tabla \"radcheck\", requiere de manera obligatoria un \"id\" de tipo número entero para encontrar la fila a editar y y nuevo valor para realizar el cambio, de lo contrario se rechaza la operación.\n\nEn domain iría el nombre de dominio o IP donde se aloje la API.\nPor ejemplo: https://mi-api-freeradius.com/radcheck\nó\nejemplo: https://64.192.2.0/radcheck\n    Compare el ejemplo dado con el ejemplo de arriba.\n\nJSON {\n\nid\t\t\t:  number, # obligatorio\nusername\t:  string,\nattribute\t:  string,\nop\t\t\t:  string,\nvalue\t\t:  string;\n\n}  \n  \nPUT domain/radusergroup\nPermite editar los valores de la tabla \"usergroup\", esta tabla particularmente no contiene \"id\" que permitan identificar los valores contenidos, en Sequelize se usó el campo \"username\" como Primary Key, por tanto, usamos ese campo para realizar las búsquedas y la ediciones de la tabla.\nJSON {\n\nusername\t:  string, # obligatorio\ngroupname\t:  string,\npriority\t:  number,\n\n}Rutas Get\nGET domain/page/:offset\nLas esta ruta trabaja con paginado de los elementos de la BD en la tabla \"userinfo\". Se debe enviar un número entero por Param en el offset dónde la primera página debe ser 0, la segunda 1, la tercera 2 etc.\nRegresa un array de objetos \"userinfo\".\n\nGET domain/:id\nRegresa un único objeto \"userinfo\", se debe enviar un número entero por Param con el id del objeto a buscar. Se pretende que esta ruta sirva de ayuda para ver el detalle de un \"userinfo\" y poder editar su información.\n\nGET radcheck/page/:offset\nLas esta ruta trabaja con paginado de los elementos de la BD en la tabla \"radcheck\". Se debe enviar un número entero por Param en el offset dónde la primera página debe ser 0, la segunda 1, la tercera 2 etc.\nRegresa un array de objetos \"radusergroup\". \n\nGET  radcheck/:username\nRegresa un único objeto \"userinfo\", se debe enviar un nombre en forma de string por Param con el id del objeto a buscar. Se pretende que esta ruta sirva de ayuda para ver el detalle de un \"radusergroup\" y poder editar su información.\n\nGET radcheck/:id\nLas esta ruta trabaja con paginado de los elementos de la BD en la tabla \"radcheck\". Se debe enviar un número entero por Param en el offset dónde la primera página debe ser 0, la segunda 1, la tercera 2 etc.\nRegresa un array de objetos \"radcheck\". \n\nGET radusergroup/:username\nRegresa un único objeto \"userinfo\", se debe enviar un nombre en forma de string por Param con el id del objeto a buscar. Se pretende que esta ruta sirva de ayuda para ver el detalle de un \"radusergroup\" y poder editar su información.\n\nCreado por\n\nAutor - FranSabt\n\nLicencia\n\"Esta aplicación,  es propiedad exclusiva de NetcomPlus. Todos los derechos de propiedad intelectual relacionados con la aplicación, incluyendo, pero no limitándose a, derechos de autor, marcas comerciales y patentes, están debidamente registrados y reservados.\n Se ha invertido tiempo, recursos y esfuerzo considerable en su creación, y su contenido, diseño, funcionalidad y características únicas son propiedad exclusiva de NetcomPlus.\nCualquier reproducción, distribución, modificación, adaptación o uso no autorizado de esta aplicación sin el consentimiento expreso por escrito de NetcomPlus está estrictamente prohibido. Además, queda prohibida la extracción, recopilación o uso de cualquier dato, información o contenido de esta aplicación sin la autorización correspondiente.\nNetcomPlus se reserva el derecho de tomar las medidas legales adecuadas para proteger sus derechos de propiedad intelectual en caso de infracción. Se realizarán esfuerzos razonables para mantener la precisión y disponibilidad de la aplicación, pero NetcomPlus no se hace responsable de cualquier interrupción o daño que pueda resultar del uso de esta aplicación.\nAl utilizar esta aplicación, aceptas cumplir con estos términos y condiciones, así como con cualquier política o guía adicional establecida por NetcomPlus. En caso de dudas o consultas sobre los derechos de propiedad intelectual de esta aplicación, puedes comunicarte con NetcomPlus.\nAl descargar, acceder o utilizar esta aplicación, reconoces y aceptas que todos los derechos están reservados y que cualquier infracción o uso no autorizado puede dar lugar a acciones legales.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nAppGetService\n\nAppGetService\n\nAppModule -->\n\nAppGetService->AppModule\n\n\n\n\n\nAppPutService\n\nAppPutService\n\nAppModule -->\n\nAppPutService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            radcheckProvider   (src/.../radusercheck.provider.ts)\n                        \n                        \n                            userGroupProviders   (src/.../usergroup.providers.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/sequeelize/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async () => {\n      const sequelize = new Sequelize({\n        dialect: 'mariadb',\n        // host: '10.2.73.20',\n        host: 'localhost',\n        port: 3306,\n        // username: 'fran',\n        username: 'root',\n        password: '7448280',\n        // database: 'radius ',\n        database: 'nest',\n\n      });\n      sequelize.addModels([UserInfo, UserGroup, RadCheck]);\n      await sequelize.sync();\n      return sequelize;\n    },\n  },\n]\n                    \n                \n\n            \n                \n                    Conexion a la BD.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/rasdusercheck/radusercheck.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        radcheckProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'RADCHECK_REPOSITORY',\n    useValue: RadCheck,\n  },\n]\n                    \n                \n\n            \n                \n                    Se exporta el modelo para que sea accesible.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/radusergroup/usergroup.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userGroupProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USERGROUP_REPOSITORY',\n    useValue:UserGroup,\n  },\n]\n                    \n                \n\n            \n                \n                    Se exporta el modelo para que sea accesible.\n\n                \n            \n\n        \n    \n\n    src/sequeelize/user/user.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USER_REPOSITORY',\n    useValue:UserInfo,\n  },\n]\n                    \n                \n\n            \n                \n                    Se exporta el modelo para que sea accesible.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
